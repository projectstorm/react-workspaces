/*! For license information please see 855.1278d2c6.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_projectstorm_react_workspaces_demos=self.webpackChunk_projectstorm_react_workspaces_demos||[]).push([[855],{"../node_modules/.pnpm/@storybook+addon-docs@8.4.5_@types+react@18.3.12_storybook@8.4.5_prettier@3.4.1__webpack-sources@3.2.3/node_modules/@storybook/addon-docs/dist/chunk-H6MOWX77.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";Object.create,Object.defineProperty,Object.getOwnPropertyDescriptor,Object.getOwnPropertyNames,Object.getPrototypeOf,Object.prototype.hasOwnProperty},"../node_modules/.pnpm/@storybook+addon-essentials@8.4.5_@types+react@18.3.12_storybook@8.4.5_prettier@3.4.1__webpack-sources@3.2.3/node_modules/@storybook/addon-essentials/dist/actions/preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{argsEnhancers:()=>argsEnhancers,loaders:()=>loaders});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global");const esm_browser_native={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let getRandomValues;const rnds8=new Uint8Array(16);function rng(){if(!getRandomValues&&(getRandomValues="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!getRandomValues))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return getRandomValues(rnds8)}const byteToHex=[];for(let i=0;i<256;++i)byteToHex.push((i+256).toString(16).slice(1));function unsafeStringify(arr,offset=0){return(byteToHex[arr[offset+0]]+byteToHex[arr[offset+1]]+byteToHex[arr[offset+2]]+byteToHex[arr[offset+3]]+"-"+byteToHex[arr[offset+4]]+byteToHex[arr[offset+5]]+"-"+byteToHex[arr[offset+6]]+byteToHex[arr[offset+7]]+"-"+byteToHex[arr[offset+8]]+byteToHex[arr[offset+9]]+"-"+byteToHex[arr[offset+10]]+byteToHex[arr[offset+11]]+byteToHex[arr[offset+12]]+byteToHex[arr[offset+13]]+byteToHex[arr[offset+14]]+byteToHex[arr[offset+15]]).toLowerCase()}const esm_browser_v4=function v4(options,buf,offset){if(esm_browser_native.randomUUID&&!buf&&!options)return esm_browser_native.randomUUID();const rnds=(options=options||{}).random||(options.rng||rng)();if(rnds[6]=15&rnds[6]|64,rnds[8]=63&rnds[8]|128,buf){offset=offset||0;for(let i=0;i<16;++i)buf[offset+i]=rnds[i];return buf}return unsafeStringify(rnds)};var config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a};function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id="object"==typeof crypto&&"function"==typeof crypto.getRandomValues?esm_browser_v4():Date.now().toString(36)+Math.random().toString(36).substring(2),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit("storybook/actions/action-event",actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}var isInInitialArgs=(name,initialArgs)=>typeof initialArgs[name]>"u"&&!(name in initialArgs),argsEnhancers=[context=>{let{initialArgs,argTypes,parameters:{actions}}=context;return actions?.disable||!argTypes?{}:Object.entries(argTypes).filter((([name,argType])=>!!argType.action)).reduce(((acc,[name,argType])=>(isInInitialArgs(name,initialArgs)&&(acc[name]=action("string"==typeof argType.action?argType.action:name)),acc)),{})},context=>{let{initialArgs,argTypes,id,parameters:{actions}}=context;if(!actions||actions.disable||!actions.argTypesRegex||!argTypes)return{};let argTypesRegex=new RegExp(actions.argTypesRegex);return Object.entries(argTypes).filter((([name])=>!!argTypesRegex.test(name))).reduce(((acc,[name,argType])=>(isInInitialArgs(name,initialArgs)&&(acc[name]=action(name,{implicit:!0,id})),acc)),{})}],subscribed=!1,loaders=[context=>{let{parameters:{actions}}=context;if(!actions?.disable&&!subscribed&&"__STORYBOOK_TEST_ON_MOCK_CALL__"in external_STORYBOOK_MODULE_GLOBAL_.global&&"function"==typeof external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_TEST_ON_MOCK_CALL__){(0,external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_TEST_ON_MOCK_CALL__)(((mock,args)=>{let name=mock.getMockName();"spy"!==name&&(!/^next\/.*::/.test(name)||["next/router::useRouter()","next/navigation::useRouter()","next/navigation::redirect","next/cache::","next/headers::cookies().set","next/headers::cookies().delete","next/headers::headers().set","next/headers::headers().delete"].some((prefix=>name.startsWith(prefix))))&&action(name)(args)})),subscribed=!0}}]},"../node_modules/.pnpm/@storybook+addon-essentials@8.4.5_@types+react@18.3.12_storybook@8.4.5_prettier@3.4.1__webpack-sources@3.2.3/node_modules/@storybook/addon-essentials/dist/backgrounds/preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{decorators:()=>decorators,initialGlobals:()=>initialGlobals,parameters:()=>parameters});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_CLIENT_LOGGER_=__webpack_require__("storybook/internal/client-logger"),dist=__webpack_require__("../node_modules/.pnpm/ts-dedent@2.0.0/node_modules/ts-dedent/dist/index.js"),PARAM_KEY="backgrounds",DEFAULT_BACKGROUNDS={light:{name:"light",value:"#F8F8F8"},dark:{name:"dark",value:"#333"}},{document:preview_document,window:preview_window}=external_STORYBOOK_MODULE_GLOBAL_.global,isReduceMotionEnabled=()=>!!preview_window?.matchMedia("(prefers-reduced-motion: reduce)")?.matches,clearStyles=selector=>{(Array.isArray(selector)?selector:[selector]).forEach(clearStyle)},clearStyle=selector=>{let element=preview_document.getElementById(selector);element&&element.parentElement?.removeChild(element)},addGridStyle=(selector,css)=>{let existingStyle=preview_document.getElementById(selector);if(existingStyle)existingStyle.innerHTML!==css&&(existingStyle.innerHTML=css);else{let style=preview_document.createElement("style");style.setAttribute("id",selector),style.innerHTML=css,preview_document.head.appendChild(style)}},addBackgroundStyle=(selector,css,storyId)=>{let existingStyle=preview_document.getElementById(selector);if(existingStyle)existingStyle.innerHTML!==css&&(existingStyle.innerHTML=css);else{let style=preview_document.createElement("style");style.setAttribute("id",selector),style.innerHTML=css;let gridStyleSelector="addon-backgrounds-grid"+(storyId?`-docs-${storyId}`:""),existingGridStyle=preview_document.getElementById(gridStyleSelector);existingGridStyle?existingGridStyle.parentElement?.insertBefore(style,existingGridStyle):preview_document.head.appendChild(style)}},defaultGrid={cellSize:100,cellAmount:10,opacity:.8},transitionStyle=isReduceMotionEnabled()?"":"transition: background-color 0.3s;",decorators=FEATURES?.backgroundsStoryGlobals?[(StoryFn,context)=>{let{globals,parameters:parameters2,viewMode,id}=context,{options=DEFAULT_BACKGROUNDS,disable,grid=defaultGrid}=parameters2[PARAM_KEY]||{},data=globals[PARAM_KEY]||{},backgroundName=data.value,item=backgroundName?options[backgroundName]:void 0,value=item?.value||"transparent",showGrid=data.grid||!1,shownBackground=!!item&&!disable,backgroundSelector="docs"===viewMode?`#anchor--${id} .docs-story`:".sb-show-main",gridSelector="docs"===viewMode?`#anchor--${id} .docs-story`:".sb-show-main",isLayoutPadded=void 0===parameters2.layout||"padded"===parameters2.layout,defaultOffset="docs"===viewMode?20:isLayoutPadded?16:0,{cellAmount,cellSize,opacity,offsetX=defaultOffset,offsetY=defaultOffset}=grid,backgroundSelectorId="docs"===viewMode?`addon-backgrounds-docs-${id}`:"addon-backgrounds-color",backgroundTarget="docs"===viewMode?id:null;(0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)((()=>{shownBackground?addBackgroundStyle(backgroundSelectorId,`\n    ${backgroundSelector} {\n      background: ${value} !important;\n      ${transitionStyle}\n      }`,backgroundTarget):clearStyles(backgroundSelectorId)}),[backgroundSelector,backgroundSelectorId,backgroundTarget,shownBackground,value]);let gridSelectorId="docs"===viewMode?`addon-backgrounds-grid-docs-${id}`:"addon-backgrounds-grid";return(0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)((()=>{if(!showGrid)return void clearStyles(gridSelectorId);let gridSize=[`${cellSize*cellAmount}px ${cellSize*cellAmount}px`,`${cellSize*cellAmount}px ${cellSize*cellAmount}px`,`${cellSize}px ${cellSize}px`,`${cellSize}px ${cellSize}px`].join(", ");addGridStyle(gridSelectorId,`\n        ${gridSelector} {\n          background-size: ${gridSize} !important;\n          background-position: ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px !important;\n          background-blend-mode: difference !important;\n          background-image: linear-gradient(rgba(130, 130, 130, ${opacity}) 1px, transparent 1px),\n           linear-gradient(90deg, rgba(130, 130, 130, ${opacity}) 1px, transparent 1px),\n           linear-gradient(rgba(130, 130, 130, ${opacity/2}) 1px, transparent 1px),\n           linear-gradient(90deg, rgba(130, 130, 130, ${opacity/2}) 1px, transparent 1px) !important;\n        }\n      `)}),[cellAmount,cellSize,gridSelector,gridSelectorId,showGrid,offsetX,offsetY,opacity]),StoryFn()}]:[(StoryFn,context)=>{let{globals,parameters:parameters2}=context,gridParameters=parameters2[PARAM_KEY].grid,isActive=!0===globals[PARAM_KEY]?.grid&&!0!==gridParameters.disable,{cellAmount,cellSize,opacity}=gridParameters,isInDocs="docs"===context.viewMode,defaultOffset=void 0===parameters2.layout||"padded"===parameters2.layout?16:0,offsetX=gridParameters.offsetX??(isInDocs?20:defaultOffset),offsetY=gridParameters.offsetY??(isInDocs?20:defaultOffset),gridStyles=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)((()=>`\n      ${"docs"===context.viewMode?`#anchor--${context.id} .docs-story`:".sb-show-main"} {\n        background-size: ${[`${cellSize*cellAmount}px ${cellSize*cellAmount}px`,`${cellSize*cellAmount}px ${cellSize*cellAmount}px`,`${cellSize}px ${cellSize}px`,`${cellSize}px ${cellSize}px`].join(", ")} !important;\n        background-position: ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px !important;\n        background-blend-mode: difference !important;\n        background-image: linear-gradient(rgba(130, 130, 130, ${opacity}) 1px, transparent 1px),\n         linear-gradient(90deg, rgba(130, 130, 130, ${opacity}) 1px, transparent 1px),\n         linear-gradient(rgba(130, 130, 130, ${opacity/2}) 1px, transparent 1px),\n         linear-gradient(90deg, rgba(130, 130, 130, ${opacity/2}) 1px, transparent 1px) !important;\n      }\n    `),[cellSize]);return(0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)((()=>{let selectorId="docs"===context.viewMode?`addon-backgrounds-grid-docs-${context.id}`:"addon-backgrounds-grid";isActive?addGridStyle(selectorId,gridStyles):clearStyles(selectorId)}),[isActive,gridStyles,context]),StoryFn()},(StoryFn,context)=>{let{globals,parameters:parameters2}=context,globalsBackgroundColor=globals[PARAM_KEY]?.value,backgroundsConfig=parameters2[PARAM_KEY],selectedBackgroundColor=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)((()=>backgroundsConfig.disable?"transparent":((currentSelectedValue,backgrounds=[],defaultName)=>{if("transparent"===currentSelectedValue)return"transparent";if(backgrounds.find((background=>background.value===currentSelectedValue))||currentSelectedValue)return currentSelectedValue;let defaultBackground=backgrounds.find((background=>background.name===defaultName));if(defaultBackground)return defaultBackground.value;if(defaultName){let availableColors=backgrounds.map((background=>background.name)).join(", ");external_STORYBOOK_MODULE_CLIENT_LOGGER_.logger.warn(dist.TW`
        Backgrounds Addon: could not find the default color "${defaultName}".
        These are the available colors for your story based on your configuration:
        ${availableColors}.
      `)}return"transparent"})(globalsBackgroundColor,backgroundsConfig.values,backgroundsConfig.default)),[backgroundsConfig,globalsBackgroundColor]),isActive=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)((()=>selectedBackgroundColor&&"transparent"!==selectedBackgroundColor),[selectedBackgroundColor]),selector="docs"===context.viewMode?`#anchor--${context.id} .docs-story`:".sb-show-main",backgroundStyles=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)((()=>`\n      ${selector} {\n        background: ${selectedBackgroundColor} !important;\n        ${isReduceMotionEnabled()?"":"transition: background-color 0.3s;"}\n      }\n    `),[selectedBackgroundColor,selector]);return(0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)((()=>{let selectorId="docs"===context.viewMode?`addon-backgrounds-docs-${context.id}`:"addon-backgrounds-color";isActive?addBackgroundStyle(selectorId,backgroundStyles,"docs"===context.viewMode?context.id:null):clearStyles(selectorId)}),[isActive,backgroundStyles,context]),StoryFn()}],parameters={[PARAM_KEY]:{grid:{cellSize:20,opacity:.5,cellAmount:5},disable:!1,...!FEATURES?.backgroundsStoryGlobals&&{values:Object.values(DEFAULT_BACKGROUNDS)}}},modern={[PARAM_KEY]:{value:void 0,grid:!1}},initialGlobals=FEATURES?.backgroundsStoryGlobals?modern:{[PARAM_KEY]:null}},"../node_modules/.pnpm/@storybook+addon-essentials@8.4.5_@types+react@18.3.12_storybook@8.4.5_prettier@3.4.1__webpack-sources@3.2.3/node_modules/@storybook/addon-essentials/dist/docs/preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{parameters:()=>parameters});__webpack_require__("../node_modules/.pnpm/@storybook+addon-docs@8.4.5_@types+react@18.3.12_storybook@8.4.5_prettier@3.4.1__webpack-sources@3.2.3/node_modules/@storybook/addon-docs/dist/chunk-H6MOWX77.mjs");var excludeTags=Object.entries(globalThis.TAGS_OPTIONS??{}).reduce(((acc,entry)=>{let[tag,option]=entry;return option.excludeFromDocsStories&&(acc[tag]=!0),acc}),{}),parameters={docs:{renderer:async()=>{let{DocsRenderer}=await Promise.all([__webpack_require__.e(9),__webpack_require__.e(963),__webpack_require__.e(768)]).then(__webpack_require__.bind(__webpack_require__,"../node_modules/.pnpm/@storybook+addon-docs@8.4.5_@types+react@18.3.12_storybook@8.4.5_prettier@3.4.1__webpack-sources@3.2.3/node_modules/@storybook/addon-docs/dist/DocsRenderer-CFRXHY34.mjs"));return new DocsRenderer},stories:{filter:story=>0===(story.tags||[]).filter((tag=>excludeTags[tag])).length&&!story.parameters.docs?.disable}}}},"../node_modules/.pnpm/@storybook+addon-essentials@8.4.5_@types+react@18.3.12_storybook@8.4.5_prettier@3.4.1__webpack-sources@3.2.3/node_modules/@storybook/addon-essentials/dist/highlight/preview.mjs":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var external_STORYBOOK_MODULE_CORE_EVENTS_=__webpack_require__("storybook/internal/core-events"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),{document:preview_document}=external_STORYBOOK_MODULE_GLOBAL_.global,channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),resetHighlight=()=>{let sheetToBeRemoved=preview_document.getElementById("storybookHighlight");sheetToBeRemoved&&sheetToBeRemoved.parentNode?.removeChild(sheetToBeRemoved)};channel.on(external_STORYBOOK_MODULE_CORE_EVENTS_.STORY_CHANGED,resetHighlight),channel.on("storybook/highlight/reset",resetHighlight),channel.on("storybook/highlight/add",(infos=>{resetHighlight();let elements=Array.from(new Set(infos.elements)),sheet=preview_document.createElement("style");sheet.setAttribute("id","storybookHighlight"),sheet.innerHTML=elements.map((target=>`${target}{\n          ${((color="#FF4785",style="dashed")=>`\n  outline: 2px ${style} ${color};\n  outline-offset: 2px;\n  box-shadow: 0 0 0 6px rgba(255,255,255,0.6);\n`)(infos.color,infos.style)}\n         }`)).join(" "),preview_document.head.appendChild(sheet)}))},"../node_modules/.pnpm/@storybook+addon-essentials@8.4.5_@types+react@18.3.12_storybook@8.4.5_prettier@3.4.1__webpack-sources@3.2.3/node_modules/@storybook/addon-essentials/dist/measure/preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{decorators:()=>decorators,initialGlobals:()=>initialGlobals});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),prefix="Invariant failed";function invariant(condition,message){if(!condition)throw new Error(prefix)}var PARAM_KEY="measureEnabled";function getDocumentWidthAndHeight(){let container=external_STORYBOOK_MODULE_GLOBAL_.global.document.documentElement,height=Math.max(container.scrollHeight,container.offsetHeight);return{width:Math.max(container.scrollWidth,container.offsetWidth),height}}function setCanvasWidthAndHeight(canvas,context,{width,height}){canvas.style.width=`${width}px`,canvas.style.height=`${height}px`;let scale=external_STORYBOOK_MODULE_GLOBAL_.global.window.devicePixelRatio;canvas.width=Math.floor(width*scale),canvas.height=Math.floor(height*scale),context.scale(scale,scale)}var state={};function init(){state.canvas||(state=function createCanvas(){let canvas=external_STORYBOOK_MODULE_GLOBAL_.global.document.createElement("canvas");canvas.id="storybook-addon-measure";let context=canvas.getContext("2d");invariant(null!=context);let{width,height}=getDocumentWidthAndHeight();return setCanvasWidthAndHeight(canvas,context,{width,height}),canvas.style.position="absolute",canvas.style.left="0",canvas.style.top="0",canvas.style.zIndex="2147483647",canvas.style.pointerEvents="none",external_STORYBOOK_MODULE_GLOBAL_.global.document.body.appendChild(canvas),{canvas,context,width,height}}())}function clear(){state.context&&state.context.clearRect(0,0,state.width??0,state.height??0)}var colors={margin:"#f6b26b",border:"#ffe599",padding:"#93c47d",content:"#6fa8dc",text:"#232020"};function roundedRect(context,{x,y,w,h,r}){x-=w/2,y-=h/2,w<2*r&&(r=w/2),h<2*r&&(r=h/2),context.beginPath(),context.moveTo(x+r,y),context.arcTo(x+w,y,x+w,y+h,r),context.arcTo(x+w,y+h,x,y+h,r),context.arcTo(x,y+h,x,y,r),context.arcTo(x,y,x+w,y,r),context.closePath()}function textWithRect(context,type,{x,y,w,h},text){return roundedRect(context,{x,y,w,h,r:3}),context.fillStyle=`${colors[type]}dd`,context.fill(),context.strokeStyle=colors[type],context.stroke(),context.fillStyle=colors.text,context.fillText(text,x,y),roundedRect(context,{x,y,w,h,r:3}),context.fillStyle=`${colors[type]}dd`,context.fill(),context.strokeStyle=colors[type],context.stroke(),context.fillStyle=colors.text,context.fillText(text,x,y),{x,y,w,h}}function configureText(context,text){context.font="600 12px monospace",context.textBaseline="middle",context.textAlign="center";let metrics=context.measureText(text),actualHeight=metrics.actualBoundingBoxAscent+metrics.actualBoundingBoxDescent;return{w:metrics.width+12,h:actualHeight+12}}function drawLabel(context,measurements,{type,position="center",text},prevRect,external=!1){let{x,y}=function positionCoordinate(position,{padding,border,width,height,top,left}){let contentWidth=width-border.left-border.right-padding.left-padding.right,contentHeight=height-padding.top-padding.bottom-border.top-border.bottom,x=left+border.left+padding.left,y=top+border.top+padding.top;return"top"===position?x+=contentWidth/2:"right"===position?(x+=contentWidth,y+=contentHeight/2):"bottom"===position?(x+=contentWidth/2,y+=contentHeight):"left"===position?y+=contentHeight/2:"center"===position&&(x+=contentWidth/2,y+=contentHeight/2),{x,y}}(position,measurements),{offsetX,offsetY}=function offset(type,position,{margin,border,padding},labelPaddingSize,external){let shift=dir=>0,offsetX=0,offsetY=0,locationMultiplier=external?1:.5,labelPaddingShift=external?2*labelPaddingSize:0;return"padding"===type?shift=dir=>padding[dir]*locationMultiplier+labelPaddingShift:"border"===type?shift=dir=>padding[dir]+border[dir]*locationMultiplier+labelPaddingShift:"margin"===type&&(shift=dir=>padding[dir]+border[dir]+margin[dir]*locationMultiplier+labelPaddingShift),"top"===position?offsetY=-shift("top"):"right"===position?offsetX=shift("right"):"bottom"===position?offsetY=shift("bottom"):"left"===position&&(offsetX=-shift("left")),{offsetX,offsetY}}(type,position,measurements,7,external);x+=offsetX,y+=offsetY;let{w,h}=configureText(context,text);if(prevRect&&function collide(a,b){return Math.abs(a.x-b.x)<Math.abs(a.w+b.w)/2&&Math.abs(a.y-b.y)<Math.abs(a.h+b.h)/2}({x,y,w,h},prevRect)){let adjusted=function overlapAdjustment(position,currentRect,prevRect){return"top"===position?currentRect.y=prevRect.y-prevRect.h-6:"right"===position?currentRect.x=prevRect.x+prevRect.w/2+6+currentRect.w/2:"bottom"===position?currentRect.y=prevRect.y+prevRect.h+6:"left"===position&&(currentRect.x=prevRect.x-prevRect.w/2-6-currentRect.w/2),{x:currentRect.x,y:currentRect.y}}(position,{x,y,w,h},prevRect);x=adjusted.x,y=adjusted.y}return textWithRect(context,type,{x,y,w,h},text)}function drawStack(context,measurements,stack,external){let rects=[];stack.forEach(((l,idx)=>{let rect=external&&"center"===l.position?function drawFloatingLabel(context,measurements,{type,text}){let{floatingAlignment:floatingAlignment2,extremities}=measurements,x=extremities[floatingAlignment2.x],y=extremities[floatingAlignment2.y],{w,h}=configureText(context,text),{offsetX,offsetY}=function floatingOffset(alignment,{w,h}){let deltaW=.5*w+6,deltaH=.5*h+6;return{offsetX:("left"===alignment.x?-1:1)*deltaW,offsetY:("top"===alignment.y?-1:1)*deltaH}}(floatingAlignment2,{w,h});return x+=offsetX,y+=offsetY,textWithRect(context,type,{x,y,w,h},text)}(context,measurements,l):drawLabel(context,measurements,l,rects[idx-1],external);rects[idx]=rect}))}var colors2_margin="#f6b26ba8",colors2_border="#ffe599a8",colors2_padding="#93c47d8c",colors2_content="#6fa8dca8";function pxToNumber(px){return parseInt(px.replace("px",""),10)}function round(value){return Number.isInteger(value)?value:value.toFixed(2)}function filterZeroValues(labels){return labels.filter((l=>0!==l.text&&"0"!==l.text))}function floatingAlignment(extremities){let windowExtremities_top=external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollY,windowExtremities_bottom=external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollY+external_STORYBOOK_MODULE_GLOBAL_.global.window.innerHeight,windowExtremities_left=external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollX,windowExtremities_right=external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollX+external_STORYBOOK_MODULE_GLOBAL_.global.window.innerWidth,distances_top=Math.abs(windowExtremities_top-extremities.top),distances_bottom=Math.abs(windowExtremities_bottom-extremities.bottom);return{x:Math.abs(windowExtremities_left-extremities.left)>Math.abs(windowExtremities_right-extremities.right)?"left":"right",y:distances_top>distances_bottom?"top":"bottom"}}function drawBoxModel(element){return context=>{if(element&&context){let measurements=function measureElement(element){let style=external_STORYBOOK_MODULE_GLOBAL_.global.getComputedStyle(element),{top,left,right,bottom,width,height}=element.getBoundingClientRect(),{marginTop,marginBottom,marginLeft,marginRight,paddingTop,paddingBottom,paddingLeft,paddingRight,borderBottomWidth,borderTopWidth,borderLeftWidth,borderRightWidth}=style;top+=external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollY,left+=external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollX,bottom+=external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollY,right+=external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollX;let margin={top:pxToNumber(marginTop),bottom:pxToNumber(marginBottom),left:pxToNumber(marginLeft),right:pxToNumber(marginRight)},padding={top:pxToNumber(paddingTop),bottom:pxToNumber(paddingBottom),left:pxToNumber(paddingLeft),right:pxToNumber(paddingRight)},border={top:pxToNumber(borderTopWidth),bottom:pxToNumber(borderBottomWidth),left:pxToNumber(borderLeftWidth),right:pxToNumber(borderRightWidth)},extremities={top:top-margin.top,bottom:bottom+margin.bottom,left:left-margin.left,right:right+margin.right};return{margin,padding,border,top,left,bottom,right,width,height,extremities,floatingAlignment:floatingAlignment(extremities)}}(element),marginLabels=function drawMargin(context,{margin,width,height,top,left,bottom,right}){let marginHeight=height+margin.bottom+margin.top;return context.fillStyle=colors2_margin,context.fillRect(left,top-margin.top,width,margin.top),context.fillRect(right,top-margin.top,margin.right,marginHeight),context.fillRect(left,bottom,width,margin.bottom),context.fillRect(left-margin.left,top-margin.top,margin.left,marginHeight),filterZeroValues([{type:"margin",text:round(margin.top),position:"top"},{type:"margin",text:round(margin.right),position:"right"},{type:"margin",text:round(margin.bottom),position:"bottom"},{type:"margin",text:round(margin.left),position:"left"}])}(context,measurements),paddingLabels=function drawPadding(context,{padding,border,width,height,top,left,bottom,right}){let paddingWidth=width-border.left-border.right,paddingHeight=height-padding.top-padding.bottom-border.top-border.bottom;return context.fillStyle=colors2_padding,context.fillRect(left+border.left,top+border.top,paddingWidth,padding.top),context.fillRect(right-padding.right-border.right,top+padding.top+border.top,padding.right,paddingHeight),context.fillRect(left+border.left,bottom-padding.bottom-border.bottom,paddingWidth,padding.bottom),context.fillRect(left+border.left,top+padding.top+border.top,padding.left,paddingHeight),filterZeroValues([{type:"padding",text:padding.top,position:"top"},{type:"padding",text:padding.right,position:"right"},{type:"padding",text:padding.bottom,position:"bottom"},{type:"padding",text:padding.left,position:"left"}])}(context,measurements),borderLabels=function drawBorder(context,{border,width,height,top,left,bottom,right}){let borderHeight=height-border.top-border.bottom;return context.fillStyle=colors2_border,context.fillRect(left,top,width,border.top),context.fillRect(left,bottom-border.bottom,width,border.bottom),context.fillRect(left,top+border.top,border.left,borderHeight),context.fillRect(right-border.right,top+border.top,border.right,borderHeight),filterZeroValues([{type:"border",text:border.top,position:"top"},{type:"border",text:border.right,position:"right"},{type:"border",text:border.bottom,position:"bottom"},{type:"border",text:border.left,position:"left"}])}(context,measurements),contentLabels=function drawContent(context,{padding,border,width,height,top,left}){let contentWidth=width-border.left-border.right-padding.left-padding.right,contentHeight=height-padding.top-padding.bottom-border.top-border.bottom;return context.fillStyle=colors2_content,context.fillRect(left+border.left+padding.left,top+border.top+padding.top,contentWidth,contentHeight),[{type:"content",position:"center",text:`${round(contentWidth)} x ${round(contentHeight)}`}]}(context,measurements);!function labelStacks(context,measurements,labels,externalLabels){let stacks=labels.reduce(((acc,l)=>(Object.prototype.hasOwnProperty.call(acc,l.position)||(acc[l.position]=[]),acc[l.position]?.push(l),acc)),{});stacks.top&&drawStack(context,measurements,stacks.top,externalLabels),stacks.right&&drawStack(context,measurements,stacks.right,externalLabels),stacks.bottom&&drawStack(context,measurements,stacks.bottom,externalLabels),stacks.left&&drawStack(context,measurements,stacks.left,externalLabels),stacks.center&&drawStack(context,measurements,stacks.center,externalLabels)}(context,measurements,[...contentLabels,...paddingLabels,...borderLabels,...marginLabels],measurements.width<=90||measurements.height<=30)}}}function drawSelectedElement(element){!function draw(callback){clear(),callback(state.context)}(drawBoxModel(element))}var nodeAtPointerRef,pointer={x:0,y:0};function findAndDrawElement(x,y){nodeAtPointerRef=((x,y)=>{let element=external_STORYBOOK_MODULE_GLOBAL_.global.document.elementFromPoint(x,y),crawlShadows=node=>{if(node&&node.shadowRoot){let nestedElement=node.shadowRoot.elementFromPoint(x,y);return node.isEqualNode(nestedElement)?node:nestedElement.shadowRoot?crawlShadows(nestedElement):nestedElement}return node};return crawlShadows(element)||element})(x,y),drawSelectedElement(nodeAtPointerRef)}var decorators=[(StoryFn,context)=>{let{measureEnabled}=context.globals;return(0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)((()=>{let onPointerMove=event=>{window.requestAnimationFrame((()=>{event.stopPropagation(),pointer.x=event.clientX,pointer.y=event.clientY}))};return document.addEventListener("pointermove",onPointerMove),()=>{document.removeEventListener("pointermove",onPointerMove)}}),[]),(0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)((()=>{let onResize=()=>{window.requestAnimationFrame((()=>{!function rescale(){invariant(state.canvas),invariant(state.context),setCanvasWidthAndHeight(state.canvas,state.context,{width:0,height:0});let{width,height}=getDocumentWidthAndHeight();setCanvasWidthAndHeight(state.canvas,state.context,{width,height}),state.width=width,state.height=height}()}))};return"story"===context.viewMode&&measureEnabled&&(document.addEventListener("pointerover",(event=>{window.requestAnimationFrame((()=>{event.stopPropagation(),findAndDrawElement(event.clientX,event.clientY)}))})),init(),window.addEventListener("resize",onResize),findAndDrawElement(pointer.x,pointer.y)),()=>{window.removeEventListener("resize",onResize),function destroy(){state.canvas&&(clear(),state.canvas.parentNode?.removeChild(state.canvas),state={})}()}}),[measureEnabled,context.viewMode]),StoryFn()}],initialGlobals={[PARAM_KEY]:!1}},"../node_modules/.pnpm/@storybook+addon-essentials@8.4.5_@types+react@18.3.12_storybook@8.4.5_prettier@3.4.1__webpack-sources@3.2.3/node_modules/@storybook/addon-essentials/dist/outline/preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{decorators:()=>decorators,initialGlobals:()=>initialGlobals});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),dist=__webpack_require__("../node_modules/.pnpm/ts-dedent@2.0.0/node_modules/ts-dedent/dist/index.js"),PARAM_KEY="outline",clearStyles=selector=>{(Array.isArray(selector)?selector:[selector]).forEach(clearStyle)},clearStyle=input=>{let selector="string"==typeof input?input:input.join(""),element=external_STORYBOOK_MODULE_GLOBAL_.global.document.getElementById(selector);element&&element.parentElement&&element.parentElement.removeChild(element)};var decorators=[(StoryFn,context)=>{let{globals}=context,isActive=[!0,"true"].includes(globals.outline),isInDocs="docs"===context.viewMode,outlineStyles=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)((()=>function outlineCSS(selector){return dist.TW`
    ${selector} body {
      outline: 1px solid #2980b9 !important;
    }

    ${selector} article {
      outline: 1px solid #3498db !important;
    }

    ${selector} nav {
      outline: 1px solid #0088c3 !important;
    }

    ${selector} aside {
      outline: 1px solid #33a0ce !important;
    }

    ${selector} section {
      outline: 1px solid #66b8da !important;
    }

    ${selector} header {
      outline: 1px solid #99cfe7 !important;
    }

    ${selector} footer {
      outline: 1px solid #cce7f3 !important;
    }

    ${selector} h1 {
      outline: 1px solid #162544 !important;
    }

    ${selector} h2 {
      outline: 1px solid #314e6e !important;
    }

    ${selector} h3 {
      outline: 1px solid #3e5e85 !important;
    }

    ${selector} h4 {
      outline: 1px solid #449baf !important;
    }

    ${selector} h5 {
      outline: 1px solid #c7d1cb !important;
    }

    ${selector} h6 {
      outline: 1px solid #4371d0 !important;
    }

    ${selector} main {
      outline: 1px solid #2f4f90 !important;
    }

    ${selector} address {
      outline: 1px solid #1a2c51 !important;
    }

    ${selector} div {
      outline: 1px solid #036cdb !important;
    }

    ${selector} p {
      outline: 1px solid #ac050b !important;
    }

    ${selector} hr {
      outline: 1px solid #ff063f !important;
    }

    ${selector} pre {
      outline: 1px solid #850440 !important;
    }

    ${selector} blockquote {
      outline: 1px solid #f1b8e7 !important;
    }

    ${selector} ol {
      outline: 1px solid #ff050c !important;
    }

    ${selector} ul {
      outline: 1px solid #d90416 !important;
    }

    ${selector} li {
      outline: 1px solid #d90416 !important;
    }

    ${selector} dl {
      outline: 1px solid #fd3427 !important;
    }

    ${selector} dt {
      outline: 1px solid #ff0043 !important;
    }

    ${selector} dd {
      outline: 1px solid #e80174 !important;
    }

    ${selector} figure {
      outline: 1px solid #ff00bb !important;
    }

    ${selector} figcaption {
      outline: 1px solid #bf0032 !important;
    }

    ${selector} table {
      outline: 1px solid #00cc99 !important;
    }

    ${selector} caption {
      outline: 1px solid #37ffc4 !important;
    }

    ${selector} thead {
      outline: 1px solid #98daca !important;
    }

    ${selector} tbody {
      outline: 1px solid #64a7a0 !important;
    }

    ${selector} tfoot {
      outline: 1px solid #22746b !important;
    }

    ${selector} tr {
      outline: 1px solid #86c0b2 !important;
    }

    ${selector} th {
      outline: 1px solid #a1e7d6 !important;
    }

    ${selector} td {
      outline: 1px solid #3f5a54 !important;
    }

    ${selector} col {
      outline: 1px solid #6c9a8f !important;
    }

    ${selector} colgroup {
      outline: 1px solid #6c9a9d !important;
    }

    ${selector} button {
      outline: 1px solid #da8301 !important;
    }

    ${selector} datalist {
      outline: 1px solid #c06000 !important;
    }

    ${selector} fieldset {
      outline: 1px solid #d95100 !important;
    }

    ${selector} form {
      outline: 1px solid #d23600 !important;
    }

    ${selector} input {
      outline: 1px solid #fca600 !important;
    }

    ${selector} keygen {
      outline: 1px solid #b31e00 !important;
    }

    ${selector} label {
      outline: 1px solid #ee8900 !important;
    }

    ${selector} legend {
      outline: 1px solid #de6d00 !important;
    }

    ${selector} meter {
      outline: 1px solid #e8630c !important;
    }

    ${selector} optgroup {
      outline: 1px solid #b33600 !important;
    }

    ${selector} option {
      outline: 1px solid #ff8a00 !important;
    }

    ${selector} output {
      outline: 1px solid #ff9619 !important;
    }

    ${selector} progress {
      outline: 1px solid #e57c00 !important;
    }

    ${selector} select {
      outline: 1px solid #e26e0f !important;
    }

    ${selector} textarea {
      outline: 1px solid #cc5400 !important;
    }

    ${selector} details {
      outline: 1px solid #33848f !important;
    }

    ${selector} summary {
      outline: 1px solid #60a1a6 !important;
    }

    ${selector} command {
      outline: 1px solid #438da1 !important;
    }

    ${selector} menu {
      outline: 1px solid #449da6 !important;
    }

    ${selector} del {
      outline: 1px solid #bf0000 !important;
    }

    ${selector} ins {
      outline: 1px solid #400000 !important;
    }

    ${selector} img {
      outline: 1px solid #22746b !important;
    }

    ${selector} iframe {
      outline: 1px solid #64a7a0 !important;
    }

    ${selector} embed {
      outline: 1px solid #98daca !important;
    }

    ${selector} object {
      outline: 1px solid #00cc99 !important;
    }

    ${selector} param {
      outline: 1px solid #37ffc4 !important;
    }

    ${selector} video {
      outline: 1px solid #6ee866 !important;
    }

    ${selector} audio {
      outline: 1px solid #027353 !important;
    }

    ${selector} source {
      outline: 1px solid #012426 !important;
    }

    ${selector} canvas {
      outline: 1px solid #a2f570 !important;
    }

    ${selector} track {
      outline: 1px solid #59a600 !important;
    }

    ${selector} map {
      outline: 1px solid #7be500 !important;
    }

    ${selector} area {
      outline: 1px solid #305900 !important;
    }

    ${selector} a {
      outline: 1px solid #ff62ab !important;
    }

    ${selector} em {
      outline: 1px solid #800b41 !important;
    }

    ${selector} strong {
      outline: 1px solid #ff1583 !important;
    }

    ${selector} i {
      outline: 1px solid #803156 !important;
    }

    ${selector} b {
      outline: 1px solid #cc1169 !important;
    }

    ${selector} u {
      outline: 1px solid #ff0430 !important;
    }

    ${selector} s {
      outline: 1px solid #f805e3 !important;
    }

    ${selector} small {
      outline: 1px solid #d107b2 !important;
    }

    ${selector} abbr {
      outline: 1px solid #4a0263 !important;
    }

    ${selector} q {
      outline: 1px solid #240018 !important;
    }

    ${selector} cite {
      outline: 1px solid #64003c !important;
    }

    ${selector} dfn {
      outline: 1px solid #b4005a !important;
    }

    ${selector} sub {
      outline: 1px solid #dba0c8 !important;
    }

    ${selector} sup {
      outline: 1px solid #cc0256 !important;
    }

    ${selector} time {
      outline: 1px solid #d6606d !important;
    }

    ${selector} code {
      outline: 1px solid #e04251 !important;
    }

    ${selector} kbd {
      outline: 1px solid #5e001f !important;
    }

    ${selector} samp {
      outline: 1px solid #9c0033 !important;
    }

    ${selector} var {
      outline: 1px solid #d90047 !important;
    }

    ${selector} mark {
      outline: 1px solid #ff0053 !important;
    }

    ${selector} bdi {
      outline: 1px solid #bf3668 !important;
    }

    ${selector} bdo {
      outline: 1px solid #6f1400 !important;
    }

    ${selector} ruby {
      outline: 1px solid #ff7b93 !important;
    }

    ${selector} rt {
      outline: 1px solid #ff2f54 !important;
    }

    ${selector} rp {
      outline: 1px solid #803e49 !important;
    }

    ${selector} span {
      outline: 1px solid #cc2643 !important;
    }

    ${selector} br {
      outline: 1px solid #db687d !important;
    }

    ${selector} wbr {
      outline: 1px solid #db175b !important;
    }`}(isInDocs?'[data-story-block="true"]':".sb-show-main")),[context]);return(0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)((()=>{let selectorId=isInDocs?`addon-outline-docs-${context.id}`:"addon-outline";return isActive?((selector,css)=>{let existingStyle=external_STORYBOOK_MODULE_GLOBAL_.global.document.getElementById(selector);if(existingStyle)existingStyle.innerHTML!==css&&(existingStyle.innerHTML=css);else{let style=external_STORYBOOK_MODULE_GLOBAL_.global.document.createElement("style");style.setAttribute("id",selector),style.innerHTML=css,external_STORYBOOK_MODULE_GLOBAL_.global.document.head.appendChild(style)}})(selectorId,outlineStyles):clearStyles(selectorId),()=>{clearStyles(selectorId)}}),[isActive,outlineStyles,context]),StoryFn()}],initialGlobals={[PARAM_KEY]:!1}},"../node_modules/.pnpm/@storybook+addon-essentials@8.4.5_@types+react@18.3.12_storybook@8.4.5_prettier@3.4.1__webpack-sources@3.2.3/node_modules/@storybook/addon-essentials/dist/viewport/preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{initialGlobals:()=>initialGlobals});var PARAM_KEY="viewport",modern={[PARAM_KEY]:{value:void 0,isRotated:!1}},initialGlobals=FEATURES?.viewportStoryGlobals?modern:{viewport:"reset",viewportRotated:!1}},"../node_modules/.pnpm/@storybook+react@8.4.5_react-dom@18.3.1_react@18.3.1__react@18.3.1_storybook@8.4.5_prettier@3.4.1__typescript@5.7.2/node_modules/@storybook/react/dist/chunk-XP5HYGXS.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{E:()=>__esm,P$:()=>__commonJS,VA:()=>__export,Yp:()=>__toCommonJS,f1:()=>__toESM});var __create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__esm=(fn,res)=>function(){return fn&&(res=(0,fn[__getOwnPropNames(fn)[0]])(fn=0)),res},__commonJS=(cb,mod)=>function(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports},__export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},__toESM=(mod,isNodeMode,target)=>(target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod)},"../node_modules/.pnpm/@storybook+react@8.4.5_react-dom@18.3.1_react@18.3.1__react@18.3.1_storybook@8.4.5_prettier@3.4.1__typescript@5.7.2/node_modules/@storybook/react/dist/entry-preview-docs.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{applyDecorators:()=>applyDecorators,argTypesEnhancers:()=>argTypesEnhancers,decorators:()=>decorators,parameters:()=>parameters});var _chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../node_modules/.pnpm/@storybook+react@8.4.5_react-dom@18.3.1_react@18.3.1__react@18.3.1_storybook@8.4.5_prettier@3.4.1__typescript@5.7.2/node_modules/@storybook/react/dist/chunk-XP5HYGXS.mjs"),storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../node_modules/.pnpm/@storybook+core@8.4.5_prettier@3.4.1/node_modules/@storybook/core/dist/docs-tools/index.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("storybook/internal/client-logger"),storybook_internal_preview_api__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("storybook/internal/preview-api"),require_react_is_development=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/react-is/cjs/react-is.development.js"(exports){!function(){var hasSymbol="function"==typeof Symbol&&Symbol.for,REACT_ELEMENT_TYPE=hasSymbol?Symbol.for("react.element"):60103,REACT_PORTAL_TYPE=hasSymbol?Symbol.for("react.portal"):60106,REACT_FRAGMENT_TYPE=hasSymbol?Symbol.for("react.fragment"):60107,REACT_STRICT_MODE_TYPE=hasSymbol?Symbol.for("react.strict_mode"):60108,REACT_PROFILER_TYPE=hasSymbol?Symbol.for("react.profiler"):60114,REACT_PROVIDER_TYPE=hasSymbol?Symbol.for("react.provider"):60109,REACT_CONTEXT_TYPE=hasSymbol?Symbol.for("react.context"):60110,REACT_ASYNC_MODE_TYPE=hasSymbol?Symbol.for("react.async_mode"):60111,REACT_CONCURRENT_MODE_TYPE=hasSymbol?Symbol.for("react.concurrent_mode"):60111,REACT_FORWARD_REF_TYPE=hasSymbol?Symbol.for("react.forward_ref"):60112,REACT_SUSPENSE_TYPE=hasSymbol?Symbol.for("react.suspense"):60113,REACT_SUSPENSE_LIST_TYPE=hasSymbol?Symbol.for("react.suspense_list"):60120,REACT_MEMO_TYPE=hasSymbol?Symbol.for("react.memo"):60115,REACT_LAZY_TYPE=hasSymbol?Symbol.for("react.lazy"):60116,REACT_BLOCK_TYPE=hasSymbol?Symbol.for("react.block"):60121,REACT_FUNDAMENTAL_TYPE=hasSymbol?Symbol.for("react.fundamental"):60117,REACT_RESPONDER_TYPE=hasSymbol?Symbol.for("react.responder"):60118,REACT_SCOPE_TYPE=hasSymbol?Symbol.for("react.scope"):60119;function typeOf(object){if("object"==typeof object&&null!==object){var $$typeof=object.$$typeof;switch($$typeof){case REACT_ELEMENT_TYPE:var type=object.type;switch(type){case REACT_ASYNC_MODE_TYPE:case REACT_CONCURRENT_MODE_TYPE:case REACT_FRAGMENT_TYPE:case REACT_PROFILER_TYPE:case REACT_STRICT_MODE_TYPE:case REACT_SUSPENSE_TYPE:return type;default:var $$typeofType=type&&type.$$typeof;switch($$typeofType){case REACT_CONTEXT_TYPE:case REACT_FORWARD_REF_TYPE:case REACT_LAZY_TYPE:case REACT_MEMO_TYPE:case REACT_PROVIDER_TYPE:return $$typeofType;default:return $$typeof}}case REACT_PORTAL_TYPE:return $$typeof}}}var AsyncMode=REACT_ASYNC_MODE_TYPE,ConcurrentMode=REACT_CONCURRENT_MODE_TYPE,ContextConsumer=REACT_CONTEXT_TYPE,ContextProvider=REACT_PROVIDER_TYPE,Element=REACT_ELEMENT_TYPE,ForwardRef2=REACT_FORWARD_REF_TYPE,Fragment2=REACT_FRAGMENT_TYPE,Lazy=REACT_LAZY_TYPE,Memo2=REACT_MEMO_TYPE,Portal=REACT_PORTAL_TYPE,Profiler=REACT_PROFILER_TYPE,StrictMode=REACT_STRICT_MODE_TYPE,Suspense=REACT_SUSPENSE_TYPE,hasWarnedAboutDeprecatedIsAsyncMode=!1;function isConcurrentMode(object){return typeOf(object)===REACT_CONCURRENT_MODE_TYPE}exports.AsyncMode=AsyncMode,exports.ConcurrentMode=ConcurrentMode,exports.ContextConsumer=ContextConsumer,exports.ContextProvider=ContextProvider,exports.Element=Element,exports.ForwardRef=ForwardRef2,exports.Fragment=Fragment2,exports.Lazy=Lazy,exports.Memo=Memo2,exports.Portal=Portal,exports.Profiler=Profiler,exports.StrictMode=StrictMode,exports.Suspense=Suspense,exports.isAsyncMode=function isAsyncMode(object){return hasWarnedAboutDeprecatedIsAsyncMode||(hasWarnedAboutDeprecatedIsAsyncMode=!0,console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")),isConcurrentMode(object)||typeOf(object)===REACT_ASYNC_MODE_TYPE},exports.isConcurrentMode=isConcurrentMode,exports.isContextConsumer=function isContextConsumer2(object){return typeOf(object)===REACT_CONTEXT_TYPE},exports.isContextProvider=function isContextProvider2(object){return typeOf(object)===REACT_PROVIDER_TYPE},exports.isElement=function isElement(object){return"object"==typeof object&&null!==object&&object.$$typeof===REACT_ELEMENT_TYPE},exports.isForwardRef=function isForwardRef3(object){return typeOf(object)===REACT_FORWARD_REF_TYPE},exports.isFragment=function isFragment(object){return typeOf(object)===REACT_FRAGMENT_TYPE},exports.isLazy=function isLazy2(object){return typeOf(object)===REACT_LAZY_TYPE},exports.isMemo=function isMemo3(object){return typeOf(object)===REACT_MEMO_TYPE},exports.isPortal=function isPortal(object){return typeOf(object)===REACT_PORTAL_TYPE},exports.isProfiler=function isProfiler2(object){return typeOf(object)===REACT_PROFILER_TYPE},exports.isStrictMode=function isStrictMode2(object){return typeOf(object)===REACT_STRICT_MODE_TYPE},exports.isSuspense=function isSuspense2(object){return typeOf(object)===REACT_SUSPENSE_TYPE},exports.isValidElementType=function isValidElementType(type){return"string"==typeof type||"function"==typeof type||type===REACT_FRAGMENT_TYPE||type===REACT_CONCURRENT_MODE_TYPE||type===REACT_PROFILER_TYPE||type===REACT_STRICT_MODE_TYPE||type===REACT_SUSPENSE_TYPE||type===REACT_SUSPENSE_LIST_TYPE||"object"==typeof type&&null!==type&&(type.$$typeof===REACT_LAZY_TYPE||type.$$typeof===REACT_MEMO_TYPE||type.$$typeof===REACT_PROVIDER_TYPE||type.$$typeof===REACT_CONTEXT_TYPE||type.$$typeof===REACT_FORWARD_REF_TYPE||type.$$typeof===REACT_FUNDAMENTAL_TYPE||type.$$typeof===REACT_RESPONDER_TYPE||type.$$typeof===REACT_SCOPE_TYPE||type.$$typeof===REACT_BLOCK_TYPE)},exports.typeOf=typeOf}()}}),require_react_is=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/react-is/index.js"(exports,module){module.exports=require_react_is_development()}}),require_object_assign=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/object-assign/index.js"(exports,module){var getOwnPropertySymbols=Object.getOwnPropertySymbols,hasOwnProperty2=Object.prototype.hasOwnProperty,propIsEnumerable=Object.prototype.propertyIsEnumerable;module.exports=function shouldUseNative(){try{if(!Object.assign)return!1;var test1=new String("abc");if(test1[5]="de","5"===Object.getOwnPropertyNames(test1)[0])return!1;for(var test2={},i=0;i<10;i++)test2["_"+String.fromCharCode(i)]=i;if("0123456789"!==Object.getOwnPropertyNames(test2).map((function(n){return test2[n]})).join(""))return!1;var test3={};return"abcdefghijklmnopqrst".split("").forEach((function(letter){test3[letter]=letter})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},test3)).join("")}catch{return!1}}()?Object.assign:function(target,source){for(var from,symbols,to=function toObject(val){if(null==val)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(val)}(target),s=1;s<arguments.length;s++){for(var key in from=Object(arguments[s]))hasOwnProperty2.call(from,key)&&(to[key]=from[key]);if(getOwnPropertySymbols){symbols=getOwnPropertySymbols(from);for(var i=0;i<symbols.length;i++)propIsEnumerable.call(from,symbols[i])&&(to[symbols[i]]=from[symbols[i]])}}return to}}}),require_ReactPropTypesSecret=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports,module){module.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"}}),require_has=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/prop-types/lib/has.js"(exports,module){module.exports=Function.call.bind(Object.prototype.hasOwnProperty)}}),require_checkPropTypes=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/prop-types/checkPropTypes.js"(exports,module){var printWarning,ReactPropTypesSecret,loggedTypeFailures,has2;function checkPropTypes(typeSpecs,values,location,componentName,getStack){for(var typeSpecName in typeSpecs)if(has2(typeSpecs,typeSpecName)){var error;try{if("function"!=typeof typeSpecs[typeSpecName]){var err=Error((componentName||"React class")+": "+location+" type `"+typeSpecName+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+typeof typeSpecs[typeSpecName]+"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");throw err.name="Invariant Violation",err}error=typeSpecs[typeSpecName](values,typeSpecName,componentName,location,null,ReactPropTypesSecret)}catch(ex){error=ex}if(error&&!(error instanceof Error)&&printWarning((componentName||"React class")+": type specification of "+location+" `"+typeSpecName+"` is invalid; the type checker function must return `null` or an `Error` but returned a "+typeof error+". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."),error instanceof Error&&!(error.message in loggedTypeFailures)){loggedTypeFailures[error.message]=!0;var stack=getStack?getStack():"";printWarning("Failed "+location+" type: "+error.message+(stack??""))}}}ReactPropTypesSecret=require_ReactPropTypesSecret(),loggedTypeFailures={},has2=require_has(),printWarning=function(text){var message="Warning: "+text;typeof console<"u"&&console.error(message);try{throw new Error(message)}catch{}},checkPropTypes.resetWarningCache=function(){loggedTypeFailures={}},module.exports=checkPropTypes}}),require_factoryWithTypeCheckers=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/prop-types/factoryWithTypeCheckers.js"(exports,module){var printWarning,ReactIs=require_react_is(),assign=require_object_assign(),ReactPropTypesSecret=require_ReactPropTypesSecret(),has2=require_has(),checkPropTypes=require_checkPropTypes();function emptyFunctionThatReturnsNull(){return null}printWarning=function(text){var message="Warning: "+text;typeof console<"u"&&console.error(message);try{throw new Error(message)}catch{}},module.exports=function(isValidElement4,throwOnDirectAccess){var ITERATOR_SYMBOL="function"==typeof Symbol&&Symbol.iterator;var ReactPropTypes={array:createPrimitiveTypeChecker("array"),bigint:createPrimitiveTypeChecker("bigint"),bool:createPrimitiveTypeChecker("boolean"),func:createPrimitiveTypeChecker("function"),number:createPrimitiveTypeChecker("number"),object:createPrimitiveTypeChecker("object"),string:createPrimitiveTypeChecker("string"),symbol:createPrimitiveTypeChecker("symbol"),any:function createAnyTypeChecker(){return createChainableTypeChecker(emptyFunctionThatReturnsNull)}(),arrayOf:function createArrayOfTypeChecker(typeChecker){return createChainableTypeChecker((function validate(props,propName,componentName,location,propFullName){if("function"!=typeof typeChecker)return new PropTypeError("Property `"+propFullName+"` of component `"+componentName+"` has invalid PropType notation inside arrayOf.");var propValue=props[propName];if(!Array.isArray(propValue))return new PropTypeError("Invalid "+location+" `"+propFullName+"` of type `"+getPropType(propValue)+"` supplied to `"+componentName+"`, expected an array.");for(var i=0;i<propValue.length;i++){var error=typeChecker(propValue,i,componentName,location,propFullName+"["+i+"]",ReactPropTypesSecret);if(error instanceof Error)return error}return null}))},element:function createElementTypeChecker(){return createChainableTypeChecker((function validate(props,propName,componentName,location,propFullName){var propValue=props[propName];return isValidElement4(propValue)?null:new PropTypeError("Invalid "+location+" `"+propFullName+"` of type `"+getPropType(propValue)+"` supplied to `"+componentName+"`, expected a single ReactElement.")}))}(),elementType:function createElementTypeTypeChecker(){return createChainableTypeChecker((function validate(props,propName,componentName,location,propFullName){var propValue=props[propName];return ReactIs.isValidElementType(propValue)?null:new PropTypeError("Invalid "+location+" `"+propFullName+"` of type `"+getPropType(propValue)+"` supplied to `"+componentName+"`, expected a single ReactElement type.")}))}(),instanceOf:function createInstanceTypeChecker(expectedClass){return createChainableTypeChecker((function validate(props,propName,componentName,location,propFullName){if(!(props[propName]instanceof expectedClass)){var expectedClassName=expectedClass.name||"<<anonymous>>";return new PropTypeError("Invalid "+location+" `"+propFullName+"` of type `"+function getClassName(propValue){return propValue.constructor&&propValue.constructor.name?propValue.constructor.name:"<<anonymous>>"}(props[propName])+"` supplied to `"+componentName+"`, expected instance of `"+expectedClassName+"`.")}return null}))},node:function createNodeChecker(){return createChainableTypeChecker((function validate(props,propName,componentName,location,propFullName){return isNode(props[propName])?null:new PropTypeError("Invalid "+location+" `"+propFullName+"` supplied to `"+componentName+"`, expected a ReactNode.")}))}(),objectOf:function createObjectOfTypeChecker(typeChecker){return createChainableTypeChecker((function validate(props,propName,componentName,location,propFullName){if("function"!=typeof typeChecker)return new PropTypeError("Property `"+propFullName+"` of component `"+componentName+"` has invalid PropType notation inside objectOf.");var propValue=props[propName],propType=getPropType(propValue);if("object"!==propType)return new PropTypeError("Invalid "+location+" `"+propFullName+"` of type `"+propType+"` supplied to `"+componentName+"`, expected an object.");for(var key in propValue)if(has2(propValue,key)){var error=typeChecker(propValue,key,componentName,location,propFullName+"."+key,ReactPropTypesSecret);if(error instanceof Error)return error}return null}))},oneOf:function createEnumTypeChecker(expectedValues){if(!Array.isArray(expectedValues))return printWarning(arguments.length>1?"Invalid arguments supplied to oneOf, expected an array, got "+arguments.length+" arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).":"Invalid argument supplied to oneOf, expected an array."),emptyFunctionThatReturnsNull;return createChainableTypeChecker((function validate(props,propName,componentName,location,propFullName){for(var propValue=props[propName],i=0;i<expectedValues.length;i++)if(x=propValue,y=expectedValues[i],x===y?0!==x||1/x==1/y:x!=x&&y!=y)return null;var x,y,valuesString=JSON.stringify(expectedValues,(function(key,value){return"symbol"===getPreciseType(value)?String(value):value}));return new PropTypeError("Invalid "+location+" `"+propFullName+"` of value `"+String(propValue)+"` supplied to `"+componentName+"`, expected one of "+valuesString+".")}))},oneOfType:function createUnionTypeChecker(arrayOfTypeCheckers){if(!Array.isArray(arrayOfTypeCheckers))return printWarning("Invalid argument supplied to oneOfType, expected an instance of array."),emptyFunctionThatReturnsNull;for(var i=0;i<arrayOfTypeCheckers.length;i++){var checker=arrayOfTypeCheckers[i];if("function"!=typeof checker)return printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received "+getPostfixForTypeWarning(checker)+" at index "+i+"."),emptyFunctionThatReturnsNull}return createChainableTypeChecker((function validate(props,propName,componentName,location,propFullName){for(var expectedTypes=[],i2=0;i2<arrayOfTypeCheckers.length;i2++){var checkerResult=(0,arrayOfTypeCheckers[i2])(props,propName,componentName,location,propFullName,ReactPropTypesSecret);if(null==checkerResult)return null;checkerResult.data&&has2(checkerResult.data,"expectedType")&&expectedTypes.push(checkerResult.data.expectedType)}return new PropTypeError("Invalid "+location+" `"+propFullName+"` supplied to `"+componentName+"`"+(expectedTypes.length>0?", expected one of type ["+expectedTypes.join(", ")+"]":"")+".")}))},shape:function createShapeTypeChecker(shapeTypes){return createChainableTypeChecker((function validate(props,propName,componentName,location,propFullName){var propValue=props[propName],propType=getPropType(propValue);if("object"!==propType)return new PropTypeError("Invalid "+location+" `"+propFullName+"` of type `"+propType+"` supplied to `"+componentName+"`, expected `object`.");for(var key in shapeTypes){var checker=shapeTypes[key];if("function"!=typeof checker)return invalidValidatorError(componentName,location,propFullName,key,getPreciseType(checker));var error=checker(propValue,key,componentName,location,propFullName+"."+key,ReactPropTypesSecret);if(error)return error}return null}))},exact:function createStrictShapeTypeChecker(shapeTypes){return createChainableTypeChecker((function validate(props,propName,componentName,location,propFullName){var propValue=props[propName],propType=getPropType(propValue);if("object"!==propType)return new PropTypeError("Invalid "+location+" `"+propFullName+"` of type `"+propType+"` supplied to `"+componentName+"`, expected `object`.");var allKeys=assign({},props[propName],shapeTypes);for(var key in allKeys){var checker=shapeTypes[key];if(has2(shapeTypes,key)&&"function"!=typeof checker)return invalidValidatorError(componentName,location,propFullName,key,getPreciseType(checker));if(!checker)return new PropTypeError("Invalid "+location+" `"+propFullName+"` key `"+key+"` supplied to `"+componentName+"`.\nBad object: "+JSON.stringify(props[propName],null,"  ")+"\nValid keys: "+JSON.stringify(Object.keys(shapeTypes),null,"  "));var error=checker(propValue,key,componentName,location,propFullName+"."+key,ReactPropTypesSecret);if(error)return error}return null}))}};function PropTypeError(message,data2){this.message=message,this.data=data2&&"object"==typeof data2?data2:{},this.stack=""}function createChainableTypeChecker(validate){var manualPropTypeCallCache={},manualPropTypeWarningCount=0;function checkType(isRequired,props,propName,componentName,location,propFullName,secret){if(componentName=componentName||"<<anonymous>>",propFullName=propFullName||propName,secret!==ReactPropTypesSecret){if(throwOnDirectAccess){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}if(typeof console<"u"){var cacheKey=componentName+":"+propName;!manualPropTypeCallCache[cacheKey]&&manualPropTypeWarningCount<3&&(printWarning("You are manually calling a React.PropTypes validation function for the `"+propFullName+"` prop on `"+componentName+"`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."),manualPropTypeCallCache[cacheKey]=!0,manualPropTypeWarningCount++)}}return null==props[propName]?isRequired?null===props[propName]?new PropTypeError("The "+location+" `"+propFullName+"` is marked as required in `"+componentName+"`, but its value is `null`."):new PropTypeError("The "+location+" `"+propFullName+"` is marked as required in `"+componentName+"`, but its value is `undefined`."):null:validate(props,propName,componentName,location,propFullName)}var chainedCheckType=checkType.bind(null,!1);return chainedCheckType.isRequired=checkType.bind(null,!0),chainedCheckType}function createPrimitiveTypeChecker(expectedType){return createChainableTypeChecker((function validate(props,propName,componentName,location,propFullName,secret){var propValue=props[propName];return getPropType(propValue)!==expectedType?new PropTypeError("Invalid "+location+" `"+propFullName+"` of type `"+getPreciseType(propValue)+"` supplied to `"+componentName+"`, expected `"+expectedType+"`.",{expectedType}):null}))}function invalidValidatorError(componentName,location,propFullName,key,type){return new PropTypeError((componentName||"React class")+": "+location+" type `"+propFullName+"."+key+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+type+"`.")}function isNode(propValue){switch(typeof propValue){case"number":case"string":case"undefined":return!0;case"boolean":return!propValue;case"object":if(Array.isArray(propValue))return propValue.every(isNode);if(null===propValue||isValidElement4(propValue))return!0;var iteratorFn=function getIteratorFn(maybeIterable){var iteratorFn=maybeIterable&&(ITERATOR_SYMBOL&&maybeIterable[ITERATOR_SYMBOL]||maybeIterable["@@iterator"]);if("function"==typeof iteratorFn)return iteratorFn}(propValue);if(!iteratorFn)return!1;var step,iterator=iteratorFn.call(propValue);if(iteratorFn!==propValue.entries){for(;!(step=iterator.next()).done;)if(!isNode(step.value))return!1}else for(;!(step=iterator.next()).done;){var entry=step.value;if(entry&&!isNode(entry[1]))return!1}return!0;default:return!1}}function getPropType(propValue){var propType=typeof propValue;return Array.isArray(propValue)?"array":propValue instanceof RegExp?"object":function isSymbol(propType,propValue){return"symbol"===propType||!!propValue&&("Symbol"===propValue["@@toStringTag"]||"function"==typeof Symbol&&propValue instanceof Symbol)}(propType,propValue)?"symbol":propType}function getPreciseType(propValue){if(typeof propValue>"u"||null===propValue)return""+propValue;var propType=getPropType(propValue);if("object"===propType){if(propValue instanceof Date)return"date";if(propValue instanceof RegExp)return"regexp"}return propType}function getPostfixForTypeWarning(value){var type=getPreciseType(value);switch(type){case"array":case"object":return"an "+type;case"boolean":case"date":case"regexp":return"a "+type;default:return type}}return PropTypeError.prototype=Error.prototype,ReactPropTypes.checkPropTypes=checkPropTypes,ReactPropTypes.resetWarningCache=checkPropTypes.resetWarningCache,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes}}}),require_prop_types=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/prop-types/index.js"(exports,module){var ReactIs;ReactIs=require_react_is(),module.exports=require_factoryWithTypeCheckers()(ReactIs.isElement,true)}}),require_html_tags=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/html-tags/html-tags.json"(exports,module){module.exports=["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","label","legend","li","link","main","map","mark","math","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rb","rp","rt","rtc","ruby","s","samp","script","search","section","select","slot","small","source","span","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr"]}}),require_html_tags2=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/html-tags/index.js"(exports,module){module.exports=require_html_tags()}}),require_estraverse=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/estraverse/estraverse.js"(exports){!function clone(exports2){var Syntax,VisitorOption,VisitorKeys,BREAK,SKIP,REMOVE;function deepCopy(obj){var key,val,ret={};for(key in obj)obj.hasOwnProperty(key)&&(val=obj[key],ret[key]="object"==typeof val&&null!==val?deepCopy(val):val);return ret}function Reference(parent,key){this.parent=parent,this.key=key}function Element(node,path,wrap,ref2){this.node=node,this.path=path,this.wrap=wrap,this.ref=ref2}function Controller(){}function isNode(node){return null!=node&&("object"==typeof node&&"string"==typeof node.type)}function isProperty(nodeType,key){return(nodeType===Syntax.ObjectExpression||nodeType===Syntax.ObjectPattern)&&"properties"===key}function candidateExistsInLeaveList(leavelist,candidate){for(var i=leavelist.length-1;i>=0;--i)if(leavelist[i].node===candidate)return!0;return!1}function traverse(root,visitor){return(new Controller).traverse(root,visitor)}function extendCommentRange(comment,tokens){var target;return target=function upperBound(array,func){var diff,len,i,current2;for(len=array.length,i=0;len;)func(array[current2=i+(diff=len>>>1)])?len=diff:(i=current2+1,len-=diff+1);return i}(tokens,(function(token){return token.range[0]>comment.range[0]})),comment.extendedRange=[comment.range[0],comment.range[1]],target!==tokens.length&&(comment.extendedRange[1]=tokens[target].range[0]),(target-=1)>=0&&(comment.extendedRange[0]=tokens[target].range[1]),comment}return Syntax={AssignmentExpression:"AssignmentExpression",AssignmentPattern:"AssignmentPattern",ArrayExpression:"ArrayExpression",ArrayPattern:"ArrayPattern",ArrowFunctionExpression:"ArrowFunctionExpression",AwaitExpression:"AwaitExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ChainExpression:"ChainExpression",ClassBody:"ClassBody",ClassDeclaration:"ClassDeclaration",ClassExpression:"ClassExpression",ComprehensionBlock:"ComprehensionBlock",ComprehensionExpression:"ComprehensionExpression",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DebuggerStatement:"DebuggerStatement",DirectiveStatement:"DirectiveStatement",DoWhileStatement:"DoWhileStatement",EmptyStatement:"EmptyStatement",ExportAllDeclaration:"ExportAllDeclaration",ExportDefaultDeclaration:"ExportDefaultDeclaration",ExportNamedDeclaration:"ExportNamedDeclaration",ExportSpecifier:"ExportSpecifier",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForInStatement:"ForInStatement",ForOfStatement:"ForOfStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",GeneratorExpression:"GeneratorExpression",Identifier:"Identifier",IfStatement:"IfStatement",ImportExpression:"ImportExpression",ImportDeclaration:"ImportDeclaration",ImportDefaultSpecifier:"ImportDefaultSpecifier",ImportNamespaceSpecifier:"ImportNamespaceSpecifier",ImportSpecifier:"ImportSpecifier",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",MetaProperty:"MetaProperty",MethodDefinition:"MethodDefinition",ModuleSpecifier:"ModuleSpecifier",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",ObjectPattern:"ObjectPattern",PrivateIdentifier:"PrivateIdentifier",Program:"Program",Property:"Property",PropertyDefinition:"PropertyDefinition",RestElement:"RestElement",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SpreadElement:"SpreadElement",Super:"Super",SwitchStatement:"SwitchStatement",SwitchCase:"SwitchCase",TaggedTemplateExpression:"TaggedTemplateExpression",TemplateElement:"TemplateElement",TemplateLiteral:"TemplateLiteral",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement",YieldExpression:"YieldExpression"},VisitorKeys={AssignmentExpression:["left","right"],AssignmentPattern:["left","right"],ArrayExpression:["elements"],ArrayPattern:["elements"],ArrowFunctionExpression:["params","body"],AwaitExpression:["argument"],BlockStatement:["body"],BinaryExpression:["left","right"],BreakStatement:["label"],CallExpression:["callee","arguments"],CatchClause:["param","body"],ChainExpression:["expression"],ClassBody:["body"],ClassDeclaration:["id","superClass","body"],ClassExpression:["id","superClass","body"],ComprehensionBlock:["left","right"],ComprehensionExpression:["blocks","filter","body"],ConditionalExpression:["test","consequent","alternate"],ContinueStatement:["label"],DebuggerStatement:[],DirectiveStatement:[],DoWhileStatement:["body","test"],EmptyStatement:[],ExportAllDeclaration:["source"],ExportDefaultDeclaration:["declaration"],ExportNamedDeclaration:["declaration","specifiers","source"],ExportSpecifier:["exported","local"],ExpressionStatement:["expression"],ForStatement:["init","test","update","body"],ForInStatement:["left","right","body"],ForOfStatement:["left","right","body"],FunctionDeclaration:["id","params","body"],FunctionExpression:["id","params","body"],GeneratorExpression:["blocks","filter","body"],Identifier:[],IfStatement:["test","consequent","alternate"],ImportExpression:["source"],ImportDeclaration:["specifiers","source"],ImportDefaultSpecifier:["local"],ImportNamespaceSpecifier:["local"],ImportSpecifier:["imported","local"],Literal:[],LabeledStatement:["label","body"],LogicalExpression:["left","right"],MemberExpression:["object","property"],MetaProperty:["meta","property"],MethodDefinition:["key","value"],ModuleSpecifier:[],NewExpression:["callee","arguments"],ObjectExpression:["properties"],ObjectPattern:["properties"],PrivateIdentifier:[],Program:["body"],Property:["key","value"],PropertyDefinition:["key","value"],RestElement:["argument"],ReturnStatement:["argument"],SequenceExpression:["expressions"],SpreadElement:["argument"],Super:[],SwitchStatement:["discriminant","cases"],SwitchCase:["test","consequent"],TaggedTemplateExpression:["tag","quasi"],TemplateElement:[],TemplateLiteral:["quasis","expressions"],ThisExpression:[],ThrowStatement:["argument"],TryStatement:["block","handler","finalizer"],UnaryExpression:["argument"],UpdateExpression:["argument"],VariableDeclaration:["declarations"],VariableDeclarator:["id","init"],WhileStatement:["test","body"],WithStatement:["object","body"],YieldExpression:["argument"]},VisitorOption={Break:BREAK={},Skip:SKIP={},Remove:REMOVE={}},Reference.prototype.replace=function(node){this.parent[this.key]=node},Reference.prototype.remove=function(){return Array.isArray(this.parent)?(this.parent.splice(this.key,1),!0):(this.replace(null),!1)},Controller.prototype.path=function(){var i,iz,j,jz,result;function addToPath(result2,path2){if(Array.isArray(path2))for(j=0,jz=path2.length;j<jz;++j)result2.push(path2[j]);else result2.push(path2)}if(!this.__current.path)return null;for(result=[],i=2,iz=this.__leavelist.length;i<iz;++i)addToPath(result,this.__leavelist[i].path);return addToPath(result,this.__current.path),result},Controller.prototype.type=function(){return this.current().type||this.__current.wrap},Controller.prototype.parents=function(){var i,iz,result;for(result=[],i=1,iz=this.__leavelist.length;i<iz;++i)result.push(this.__leavelist[i].node);return result},Controller.prototype.current=function(){return this.__current.node},Controller.prototype.__execute=function(callback,element){var previous,result;return result=void 0,previous=this.__current,this.__current=element,this.__state=null,callback&&(result=callback.call(this,element.node,this.__leavelist[this.__leavelist.length-1].node)),this.__current=previous,result},Controller.prototype.notify=function(flag){this.__state=flag},Controller.prototype.skip=function(){this.notify(SKIP)},Controller.prototype.break=function(){this.notify(BREAK)},Controller.prototype.remove=function(){this.notify(REMOVE)},Controller.prototype.__initialize=function(root,visitor){this.visitor=visitor,this.root=root,this.__worklist=[],this.__leavelist=[],this.__current=null,this.__state=null,this.__fallback=null,"iteration"===visitor.fallback?this.__fallback=Object.keys:"function"==typeof visitor.fallback&&(this.__fallback=visitor.fallback),this.__keys=VisitorKeys,visitor.keys&&(this.__keys=Object.assign(Object.create(this.__keys),visitor.keys))},Controller.prototype.traverse=function(root,visitor){var worklist,leavelist,element,node,nodeType,ret,key,current2,current22,candidates,candidate,sentinel;for(this.__initialize(root,visitor),sentinel={},worklist=this.__worklist,leavelist=this.__leavelist,worklist.push(new Element(root,null,null,null)),leavelist.push(new Element(null,null,null,null));worklist.length;)if((element=worklist.pop())!==sentinel){if(element.node){if(ret=this.__execute(visitor.enter,element),this.__state===BREAK||ret===BREAK)return;if(worklist.push(sentinel),leavelist.push(element),this.__state===SKIP||ret===SKIP)continue;if(nodeType=(node=element.node).type||element.wrap,!(candidates=this.__keys[nodeType])){if(!this.__fallback)throw new Error("Unknown node type "+nodeType+".");candidates=this.__fallback(node)}for(current2=candidates.length;(current2-=1)>=0;)if(candidate=node[key=candidates[current2]])if(Array.isArray(candidate)){for(current22=candidate.length;(current22-=1)>=0;)if(candidate[current22]&&!candidateExistsInLeaveList(leavelist,candidate[current22])){if(isProperty(nodeType,candidates[current2]))element=new Element(candidate[current22],[key,current22],"Property",null);else{if(!isNode(candidate[current22]))continue;element=new Element(candidate[current22],[key,current22],null,null)}worklist.push(element)}}else if(isNode(candidate)){if(candidateExistsInLeaveList(leavelist,candidate))continue;worklist.push(new Element(candidate,key,null,null))}}}else if(element=leavelist.pop(),ret=this.__execute(visitor.leave,element),this.__state===BREAK||ret===BREAK)return},Controller.prototype.replace=function(root,visitor){var worklist,leavelist,node,nodeType,target,element,current2,current22,candidates,candidate,sentinel,outer,key;function removeElem(element2){var i,key2,nextElem,parent;if(element2.ref.remove())for(key2=element2.ref.key,parent=element2.ref.parent,i=worklist.length;i--;)if((nextElem=worklist[i]).ref&&nextElem.ref.parent===parent){if(nextElem.ref.key<key2)break;--nextElem.ref.key}}for(this.__initialize(root,visitor),sentinel={},worklist=this.__worklist,leavelist=this.__leavelist,element=new Element(root,null,null,new Reference(outer={root},"root")),worklist.push(element),leavelist.push(element);worklist.length;)if((element=worklist.pop())!==sentinel){if(void 0!==(target=this.__execute(visitor.enter,element))&&target!==BREAK&&target!==SKIP&&target!==REMOVE&&(element.ref.replace(target),element.node=target),(this.__state===REMOVE||target===REMOVE)&&(removeElem(element),element.node=null),this.__state===BREAK||target===BREAK)return outer.root;if((node=element.node)&&(worklist.push(sentinel),leavelist.push(element),this.__state!==SKIP&&target!==SKIP)){if(nodeType=node.type||element.wrap,!(candidates=this.__keys[nodeType])){if(!this.__fallback)throw new Error("Unknown node type "+nodeType+".");candidates=this.__fallback(node)}for(current2=candidates.length;(current2-=1)>=0;)if(candidate=node[key=candidates[current2]])if(Array.isArray(candidate)){for(current22=candidate.length;(current22-=1)>=0;)if(candidate[current22]){if(isProperty(nodeType,candidates[current2]))element=new Element(candidate[current22],[key,current22],"Property",new Reference(candidate,current22));else{if(!isNode(candidate[current22]))continue;element=new Element(candidate[current22],[key,current22],null,new Reference(candidate,current22))}worklist.push(element)}}else isNode(candidate)&&worklist.push(new Element(candidate,key,null,new Reference(node,key)))}}else if(element=leavelist.pop(),void 0!==(target=this.__execute(visitor.leave,element))&&target!==BREAK&&target!==SKIP&&target!==REMOVE&&element.ref.replace(target),(this.__state===REMOVE||target===REMOVE)&&removeElem(element),this.__state===BREAK||target===BREAK)return outer.root;return outer.root},exports2.Syntax=Syntax,exports2.traverse=traverse,exports2.replace=function replace(root,visitor){return(new Controller).replace(root,visitor)},exports2.attachComments=function attachComments(tree,providedComments,tokens){var comment,len,i,cursor,comments=[];if(!tree.range)throw new Error("attachComments needs range information");if(!tokens.length){if(providedComments.length){for(i=0,len=providedComments.length;i<len;i+=1)(comment=deepCopy(providedComments[i])).extendedRange=[0,tree.range[0]],comments.push(comment);tree.leadingComments=comments}return tree}for(i=0,len=providedComments.length;i<len;i+=1)comments.push(extendCommentRange(deepCopy(providedComments[i]),tokens));return cursor=0,traverse(tree,{enter:function(node){for(var comment2;cursor<comments.length&&!((comment2=comments[cursor]).extendedRange[1]>node.range[0]);)comment2.extendedRange[1]===node.range[0]?(node.leadingComments||(node.leadingComments=[]),node.leadingComments.push(comment2),comments.splice(cursor,1)):cursor+=1;return cursor===comments.length?VisitorOption.Break:comments[cursor].extendedRange[0]>node.range[1]?VisitorOption.Skip:void 0}}),cursor=0,traverse(tree,{leave:function(node){for(var comment2;cursor<comments.length&&(comment2=comments[cursor],!(node.range[1]<comment2.extendedRange[0]));)node.range[1]===comment2.extendedRange[0]?(node.trailingComments||(node.trailingComments=[]),node.trailingComments.push(comment2),comments.splice(cursor,1)):cursor+=1;return cursor===comments.length?VisitorOption.Break:comments[cursor].extendedRange[0]>node.range[1]?VisitorOption.Skip:void 0}}),tree},exports2.VisitorKeys=VisitorKeys,exports2.VisitorOption=VisitorOption,exports2.Controller=Controller,exports2.cloneEnvironment=function(){return clone({})},exports2}(exports)}}),require_ast=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/esutils/lib/ast.js"(exports,module){!function(){function isStatement(node){if(null==node)return!1;switch(node.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":return!0}return!1}function trailingStatement(node){switch(node.type){case"IfStatement":return null!=node.alternate?node.alternate:node.consequent;case"LabeledStatement":case"ForStatement":case"ForInStatement":case"WhileStatement":case"WithStatement":return node.body}return null}module.exports={isExpression:function isExpression(node){if(null==node)return!1;switch(node.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"Literal":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":return!0}return!1},isStatement,isIterationStatement:function isIterationStatement(node){if(null==node)return!1;switch(node.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":return!0}return!1},isSourceElement:function isSourceElement(node){return isStatement(node)||null!=node&&"FunctionDeclaration"===node.type},isProblematicIfStatement:function isProblematicIfStatement(node){var current2;if("IfStatement"!==node.type||null==node.alternate)return!1;current2=node.consequent;do{if("IfStatement"===current2.type&&null==current2.alternate)return!0;current2=trailingStatement(current2)}while(current2);return!1},trailingStatement}}()}}),require_code=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/esutils/lib/code.js"(exports,module){!function(){var ES6Regex,ES5Regex,NON_ASCII_WHITESPACES,IDENTIFIER_START,IDENTIFIER_PART,ch;function fromCodePoint(cp){return cp<=65535?String.fromCharCode(cp):String.fromCharCode(Math.floor((cp-65536)/1024)+55296)+String.fromCharCode((cp-65536)%1024+56320)}for(ES5Regex={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,NonAsciiIdentifierPart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/},ES6Regex={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/},NON_ASCII_WHITESPACES=[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279],IDENTIFIER_START=new Array(128),ch=0;ch<128;++ch)IDENTIFIER_START[ch]=ch>=97&&ch<=122||ch>=65&&ch<=90||36===ch||95===ch;for(IDENTIFIER_PART=new Array(128),ch=0;ch<128;++ch)IDENTIFIER_PART[ch]=ch>=97&&ch<=122||ch>=65&&ch<=90||ch>=48&&ch<=57||36===ch||95===ch;module.exports={isDecimalDigit:function isDecimalDigit2(ch2){return 48<=ch2&&ch2<=57},isHexDigit:function isHexDigit2(ch2){return 48<=ch2&&ch2<=57||97<=ch2&&ch2<=102||65<=ch2&&ch2<=70},isOctalDigit:function isOctalDigit2(ch2){return ch2>=48&&ch2<=55},isWhiteSpace:function isWhiteSpace(ch2){return 32===ch2||9===ch2||11===ch2||12===ch2||160===ch2||ch2>=5760&&NON_ASCII_WHITESPACES.indexOf(ch2)>=0},isLineTerminator:function isLineTerminator(ch2){return 10===ch2||13===ch2||8232===ch2||8233===ch2},isIdentifierStartES5:function isIdentifierStartES5(ch2){return ch2<128?IDENTIFIER_START[ch2]:ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch2))},isIdentifierPartES5:function isIdentifierPartES5(ch2){return ch2<128?IDENTIFIER_PART[ch2]:ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch2))},isIdentifierStartES6:function isIdentifierStartES6(ch2){return ch2<128?IDENTIFIER_START[ch2]:ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch2))},isIdentifierPartES6:function isIdentifierPartES6(ch2){return ch2<128?IDENTIFIER_PART[ch2]:ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch2))}}}()}}),require_keyword=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/esutils/lib/keyword.js"(exports,module){!function(){var code=require_code();function isKeywordES5(id,strict){return!(!strict&&"yield"===id)&&isKeywordES6(id,strict)}function isKeywordES6(id,strict){if(strict&&function isStrictModeReservedWordES6(id){switch(id){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"let":return!0;default:return!1}}(id))return!0;switch(id.length){case 2:return"if"===id||"in"===id||"do"===id;case 3:return"var"===id||"for"===id||"new"===id||"try"===id;case 4:return"this"===id||"else"===id||"case"===id||"void"===id||"with"===id||"enum"===id;case 5:return"while"===id||"break"===id||"catch"===id||"throw"===id||"const"===id||"yield"===id||"class"===id||"super"===id;case 6:return"return"===id||"typeof"===id||"delete"===id||"switch"===id||"export"===id||"import"===id;case 7:return"default"===id||"finally"===id||"extends"===id;case 8:return"function"===id||"continue"===id||"debugger"===id;case 10:return"instanceof"===id;default:return!1}}function isReservedWordES5(id,strict){return"null"===id||"true"===id||"false"===id||isKeywordES5(id,strict)}function isReservedWordES6(id,strict){return"null"===id||"true"===id||"false"===id||isKeywordES6(id,strict)}function isIdentifierNameES5(id){var i,iz,ch;if(0===id.length||(ch=id.charCodeAt(0),!code.isIdentifierStartES5(ch)))return!1;for(i=1,iz=id.length;i<iz;++i)if(ch=id.charCodeAt(i),!code.isIdentifierPartES5(ch))return!1;return!0}function isIdentifierNameES6(id){var i,iz,ch,lowCh,check;if(0===id.length)return!1;for(check=code.isIdentifierStartES6,i=0,iz=id.length;i<iz;++i){if(55296<=(ch=id.charCodeAt(i))&&ch<=56319){if(++i>=iz||!(56320<=(lowCh=id.charCodeAt(i))&&lowCh<=57343))return!1;ch=1024*(ch-55296)+(lowCh-56320)+65536}if(!check(ch))return!1;check=code.isIdentifierPartES6}return!0}module.exports={isKeywordES5,isKeywordES6,isReservedWordES5,isReservedWordES6,isRestrictedWord:function isRestrictedWord(id){return"eval"===id||"arguments"===id},isIdentifierNameES5,isIdentifierNameES6,isIdentifierES5:function isIdentifierES5(id,strict){return isIdentifierNameES5(id)&&!isReservedWordES5(id,strict)},isIdentifierES6:function isIdentifierES6(id,strict){return isIdentifierNameES6(id)&&!isReservedWordES6(id,strict)}}}()}}),require_utils=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/esutils/lib/utils.js"(exports){exports.ast=require_ast(),exports.code=require_code(),exports.keyword=require_keyword()}}),require_base64=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/base64.js"(exports){var intToCharMap="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");exports.encode=function(number){if(0<=number&&number<intToCharMap.length)return intToCharMap[number];throw new TypeError("Must be between 0 and 63: "+number)},exports.decode=function(charCode){return 65<=charCode&&charCode<=90?charCode-65:97<=charCode&&charCode<=122?charCode-97+26:48<=charCode&&charCode<=57?charCode-48+52:43==charCode?62:47==charCode?63:-1}}}),require_base64_vlq=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/base64-vlq.js"(exports){var base64=require_base64();exports.encode=function(aValue){var digit,encoded="",vlq=function toVLQSigned(aValue){return aValue<0?1+(-aValue<<1):0+(aValue<<1)}(aValue);do{digit=31&vlq,(vlq>>>=5)>0&&(digit|=32),encoded+=base64.encode(digit)}while(vlq>0);return encoded},exports.decode=function(aStr,aIndex,aOutParam){var continuation,digit,strLen=aStr.length,result=0,shift=0;do{if(aIndex>=strLen)throw new Error("Expected more digits in base 64 VLQ value.");if(-1===(digit=base64.decode(aStr.charCodeAt(aIndex++))))throw new Error("Invalid base64 digit: "+aStr.charAt(aIndex-1));continuation=!!(32&digit),result+=(digit&=31)<<shift,shift+=5}while(continuation);aOutParam.value=function fromVLQSigned(aValue){var shifted=aValue>>1;return 1&~aValue?shifted:-shifted}(result),aOutParam.rest=aIndex}}}),require_util=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/util.js"(exports){exports.getArg=function getArg(aArgs,aName,aDefaultValue){if(aName in aArgs)return aArgs[aName];if(3===arguments.length)return aDefaultValue;throw new Error('"'+aName+'" is a required argument.')};var urlRegexp=/^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/,dataUrlRegexp=/^data:.+\,.+$/;function urlParse(aUrl){var match=aUrl.match(urlRegexp);return match?{scheme:match[1],auth:match[2],host:match[3],port:match[4],path:match[5]}:null}function urlGenerate(aParsedUrl){var url="";return aParsedUrl.scheme&&(url+=aParsedUrl.scheme+":"),url+="//",aParsedUrl.auth&&(url+=aParsedUrl.auth+"@"),aParsedUrl.host&&(url+=aParsedUrl.host),aParsedUrl.port&&(url+=":"+aParsedUrl.port),aParsedUrl.path&&(url+=aParsedUrl.path),url}function normalize(aPath){var path=aPath,url=urlParse(aPath);if(url){if(!url.path)return aPath;path=url.path}for(var part,isAbsolute=exports.isAbsolute(path),parts=path.split(/\/+/),up=0,i=parts.length-1;i>=0;i--)"."===(part=parts[i])?parts.splice(i,1):".."===part?up++:up>0&&(""===part?(parts.splice(i+1,up),up=0):(parts.splice(i,2),up--));return""===(path=parts.join("/"))&&(path=isAbsolute?"/":"."),url?(url.path=path,urlGenerate(url)):path}function join(aRoot,aPath){""===aRoot&&(aRoot="."),""===aPath&&(aPath=".");var aPathUrl=urlParse(aPath),aRootUrl=urlParse(aRoot);if(aRootUrl&&(aRoot=aRootUrl.path||"/"),aPathUrl&&!aPathUrl.scheme)return aRootUrl&&(aPathUrl.scheme=aRootUrl.scheme),urlGenerate(aPathUrl);if(aPathUrl||aPath.match(dataUrlRegexp))return aPath;if(aRootUrl&&!aRootUrl.host&&!aRootUrl.path)return aRootUrl.host=aPath,urlGenerate(aRootUrl);var joined="/"===aPath.charAt(0)?aPath:normalize(aRoot.replace(/\/+$/,"")+"/"+aPath);return aRootUrl?(aRootUrl.path=joined,urlGenerate(aRootUrl)):joined}exports.urlParse=urlParse,exports.urlGenerate=urlGenerate,exports.normalize=normalize,exports.join=join,exports.isAbsolute=function(aPath){return"/"===aPath.charAt(0)||urlRegexp.test(aPath)},exports.relative=function relative(aRoot,aPath){""===aRoot&&(aRoot="."),aRoot=aRoot.replace(/\/$/,"");for(var level=0;0!==aPath.indexOf(aRoot+"/");){var index=aRoot.lastIndexOf("/");if(index<0||(aRoot=aRoot.slice(0,index)).match(/^([^\/]+:\/)?\/*$/))return aPath;++level}return Array(level+1).join("../")+aPath.substr(aRoot.length+1)};var supportsNullProto=!("__proto__"in Object.create(null));function identity(s){return s}function isProtoString(s){if(!s)return!1;var length=s.length;if(length<9||95!==s.charCodeAt(length-1)||95!==s.charCodeAt(length-2)||111!==s.charCodeAt(length-3)||116!==s.charCodeAt(length-4)||111!==s.charCodeAt(length-5)||114!==s.charCodeAt(length-6)||112!==s.charCodeAt(length-7)||95!==s.charCodeAt(length-8)||95!==s.charCodeAt(length-9))return!1;for(var i=length-10;i>=0;i--)if(36!==s.charCodeAt(i))return!1;return!0}function strcmp(aStr1,aStr2){return aStr1===aStr2?0:null===aStr1?1:null===aStr2?-1:aStr1>aStr2?1:-1}exports.toSetString=supportsNullProto?identity:function toSetString(aStr){return isProtoString(aStr)?"$"+aStr:aStr},exports.fromSetString=supportsNullProto?identity:function fromSetString(aStr){return isProtoString(aStr)?aStr.slice(1):aStr},exports.compareByOriginalPositions=function compareByOriginalPositions(mappingA,mappingB,onlyCompareOriginal){var cmp=strcmp(mappingA.source,mappingB.source);return 0!==cmp||0!==(cmp=mappingA.originalLine-mappingB.originalLine)||(0!==(cmp=mappingA.originalColumn-mappingB.originalColumn)||onlyCompareOriginal)||0!==(cmp=mappingA.generatedColumn-mappingB.generatedColumn)||0!==(cmp=mappingA.generatedLine-mappingB.generatedLine)?cmp:strcmp(mappingA.name,mappingB.name)},exports.compareByGeneratedPositionsDeflated=function compareByGeneratedPositionsDeflated(mappingA,mappingB,onlyCompareGenerated){var cmp=mappingA.generatedLine-mappingB.generatedLine;return 0!==cmp||(0!==(cmp=mappingA.generatedColumn-mappingB.generatedColumn)||onlyCompareGenerated)||0!==(cmp=strcmp(mappingA.source,mappingB.source))||0!==(cmp=mappingA.originalLine-mappingB.originalLine)||0!==(cmp=mappingA.originalColumn-mappingB.originalColumn)?cmp:strcmp(mappingA.name,mappingB.name)},exports.compareByGeneratedPositionsInflated=function compareByGeneratedPositionsInflated(mappingA,mappingB){var cmp=mappingA.generatedLine-mappingB.generatedLine;return 0!==cmp||0!==(cmp=mappingA.generatedColumn-mappingB.generatedColumn)||0!==(cmp=strcmp(mappingA.source,mappingB.source))||0!==(cmp=mappingA.originalLine-mappingB.originalLine)||0!==(cmp=mappingA.originalColumn-mappingB.originalColumn)?cmp:strcmp(mappingA.name,mappingB.name)},exports.parseSourceMapInput=function parseSourceMapInput(str){return JSON.parse(str.replace(/^\)]}'[^\n]*\n/,""))},exports.computeSourceURL=function computeSourceURL(sourceRoot,sourceURL,sourceMapURL){if(sourceURL=sourceURL||"",sourceRoot&&("/"!==sourceRoot[sourceRoot.length-1]&&"/"!==sourceURL[0]&&(sourceRoot+="/"),sourceURL=sourceRoot+sourceURL),sourceMapURL){var parsed=urlParse(sourceMapURL);if(!parsed)throw new Error("sourceMapURL could not be parsed");if(parsed.path){var index=parsed.path.lastIndexOf("/");index>=0&&(parsed.path=parsed.path.substring(0,index+1))}sourceURL=join(urlGenerate(parsed),sourceURL)}return normalize(sourceURL)}}}),require_array_set=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/array-set.js"(exports){var util=require_util(),has2=Object.prototype.hasOwnProperty,hasNativeMap=typeof Map<"u";function ArraySet(){this._array=[],this._set=hasNativeMap?new Map:Object.create(null)}ArraySet.fromArray=function(aArray,aAllowDuplicates){for(var set=new ArraySet,i=0,len=aArray.length;i<len;i++)set.add(aArray[i],aAllowDuplicates);return set},ArraySet.prototype.size=function(){return hasNativeMap?this._set.size:Object.getOwnPropertyNames(this._set).length},ArraySet.prototype.add=function(aStr,aAllowDuplicates){var sStr=hasNativeMap?aStr:util.toSetString(aStr),isDuplicate=hasNativeMap?this.has(aStr):has2.call(this._set,sStr),idx=this._array.length;(!isDuplicate||aAllowDuplicates)&&this._array.push(aStr),isDuplicate||(hasNativeMap?this._set.set(aStr,idx):this._set[sStr]=idx)},ArraySet.prototype.has=function(aStr){if(hasNativeMap)return this._set.has(aStr);var sStr=util.toSetString(aStr);return has2.call(this._set,sStr)},ArraySet.prototype.indexOf=function(aStr){if(hasNativeMap){var idx=this._set.get(aStr);if(idx>=0)return idx}else{var sStr=util.toSetString(aStr);if(has2.call(this._set,sStr))return this._set[sStr]}throw new Error('"'+aStr+'" is not in the set.')},ArraySet.prototype.at=function(aIdx){if(aIdx>=0&&aIdx<this._array.length)return this._array[aIdx];throw new Error("No element indexed by "+aIdx)},ArraySet.prototype.toArray=function(){return this._array.slice()},exports.ArraySet=ArraySet}}),require_mapping_list=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/mapping-list.js"(exports){var util=require_util();function MappingList(){this._array=[],this._sorted=!0,this._last={generatedLine:-1,generatedColumn:0}}MappingList.prototype.unsortedForEach=function(aCallback,aThisArg){this._array.forEach(aCallback,aThisArg)},MappingList.prototype.add=function(aMapping){!function generatedPositionAfter(mappingA,mappingB){var lineA=mappingA.generatedLine,lineB=mappingB.generatedLine,columnA=mappingA.generatedColumn,columnB=mappingB.generatedColumn;return lineB>lineA||lineB==lineA&&columnB>=columnA||util.compareByGeneratedPositionsInflated(mappingA,mappingB)<=0}(this._last,aMapping)?(this._sorted=!1,this._array.push(aMapping)):(this._last=aMapping,this._array.push(aMapping))},MappingList.prototype.toArray=function(){return this._sorted||(this._array.sort(util.compareByGeneratedPositionsInflated),this._sorted=!0),this._array},exports.MappingList=MappingList}}),require_source_map_generator=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/source-map-generator.js"(exports){var base64VLQ=require_base64_vlq(),util=require_util(),ArraySet=require_array_set().ArraySet,MappingList=require_mapping_list().MappingList;function SourceMapGenerator(aArgs){aArgs||(aArgs={}),this._file=util.getArg(aArgs,"file",null),this._sourceRoot=util.getArg(aArgs,"sourceRoot",null),this._skipValidation=util.getArg(aArgs,"skipValidation",!1),this._sources=new ArraySet,this._names=new ArraySet,this._mappings=new MappingList,this._sourcesContents=null}SourceMapGenerator.prototype._version=3,SourceMapGenerator.fromSourceMap=function(aSourceMapConsumer){var sourceRoot=aSourceMapConsumer.sourceRoot,generator=new SourceMapGenerator({file:aSourceMapConsumer.file,sourceRoot});return aSourceMapConsumer.eachMapping((function(mapping){var newMapping={generated:{line:mapping.generatedLine,column:mapping.generatedColumn}};null!=mapping.source&&(newMapping.source=mapping.source,null!=sourceRoot&&(newMapping.source=util.relative(sourceRoot,newMapping.source)),newMapping.original={line:mapping.originalLine,column:mapping.originalColumn},null!=mapping.name&&(newMapping.name=mapping.name)),generator.addMapping(newMapping)})),aSourceMapConsumer.sources.forEach((function(sourceFile){var sourceRelative=sourceFile;null!==sourceRoot&&(sourceRelative=util.relative(sourceRoot,sourceFile)),generator._sources.has(sourceRelative)||generator._sources.add(sourceRelative);var content=aSourceMapConsumer.sourceContentFor(sourceFile);null!=content&&generator.setSourceContent(sourceFile,content)})),generator},SourceMapGenerator.prototype.addMapping=function(aArgs){var generated=util.getArg(aArgs,"generated"),original=util.getArg(aArgs,"original",null),source=util.getArg(aArgs,"source",null),name=util.getArg(aArgs,"name",null);this._skipValidation||this._validateMapping(generated,original,source,name),null!=source&&(source=String(source),this._sources.has(source)||this._sources.add(source)),null!=name&&(name=String(name),this._names.has(name)||this._names.add(name)),this._mappings.add({generatedLine:generated.line,generatedColumn:generated.column,originalLine:null!=original&&original.line,originalColumn:null!=original&&original.column,source,name})},SourceMapGenerator.prototype.setSourceContent=function(aSourceFile,aSourceContent){var source=aSourceFile;null!=this._sourceRoot&&(source=util.relative(this._sourceRoot,source)),null!=aSourceContent?(this._sourcesContents||(this._sourcesContents=Object.create(null)),this._sourcesContents[util.toSetString(source)]=aSourceContent):this._sourcesContents&&(delete this._sourcesContents[util.toSetString(source)],0===Object.keys(this._sourcesContents).length&&(this._sourcesContents=null))},SourceMapGenerator.prototype.applySourceMap=function(aSourceMapConsumer,aSourceFile,aSourceMapPath){var sourceFile=aSourceFile;if(null==aSourceFile){if(null==aSourceMapConsumer.file)throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');sourceFile=aSourceMapConsumer.file}var sourceRoot=this._sourceRoot;null!=sourceRoot&&(sourceFile=util.relative(sourceRoot,sourceFile));var newSources=new ArraySet,newNames=new ArraySet;this._mappings.unsortedForEach((function(mapping){if(mapping.source===sourceFile&&null!=mapping.originalLine){var original=aSourceMapConsumer.originalPositionFor({line:mapping.originalLine,column:mapping.originalColumn});null!=original.source&&(mapping.source=original.source,null!=aSourceMapPath&&(mapping.source=util.join(aSourceMapPath,mapping.source)),null!=sourceRoot&&(mapping.source=util.relative(sourceRoot,mapping.source)),mapping.originalLine=original.line,mapping.originalColumn=original.column,null!=original.name&&(mapping.name=original.name))}var source=mapping.source;null!=source&&!newSources.has(source)&&newSources.add(source);var name=mapping.name;null!=name&&!newNames.has(name)&&newNames.add(name)}),this),this._sources=newSources,this._names=newNames,aSourceMapConsumer.sources.forEach((function(sourceFile2){var content=aSourceMapConsumer.sourceContentFor(sourceFile2);null!=content&&(null!=aSourceMapPath&&(sourceFile2=util.join(aSourceMapPath,sourceFile2)),null!=sourceRoot&&(sourceFile2=util.relative(sourceRoot,sourceFile2)),this.setSourceContent(sourceFile2,content))}),this)},SourceMapGenerator.prototype._validateMapping=function(aGenerated,aOriginal,aSource,aName){if(aOriginal&&"number"!=typeof aOriginal.line&&"number"!=typeof aOriginal.column)throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");if(!(aGenerated&&"line"in aGenerated&&"column"in aGenerated&&aGenerated.line>0&&aGenerated.column>=0)||aOriginal||aSource||aName){if(aGenerated&&"line"in aGenerated&&"column"in aGenerated&&aOriginal&&"line"in aOriginal&&"column"in aOriginal&&aGenerated.line>0&&aGenerated.column>=0&&aOriginal.line>0&&aOriginal.column>=0&&aSource)return;throw new Error("Invalid mapping: "+JSON.stringify({generated:aGenerated,source:aSource,original:aOriginal,name:aName}))}},SourceMapGenerator.prototype._serializeMappings=function(){for(var next,mapping,nameIdx,sourceIdx,previousGeneratedColumn=0,previousGeneratedLine=1,previousOriginalColumn=0,previousOriginalLine=0,previousName=0,previousSource=0,result="",mappings=this._mappings.toArray(),i=0,len=mappings.length;i<len;i++){if(next="",(mapping=mappings[i]).generatedLine!==previousGeneratedLine)for(previousGeneratedColumn=0;mapping.generatedLine!==previousGeneratedLine;)next+=";",previousGeneratedLine++;else if(i>0){if(!util.compareByGeneratedPositionsInflated(mapping,mappings[i-1]))continue;next+=","}next+=base64VLQ.encode(mapping.generatedColumn-previousGeneratedColumn),previousGeneratedColumn=mapping.generatedColumn,null!=mapping.source&&(sourceIdx=this._sources.indexOf(mapping.source),next+=base64VLQ.encode(sourceIdx-previousSource),previousSource=sourceIdx,next+=base64VLQ.encode(mapping.originalLine-1-previousOriginalLine),previousOriginalLine=mapping.originalLine-1,next+=base64VLQ.encode(mapping.originalColumn-previousOriginalColumn),previousOriginalColumn=mapping.originalColumn,null!=mapping.name&&(nameIdx=this._names.indexOf(mapping.name),next+=base64VLQ.encode(nameIdx-previousName),previousName=nameIdx)),result+=next}return result},SourceMapGenerator.prototype._generateSourcesContent=function(aSources,aSourceRoot){return aSources.map((function(source){if(!this._sourcesContents)return null;null!=aSourceRoot&&(source=util.relative(aSourceRoot,source));var key=util.toSetString(source);return Object.prototype.hasOwnProperty.call(this._sourcesContents,key)?this._sourcesContents[key]:null}),this)},SourceMapGenerator.prototype.toJSON=function(){var map={version:this._version,sources:this._sources.toArray(),names:this._names.toArray(),mappings:this._serializeMappings()};return null!=this._file&&(map.file=this._file),null!=this._sourceRoot&&(map.sourceRoot=this._sourceRoot),this._sourcesContents&&(map.sourcesContent=this._generateSourcesContent(map.sources,map.sourceRoot)),map},SourceMapGenerator.prototype.toString=function(){return JSON.stringify(this.toJSON())},exports.SourceMapGenerator=SourceMapGenerator}}),require_binary_search=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/binary-search.js"(exports){function recursiveSearch(aLow,aHigh,aNeedle,aHaystack,aCompare,aBias){var mid=Math.floor((aHigh-aLow)/2)+aLow,cmp=aCompare(aNeedle,aHaystack[mid],!0);return 0===cmp?mid:cmp>0?aHigh-mid>1?recursiveSearch(mid,aHigh,aNeedle,aHaystack,aCompare,aBias):aBias==exports.LEAST_UPPER_BOUND?aHigh<aHaystack.length?aHigh:-1:mid:mid-aLow>1?recursiveSearch(aLow,mid,aNeedle,aHaystack,aCompare,aBias):aBias==exports.LEAST_UPPER_BOUND?mid:aLow<0?-1:aLow}exports.GREATEST_LOWER_BOUND=1,exports.LEAST_UPPER_BOUND=2,exports.search=function(aNeedle,aHaystack,aCompare,aBias){if(0===aHaystack.length)return-1;var index=recursiveSearch(-1,aHaystack.length,aNeedle,aHaystack,aCompare,aBias||exports.GREATEST_LOWER_BOUND);if(index<0)return-1;for(;index-1>=0&&0===aCompare(aHaystack[index],aHaystack[index-1],!0);)--index;return index}}}),require_quick_sort=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/quick-sort.js"(exports){function swap(ary,x,y){var temp=ary[x];ary[x]=ary[y],ary[y]=temp}function doQuickSort(ary,comparator,p,r){if(p<r){var i=p-1;swap(ary,function randomIntInRange(low,high){return Math.round(low+Math.random()*(high-low))}(p,r),r);for(var pivot=ary[r],j=p;j<r;j++)comparator(ary[j],pivot)<=0&&swap(ary,i+=1,j);swap(ary,i+1,j);var q=i+1;doQuickSort(ary,comparator,p,q-1),doQuickSort(ary,comparator,q+1,r)}}exports.quickSort=function(ary,comparator){doQuickSort(ary,comparator,0,ary.length-1)}}}),require_source_map_consumer=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/source-map-consumer.js"(exports){var util=require_util(),binarySearch=require_binary_search(),ArraySet=require_array_set().ArraySet,base64VLQ=require_base64_vlq(),quickSort=require_quick_sort().quickSort;function SourceMapConsumer(aSourceMap,aSourceMapURL){var sourceMap=aSourceMap;return"string"==typeof aSourceMap&&(sourceMap=util.parseSourceMapInput(aSourceMap)),null!=sourceMap.sections?new IndexedSourceMapConsumer(sourceMap,aSourceMapURL):new BasicSourceMapConsumer(sourceMap,aSourceMapURL)}function BasicSourceMapConsumer(aSourceMap,aSourceMapURL){var sourceMap=aSourceMap;"string"==typeof aSourceMap&&(sourceMap=util.parseSourceMapInput(aSourceMap));var version2=util.getArg(sourceMap,"version"),sources=util.getArg(sourceMap,"sources"),names=util.getArg(sourceMap,"names",[]),sourceRoot=util.getArg(sourceMap,"sourceRoot",null),sourcesContent=util.getArg(sourceMap,"sourcesContent",null),mappings=util.getArg(sourceMap,"mappings"),file=util.getArg(sourceMap,"file",null);if(version2!=this._version)throw new Error("Unsupported version: "+version2);sourceRoot&&(sourceRoot=util.normalize(sourceRoot)),sources=sources.map(String).map(util.normalize).map((function(source){return sourceRoot&&util.isAbsolute(sourceRoot)&&util.isAbsolute(source)?util.relative(sourceRoot,source):source})),this._names=ArraySet.fromArray(names.map(String),!0),this._sources=ArraySet.fromArray(sources,!0),this._absoluteSources=this._sources.toArray().map((function(s){return util.computeSourceURL(sourceRoot,s,aSourceMapURL)})),this.sourceRoot=sourceRoot,this.sourcesContent=sourcesContent,this._mappings=mappings,this._sourceMapURL=aSourceMapURL,this.file=file}function Mapping(){this.generatedLine=0,this.generatedColumn=0,this.source=null,this.originalLine=null,this.originalColumn=null,this.name=null}function IndexedSourceMapConsumer(aSourceMap,aSourceMapURL){var sourceMap=aSourceMap;"string"==typeof aSourceMap&&(sourceMap=util.parseSourceMapInput(aSourceMap));var version2=util.getArg(sourceMap,"version"),sections=util.getArg(sourceMap,"sections");if(version2!=this._version)throw new Error("Unsupported version: "+version2);this._sources=new ArraySet,this._names=new ArraySet;var lastOffset={line:-1,column:0};this._sections=sections.map((function(s){if(s.url)throw new Error("Support for url field in sections not implemented.");var offset2=util.getArg(s,"offset"),offsetLine=util.getArg(offset2,"line"),offsetColumn=util.getArg(offset2,"column");if(offsetLine<lastOffset.line||offsetLine===lastOffset.line&&offsetColumn<lastOffset.column)throw new Error("Section offsets must be ordered and non-overlapping.");return lastOffset=offset2,{generatedOffset:{generatedLine:offsetLine+1,generatedColumn:offsetColumn+1},consumer:new SourceMapConsumer(util.getArg(s,"map"),aSourceMapURL)}}))}SourceMapConsumer.fromSourceMap=function(aSourceMap,aSourceMapURL){return BasicSourceMapConsumer.fromSourceMap(aSourceMap,aSourceMapURL)},SourceMapConsumer.prototype._version=3,SourceMapConsumer.prototype.__generatedMappings=null,Object.defineProperty(SourceMapConsumer.prototype,"_generatedMappings",{configurable:!0,enumerable:!0,get:function(){return this.__generatedMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__generatedMappings}}),SourceMapConsumer.prototype.__originalMappings=null,Object.defineProperty(SourceMapConsumer.prototype,"_originalMappings",{configurable:!0,enumerable:!0,get:function(){return this.__originalMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__originalMappings}}),SourceMapConsumer.prototype._charIsMappingSeparator=function(aStr,index){var c=aStr.charAt(index);return";"===c||","===c},SourceMapConsumer.prototype._parseMappings=function(aStr,aSourceRoot){throw new Error("Subclasses must implement _parseMappings")},SourceMapConsumer.GENERATED_ORDER=1,SourceMapConsumer.ORIGINAL_ORDER=2,SourceMapConsumer.GREATEST_LOWER_BOUND=1,SourceMapConsumer.LEAST_UPPER_BOUND=2,SourceMapConsumer.prototype.eachMapping=function(aCallback,aContext,aOrder){var mappings,context=aContext||null;switch(aOrder||SourceMapConsumer.GENERATED_ORDER){case SourceMapConsumer.GENERATED_ORDER:mappings=this._generatedMappings;break;case SourceMapConsumer.ORIGINAL_ORDER:mappings=this._originalMappings;break;default:throw new Error("Unknown order of iteration.")}var sourceRoot=this.sourceRoot;mappings.map((function(mapping){var source=null===mapping.source?null:this._sources.at(mapping.source);return{source:source=util.computeSourceURL(sourceRoot,source,this._sourceMapURL),generatedLine:mapping.generatedLine,generatedColumn:mapping.generatedColumn,originalLine:mapping.originalLine,originalColumn:mapping.originalColumn,name:null===mapping.name?null:this._names.at(mapping.name)}}),this).forEach(aCallback,context)},SourceMapConsumer.prototype.allGeneratedPositionsFor=function(aArgs){var line=util.getArg(aArgs,"line"),needle={source:util.getArg(aArgs,"source"),originalLine:line,originalColumn:util.getArg(aArgs,"column",0)};if(needle.source=this._findSourceIndex(needle.source),needle.source<0)return[];var mappings=[],index=this._findMapping(needle,this._originalMappings,"originalLine","originalColumn",util.compareByOriginalPositions,binarySearch.LEAST_UPPER_BOUND);if(index>=0){var mapping=this._originalMappings[index];if(void 0===aArgs.column)for(var originalLine=mapping.originalLine;mapping&&mapping.originalLine===originalLine;)mappings.push({line:util.getArg(mapping,"generatedLine",null),column:util.getArg(mapping,"generatedColumn",null),lastColumn:util.getArg(mapping,"lastGeneratedColumn",null)}),mapping=this._originalMappings[++index];else for(var originalColumn=mapping.originalColumn;mapping&&mapping.originalLine===line&&mapping.originalColumn==originalColumn;)mappings.push({line:util.getArg(mapping,"generatedLine",null),column:util.getArg(mapping,"generatedColumn",null),lastColumn:util.getArg(mapping,"lastGeneratedColumn",null)}),mapping=this._originalMappings[++index]}return mappings},exports.SourceMapConsumer=SourceMapConsumer,BasicSourceMapConsumer.prototype=Object.create(SourceMapConsumer.prototype),BasicSourceMapConsumer.prototype.consumer=SourceMapConsumer,BasicSourceMapConsumer.prototype._findSourceIndex=function(aSource){var i,relativeSource=aSource;if(null!=this.sourceRoot&&(relativeSource=util.relative(this.sourceRoot,relativeSource)),this._sources.has(relativeSource))return this._sources.indexOf(relativeSource);for(i=0;i<this._absoluteSources.length;++i)if(this._absoluteSources[i]==aSource)return i;return-1},BasicSourceMapConsumer.fromSourceMap=function(aSourceMap,aSourceMapURL){var smc=Object.create(BasicSourceMapConsumer.prototype),names=smc._names=ArraySet.fromArray(aSourceMap._names.toArray(),!0),sources=smc._sources=ArraySet.fromArray(aSourceMap._sources.toArray(),!0);smc.sourceRoot=aSourceMap._sourceRoot,smc.sourcesContent=aSourceMap._generateSourcesContent(smc._sources.toArray(),smc.sourceRoot),smc.file=aSourceMap._file,smc._sourceMapURL=aSourceMapURL,smc._absoluteSources=smc._sources.toArray().map((function(s){return util.computeSourceURL(smc.sourceRoot,s,aSourceMapURL)}));for(var generatedMappings=aSourceMap._mappings.toArray().slice(),destGeneratedMappings=smc.__generatedMappings=[],destOriginalMappings=smc.__originalMappings=[],i=0,length=generatedMappings.length;i<length;i++){var srcMapping=generatedMappings[i],destMapping=new Mapping;destMapping.generatedLine=srcMapping.generatedLine,destMapping.generatedColumn=srcMapping.generatedColumn,srcMapping.source&&(destMapping.source=sources.indexOf(srcMapping.source),destMapping.originalLine=srcMapping.originalLine,destMapping.originalColumn=srcMapping.originalColumn,srcMapping.name&&(destMapping.name=names.indexOf(srcMapping.name)),destOriginalMappings.push(destMapping)),destGeneratedMappings.push(destMapping)}return quickSort(smc.__originalMappings,util.compareByOriginalPositions),smc},BasicSourceMapConsumer.prototype._version=3,Object.defineProperty(BasicSourceMapConsumer.prototype,"sources",{get:function(){return this._absoluteSources.slice()}}),BasicSourceMapConsumer.prototype._parseMappings=function(aStr,aSourceRoot){for(var mapping,str,segment,end,value,generatedLine=1,previousGeneratedColumn=0,previousOriginalLine=0,previousOriginalColumn=0,previousSource=0,previousName=0,length=aStr.length,index=0,cachedSegments={},temp={},originalMappings=[],generatedMappings=[];index<length;)if(";"===aStr.charAt(index))generatedLine++,index++,previousGeneratedColumn=0;else if(","===aStr.charAt(index))index++;else{for((mapping=new Mapping).generatedLine=generatedLine,end=index;end<length&&!this._charIsMappingSeparator(aStr,end);end++);if(segment=cachedSegments[str=aStr.slice(index,end)])index+=str.length;else{for(segment=[];index<end;)base64VLQ.decode(aStr,index,temp),value=temp.value,index=temp.rest,segment.push(value);if(2===segment.length)throw new Error("Found a source, but no line and column");if(3===segment.length)throw new Error("Found a source and line, but no column");cachedSegments[str]=segment}mapping.generatedColumn=previousGeneratedColumn+segment[0],previousGeneratedColumn=mapping.generatedColumn,segment.length>1&&(mapping.source=previousSource+segment[1],previousSource+=segment[1],mapping.originalLine=previousOriginalLine+segment[2],previousOriginalLine=mapping.originalLine,mapping.originalLine+=1,mapping.originalColumn=previousOriginalColumn+segment[3],previousOriginalColumn=mapping.originalColumn,segment.length>4&&(mapping.name=previousName+segment[4],previousName+=segment[4])),generatedMappings.push(mapping),"number"==typeof mapping.originalLine&&originalMappings.push(mapping)}quickSort(generatedMappings,util.compareByGeneratedPositionsDeflated),this.__generatedMappings=generatedMappings,quickSort(originalMappings,util.compareByOriginalPositions),this.__originalMappings=originalMappings},BasicSourceMapConsumer.prototype._findMapping=function(aNeedle,aMappings,aLineName,aColumnName,aComparator,aBias){if(aNeedle[aLineName]<=0)throw new TypeError("Line must be greater than or equal to 1, got "+aNeedle[aLineName]);if(aNeedle[aColumnName]<0)throw new TypeError("Column must be greater than or equal to 0, got "+aNeedle[aColumnName]);return binarySearch.search(aNeedle,aMappings,aComparator,aBias)},BasicSourceMapConsumer.prototype.computeColumnSpans=function(){for(var index=0;index<this._generatedMappings.length;++index){var mapping=this._generatedMappings[index];if(index+1<this._generatedMappings.length){var nextMapping=this._generatedMappings[index+1];if(mapping.generatedLine===nextMapping.generatedLine){mapping.lastGeneratedColumn=nextMapping.generatedColumn-1;continue}}mapping.lastGeneratedColumn=1/0}},BasicSourceMapConsumer.prototype.originalPositionFor=function(aArgs){var needle={generatedLine:util.getArg(aArgs,"line"),generatedColumn:util.getArg(aArgs,"column")},index=this._findMapping(needle,this._generatedMappings,"generatedLine","generatedColumn",util.compareByGeneratedPositionsDeflated,util.getArg(aArgs,"bias",SourceMapConsumer.GREATEST_LOWER_BOUND));if(index>=0){var mapping=this._generatedMappings[index];if(mapping.generatedLine===needle.generatedLine){var source=util.getArg(mapping,"source",null);null!==source&&(source=this._sources.at(source),source=util.computeSourceURL(this.sourceRoot,source,this._sourceMapURL));var name=util.getArg(mapping,"name",null);return null!==name&&(name=this._names.at(name)),{source,line:util.getArg(mapping,"originalLine",null),column:util.getArg(mapping,"originalColumn",null),name}}}return{source:null,line:null,column:null,name:null}},BasicSourceMapConsumer.prototype.hasContentsOfAllSources=function(){return!!this.sourcesContent&&(this.sourcesContent.length>=this._sources.size()&&!this.sourcesContent.some((function(sc){return null==sc})))},BasicSourceMapConsumer.prototype.sourceContentFor=function(aSource,nullOnMissing){if(!this.sourcesContent)return null;var index=this._findSourceIndex(aSource);if(index>=0)return this.sourcesContent[index];var url,relativeSource=aSource;if(null!=this.sourceRoot&&(relativeSource=util.relative(this.sourceRoot,relativeSource)),null!=this.sourceRoot&&(url=util.urlParse(this.sourceRoot))){var fileUriAbsPath=relativeSource.replace(/^file:\/\//,"");if("file"==url.scheme&&this._sources.has(fileUriAbsPath))return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];if((!url.path||"/"==url.path)&&this._sources.has("/"+relativeSource))return this.sourcesContent[this._sources.indexOf("/"+relativeSource)]}if(nullOnMissing)return null;throw new Error('"'+relativeSource+'" is not in the SourceMap.')},BasicSourceMapConsumer.prototype.generatedPositionFor=function(aArgs){var source=util.getArg(aArgs,"source");if((source=this._findSourceIndex(source))<0)return{line:null,column:null,lastColumn:null};var needle={source,originalLine:util.getArg(aArgs,"line"),originalColumn:util.getArg(aArgs,"column")},index=this._findMapping(needle,this._originalMappings,"originalLine","originalColumn",util.compareByOriginalPositions,util.getArg(aArgs,"bias",SourceMapConsumer.GREATEST_LOWER_BOUND));if(index>=0){var mapping=this._originalMappings[index];if(mapping.source===needle.source)return{line:util.getArg(mapping,"generatedLine",null),column:util.getArg(mapping,"generatedColumn",null),lastColumn:util.getArg(mapping,"lastGeneratedColumn",null)}}return{line:null,column:null,lastColumn:null}},exports.BasicSourceMapConsumer=BasicSourceMapConsumer,IndexedSourceMapConsumer.prototype=Object.create(SourceMapConsumer.prototype),IndexedSourceMapConsumer.prototype.constructor=SourceMapConsumer,IndexedSourceMapConsumer.prototype._version=3,Object.defineProperty(IndexedSourceMapConsumer.prototype,"sources",{get:function(){for(var sources=[],i=0;i<this._sections.length;i++)for(var j=0;j<this._sections[i].consumer.sources.length;j++)sources.push(this._sections[i].consumer.sources[j]);return sources}}),IndexedSourceMapConsumer.prototype.originalPositionFor=function(aArgs){var needle={generatedLine:util.getArg(aArgs,"line"),generatedColumn:util.getArg(aArgs,"column")},sectionIndex=binarySearch.search(needle,this._sections,(function(needle2,section2){return needle2.generatedLine-section2.generatedOffset.generatedLine||needle2.generatedColumn-section2.generatedOffset.generatedColumn})),section=this._sections[sectionIndex];return section?section.consumer.originalPositionFor({line:needle.generatedLine-(section.generatedOffset.generatedLine-1),column:needle.generatedColumn-(section.generatedOffset.generatedLine===needle.generatedLine?section.generatedOffset.generatedColumn-1:0),bias:aArgs.bias}):{source:null,line:null,column:null,name:null}},IndexedSourceMapConsumer.prototype.hasContentsOfAllSources=function(){return this._sections.every((function(s){return s.consumer.hasContentsOfAllSources()}))},IndexedSourceMapConsumer.prototype.sourceContentFor=function(aSource,nullOnMissing){for(var i=0;i<this._sections.length;i++){var content=this._sections[i].consumer.sourceContentFor(aSource,!0);if(content)return content}if(nullOnMissing)return null;throw new Error('"'+aSource+'" is not in the SourceMap.')},IndexedSourceMapConsumer.prototype.generatedPositionFor=function(aArgs){for(var i=0;i<this._sections.length;i++){var section=this._sections[i];if(-1!==section.consumer._findSourceIndex(util.getArg(aArgs,"source"))){var generatedPosition=section.consumer.generatedPositionFor(aArgs);if(generatedPosition)return{line:generatedPosition.line+(section.generatedOffset.generatedLine-1),column:generatedPosition.column+(section.generatedOffset.generatedLine===generatedPosition.line?section.generatedOffset.generatedColumn-1:0)}}}return{line:null,column:null}},IndexedSourceMapConsumer.prototype._parseMappings=function(aStr,aSourceRoot){this.__generatedMappings=[],this.__originalMappings=[];for(var i=0;i<this._sections.length;i++)for(var section=this._sections[i],sectionMappings=section.consumer._generatedMappings,j=0;j<sectionMappings.length;j++){var mapping=sectionMappings[j],source=section.consumer._sources.at(mapping.source);source=util.computeSourceURL(section.consumer.sourceRoot,source,this._sourceMapURL),this._sources.add(source),source=this._sources.indexOf(source);var name=null;mapping.name&&(name=section.consumer._names.at(mapping.name),this._names.add(name),name=this._names.indexOf(name));var adjustedMapping={source,generatedLine:mapping.generatedLine+(section.generatedOffset.generatedLine-1),generatedColumn:mapping.generatedColumn+(section.generatedOffset.generatedLine===mapping.generatedLine?section.generatedOffset.generatedColumn-1:0),originalLine:mapping.originalLine,originalColumn:mapping.originalColumn,name};this.__generatedMappings.push(adjustedMapping),"number"==typeof adjustedMapping.originalLine&&this.__originalMappings.push(adjustedMapping)}quickSort(this.__generatedMappings,util.compareByGeneratedPositionsDeflated),quickSort(this.__originalMappings,util.compareByOriginalPositions)},exports.IndexedSourceMapConsumer=IndexedSourceMapConsumer}}),require_source_node=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/source-node.js"(exports){var SourceMapGenerator=require_source_map_generator().SourceMapGenerator,util=require_util(),REGEX_NEWLINE=/(\r?\n)/,isSourceNode="$$$isSourceNode$$$";function SourceNode(aLine,aColumn,aSource,aChunks,aName){this.children=[],this.sourceContents={},this.line=aLine??null,this.column=aColumn??null,this.source=aSource??null,this.name=aName??null,this[isSourceNode]=!0,null!=aChunks&&this.add(aChunks)}SourceNode.fromStringWithSourceMap=function(aGeneratedCode,aSourceMapConsumer,aRelativePath){var node=new SourceNode,remainingLines=aGeneratedCode.split(REGEX_NEWLINE),remainingLinesIndex=0,shiftNextLine=function(){return getNextLine()+(getNextLine()||"");function getNextLine(){return remainingLinesIndex<remainingLines.length?remainingLines[remainingLinesIndex++]:void 0}},lastGeneratedLine=1,lastGeneratedColumn=0,lastMapping=null;return aSourceMapConsumer.eachMapping((function(mapping){if(null!==lastMapping){if(!(lastGeneratedLine<mapping.generatedLine)){var code=(nextLine=remainingLines[remainingLinesIndex]||"").substr(0,mapping.generatedColumn-lastGeneratedColumn);return remainingLines[remainingLinesIndex]=nextLine.substr(mapping.generatedColumn-lastGeneratedColumn),lastGeneratedColumn=mapping.generatedColumn,addMappingWithCode(lastMapping,code),void(lastMapping=mapping)}addMappingWithCode(lastMapping,shiftNextLine()),lastGeneratedLine++,lastGeneratedColumn=0}for(;lastGeneratedLine<mapping.generatedLine;)node.add(shiftNextLine()),lastGeneratedLine++;if(lastGeneratedColumn<mapping.generatedColumn){var nextLine=remainingLines[remainingLinesIndex]||"";node.add(nextLine.substr(0,mapping.generatedColumn)),remainingLines[remainingLinesIndex]=nextLine.substr(mapping.generatedColumn),lastGeneratedColumn=mapping.generatedColumn}lastMapping=mapping}),this),remainingLinesIndex<remainingLines.length&&(lastMapping&&addMappingWithCode(lastMapping,shiftNextLine()),node.add(remainingLines.splice(remainingLinesIndex).join(""))),aSourceMapConsumer.sources.forEach((function(sourceFile){var content=aSourceMapConsumer.sourceContentFor(sourceFile);null!=content&&(null!=aRelativePath&&(sourceFile=util.join(aRelativePath,sourceFile)),node.setSourceContent(sourceFile,content))})),node;function addMappingWithCode(mapping,code){if(null===mapping||void 0===mapping.source)node.add(code);else{var source=aRelativePath?util.join(aRelativePath,mapping.source):mapping.source;node.add(new SourceNode(mapping.originalLine,mapping.originalColumn,source,code,mapping.name))}}},SourceNode.prototype.add=function(aChunk){if(Array.isArray(aChunk))aChunk.forEach((function(chunk){this.add(chunk)}),this);else{if(!aChunk[isSourceNode]&&"string"!=typeof aChunk)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+aChunk);aChunk&&this.children.push(aChunk)}return this},SourceNode.prototype.prepend=function(aChunk){if(Array.isArray(aChunk))for(var i=aChunk.length-1;i>=0;i--)this.prepend(aChunk[i]);else{if(!aChunk[isSourceNode]&&"string"!=typeof aChunk)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+aChunk);this.children.unshift(aChunk)}return this},SourceNode.prototype.walk=function(aFn){for(var chunk,i=0,len=this.children.length;i<len;i++)(chunk=this.children[i])[isSourceNode]?chunk.walk(aFn):""!==chunk&&aFn(chunk,{source:this.source,line:this.line,column:this.column,name:this.name})},SourceNode.prototype.join=function(aSep){var newChildren,i,len=this.children.length;if(len>0){for(newChildren=[],i=0;i<len-1;i++)newChildren.push(this.children[i]),newChildren.push(aSep);newChildren.push(this.children[i]),this.children=newChildren}return this},SourceNode.prototype.replaceRight=function(aPattern,aReplacement){var lastChild=this.children[this.children.length-1];return lastChild[isSourceNode]?lastChild.replaceRight(aPattern,aReplacement):"string"==typeof lastChild?this.children[this.children.length-1]=lastChild.replace(aPattern,aReplacement):this.children.push("".replace(aPattern,aReplacement)),this},SourceNode.prototype.setSourceContent=function(aSourceFile,aSourceContent){this.sourceContents[util.toSetString(aSourceFile)]=aSourceContent},SourceNode.prototype.walkSourceContents=function(aFn){for(var i=0,len=this.children.length;i<len;i++)this.children[i][isSourceNode]&&this.children[i].walkSourceContents(aFn);var sources=Object.keys(this.sourceContents);for(i=0,len=sources.length;i<len;i++)aFn(util.fromSetString(sources[i]),this.sourceContents[sources[i]])},SourceNode.prototype.toString=function(){var str="";return this.walk((function(chunk){str+=chunk})),str},SourceNode.prototype.toStringWithSourceMap=function(aArgs){var generated={code:"",line:1,column:0},map=new SourceMapGenerator(aArgs),sourceMappingActive=!1,lastOriginalSource=null,lastOriginalLine=null,lastOriginalColumn=null,lastOriginalName=null;return this.walk((function(chunk,original){generated.code+=chunk,null!==original.source&&null!==original.line&&null!==original.column?((lastOriginalSource!==original.source||lastOriginalLine!==original.line||lastOriginalColumn!==original.column||lastOriginalName!==original.name)&&map.addMapping({source:original.source,original:{line:original.line,column:original.column},generated:{line:generated.line,column:generated.column},name:original.name}),lastOriginalSource=original.source,lastOriginalLine=original.line,lastOriginalColumn=original.column,lastOriginalName=original.name,sourceMappingActive=!0):sourceMappingActive&&(map.addMapping({generated:{line:generated.line,column:generated.column}}),lastOriginalSource=null,sourceMappingActive=!1);for(var idx=0,length=chunk.length;idx<length;idx++)10===chunk.charCodeAt(idx)?(generated.line++,generated.column=0,idx+1===length?(lastOriginalSource=null,sourceMappingActive=!1):sourceMappingActive&&map.addMapping({source:original.source,original:{line:original.line,column:original.column},generated:{line:generated.line,column:generated.column},name:original.name})):generated.column++})),this.walkSourceContents((function(sourceFile,sourceContent){map.setSourceContent(sourceFile,sourceContent)})),{code:generated.code,map}},exports.SourceNode=SourceNode}}),require_source_map=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/escodegen/node_modules/source-map/source-map.js"(exports){exports.SourceMapGenerator=require_source_map_generator().SourceMapGenerator,exports.SourceMapConsumer=require_source_map_consumer().SourceMapConsumer,exports.SourceNode=require_source_node().SourceNode}}),require_package=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/escodegen/package.json"(exports,module){module.exports={name:"escodegen",description:"ECMAScript code generator",homepage:"http://github.com/estools/escodegen",main:"escodegen.js",bin:{esgenerate:"./bin/esgenerate.js",escodegen:"./bin/escodegen.js"},files:["LICENSE.BSD","README.md","bin","escodegen.js","package.json"],version:"2.1.0",engines:{node:">=6.0"},maintainers:[{name:"Yusuke Suzuki",email:"utatane.tea@gmail.com",web:"http://github.com/Constellation"}],repository:{type:"git",url:"http://github.com/estools/escodegen.git"},dependencies:{estraverse:"^5.2.0",esutils:"^2.0.2",esprima:"^4.0.1"},optionalDependencies:{"source-map":"~0.6.1"},devDependencies:{acorn:"^8.0.4",bluebird:"^3.4.7","bower-registry-client":"^1.0.0",chai:"^4.2.0","chai-exclude":"^2.0.2","commonjs-everywhere":"^0.9.7",gulp:"^4.0.2","gulp-eslint":"^6.0.0","gulp-mocha":"^7.0.2",minimist:"^1.2.5",optionator:"^0.9.1",semver:"^7.3.4"},license:"BSD-2-Clause",scripts:{test:"gulp travis","unit-test":"gulp test",lint:"gulp lint",release:"node tools/release.js","build-min":"./node_modules/.bin/cjsify -ma path: tools/entry-point.js > escodegen.browser.min.js",build:"./node_modules/.bin/cjsify -a path: tools/entry-point.js > escodegen.browser.js"}}}}),require_escodegen=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/escodegen/escodegen.js"(exports){!function(){var Syntax,Precedence,BinaryPrecedence,SourceNode,estraverse,esutils,base2,indent,json,renumber,hexadecimal,quotes,escapeless,newline,space,parentheses,semicolons,safeConcatenation,directive,extra,parse5,sourceMap,sourceCode,preserveBlankLines,FORMAT_MINIFY,FORMAT_DEFAULTS;function isStatement(node){return CodeGenerator.Statement.hasOwnProperty(node.type)}estraverse=require_estraverse(),esutils=require_utils(),Syntax=estraverse.Syntax,BinaryPrecedence={"??":(Precedence={Sequence:0,Yield:1,Assignment:1,Conditional:2,ArrowFunction:2,Coalesce:3,LogicalOR:4,LogicalAND:5,BitwiseOR:6,BitwiseXOR:7,BitwiseAND:8,Equality:9,Relational:10,BitwiseSHIFT:11,Additive:12,Multiplicative:13,Exponentiation:14,Await:15,Unary:15,Postfix:16,OptionalChaining:17,Call:18,New:19,TaggedTemplate:20,Member:21,Primary:22}).Coalesce,"||":Precedence.LogicalOR,"&&":Precedence.LogicalAND,"|":Precedence.BitwiseOR,"^":Precedence.BitwiseXOR,"&":Precedence.BitwiseAND,"==":Precedence.Equality,"!=":Precedence.Equality,"===":Precedence.Equality,"!==":Precedence.Equality,is:Precedence.Equality,isnt:Precedence.Equality,"<":Precedence.Relational,">":Precedence.Relational,"<=":Precedence.Relational,">=":Precedence.Relational,in:Precedence.Relational,instanceof:Precedence.Relational,"<<":Precedence.BitwiseSHIFT,">>":Precedence.BitwiseSHIFT,">>>":Precedence.BitwiseSHIFT,"+":Precedence.Additive,"-":Precedence.Additive,"*":Precedence.Multiplicative,"%":Precedence.Multiplicative,"/":Precedence.Multiplicative,"**":Precedence.Exponentiation};function stringRepeat(str,num){var result="";for(num|=0;num>0;num>>>=1,str+=str)1&num&&(result+=str);return result}function endsWithLineTerminator(str){var len=str.length;return len&&esutils.code.isLineTerminator(str.charCodeAt(len-1))}function merge(target,override){var key;for(key in override)override.hasOwnProperty(key)&&(target[key]=override[key]);return target}function updateDeeply(target,override){var key,val;function isHashObject(target2){return"object"==typeof target2&&target2 instanceof Object&&!(target2 instanceof RegExp)}for(key in override)override.hasOwnProperty(key)&&(isHashObject(val=override[key])?isHashObject(target[key])?updateDeeply(target[key],val):target[key]=updateDeeply({},val):target[key]=val);return target}function escapeRegExpCharacter(ch,previousIsBackslash){return 8232==(-2&ch)?(previousIsBackslash?"u":"\\u")+(8232===ch?"2028":"2029"):10===ch||13===ch?(previousIsBackslash?"":"\\")+(10===ch?"n":"r"):String.fromCharCode(ch)}function escapeAllowedCharacter(code,next){var hex;return 8===code?"\\b":12===code?"\\f":9===code?"\\t":(hex=code.toString(16).toUpperCase(),json||code>255?"\\u"+"0000".slice(hex.length)+hex:0!==code||esutils.code.isDecimalDigit(next)?11===code?"\\x0B":"\\x"+"00".slice(hex.length)+hex:"\\0")}function escapeDisallowedCharacter(code){if(92===code)return"\\\\";if(10===code)return"\\n";if(13===code)return"\\r";if(8232===code)return"\\u2028";if(8233===code)return"\\u2029";throw new Error("Incorrectly classified character")}function flattenToString(arr){var i,iz,elem,result="";for(i=0,iz=arr.length;i<iz;++i)elem=arr[i],result+=Array.isArray(elem)?flattenToString(elem):elem;return result}function toSourceNodeWhenNeeded(generated,node){if(!sourceMap)return Array.isArray(generated)?flattenToString(generated):generated;if(null==node){if(generated instanceof SourceNode)return generated;node={}}return null==node.loc?new SourceNode(null,null,sourceMap,generated,node.name||null):new SourceNode(node.loc.start.line,node.loc.start.column,!0===sourceMap?node.loc.source||null:sourceMap,generated,node.name||null)}function noEmptySpace(){return space||" "}function join(left,right){var leftSource,rightSource,leftCharCode,rightCharCode;return 0===(leftSource=toSourceNodeWhenNeeded(left).toString()).length?[right]:0===(rightSource=toSourceNodeWhenNeeded(right).toString()).length?[left]:(leftCharCode=leftSource.charCodeAt(leftSource.length-1),rightCharCode=rightSource.charCodeAt(0),(43===leftCharCode||45===leftCharCode)&&leftCharCode===rightCharCode||esutils.code.isIdentifierPartES5(leftCharCode)&&esutils.code.isIdentifierPartES5(rightCharCode)||47===leftCharCode&&105===rightCharCode?[left,noEmptySpace(),right]:esutils.code.isWhiteSpace(leftCharCode)||esutils.code.isLineTerminator(leftCharCode)||esutils.code.isWhiteSpace(rightCharCode)||esutils.code.isLineTerminator(rightCharCode)?[left,right]:[left,space,right])}function addIndent(stmt){return[base2,stmt]}function withIndent(fn){var previousBase;previousBase=base2,fn(base2+=indent),base2=previousBase}function generateComment(comment,specialBase){if("Line"===comment.type){if(endsWithLineTerminator(comment.value))return"//"+comment.value;var result="//"+comment.value;return preserveBlankLines||(result+="\n"),result}return extra.format.indent.adjustMultilineComment&&/[\n\r]/.test(comment.value)?function adjustMultilineComment(value,specialBase){var array,i,len,line,j,spaces,previousBase,sn;for(array=value.split(/\r\n|[\r\n]/),spaces=Number.MAX_VALUE,i=1,len=array.length;i<len;++i){for(line=array[i],j=0;j<line.length&&esutils.code.isWhiteSpace(line.charCodeAt(j));)++j;spaces>j&&(spaces=j)}for(typeof specialBase<"u"?(previousBase=base2,"*"===array[1][spaces]&&(specialBase+=" "),base2=specialBase):(1&spaces&&--spaces,previousBase=base2),i=1,len=array.length;i<len;++i)sn=toSourceNodeWhenNeeded(addIndent(array[i].slice(spaces))),array[i]=sourceMap?sn.join(""):sn;return base2=previousBase,array.join("\n")}("/*"+comment.value+"*/",specialBase):"/*"+comment.value+"*/"}function addComments(stmt,result){var i,len,comment,save,tailingToStatement,specialBase,fragment,extRange,range,prevRange,prefix,count;if(stmt.leadingComments&&stmt.leadingComments.length>0){if(save=result,preserveBlankLines){for(result=[],extRange=(comment=stmt.leadingComments[0]).extendedRange,range=comment.range,(count=((prefix=sourceCode.substring(extRange[0],range[0])).match(/\n/g)||[]).length)>0?(result.push(stringRepeat("\n",count)),result.push(addIndent(generateComment(comment)))):(result.push(prefix),result.push(generateComment(comment))),prevRange=range,i=1,len=stmt.leadingComments.length;i<len;i++)range=(comment=stmt.leadingComments[i]).range,count=(sourceCode.substring(prevRange[1],range[0]).match(/\n/g)||[]).length,result.push(stringRepeat("\n",count)),result.push(addIndent(generateComment(comment))),prevRange=range;count=(sourceCode.substring(range[1],extRange[1]).match(/\n/g)||[]).length,result.push(stringRepeat("\n",count))}else for(comment=stmt.leadingComments[0],result=[],safeConcatenation&&stmt.type===Syntax.Program&&0===stmt.body.length&&result.push("\n"),result.push(generateComment(comment)),endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())||result.push("\n"),i=1,len=stmt.leadingComments.length;i<len;++i)endsWithLineTerminator(toSourceNodeWhenNeeded(fragment=[generateComment(comment=stmt.leadingComments[i])]).toString())||fragment.push("\n"),result.push(addIndent(fragment));result.push(addIndent(save))}if(stmt.trailingComments)if(preserveBlankLines)extRange=(comment=stmt.trailingComments[0]).extendedRange,range=comment.range,(count=((prefix=sourceCode.substring(extRange[0],range[0])).match(/\n/g)||[]).length)>0?(result.push(stringRepeat("\n",count)),result.push(addIndent(generateComment(comment)))):(result.push(prefix),result.push(generateComment(comment)));else for(tailingToStatement=!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString()),specialBase=stringRepeat(" ",function calculateSpaces(str){var i;for(i=str.length-1;i>=0&&!esutils.code.isLineTerminator(str.charCodeAt(i));--i);return str.length-1-i}(toSourceNodeWhenNeeded([base2,result,indent]).toString())),i=0,len=stmt.trailingComments.length;i<len;++i)comment=stmt.trailingComments[i],tailingToStatement?(result=0===i?[result,indent]:[result,specialBase]).push(generateComment(comment,specialBase)):result=[result,addIndent(generateComment(comment))],i!==len-1&&!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())&&(result=[result,"\n"]);return result}function generateBlankLines(start,end,result){var j,newlineCount=0;for(j=start;j<end;j++)"\n"===sourceCode[j]&&newlineCount++;for(j=1;j<newlineCount;j++)result.push(newline)}function parenthesize(text,current2,should){return current2<should?["(",text,")"]:text}function generateVerbatimString(string){var i,iz,result;for(i=1,iz=(result=string.split(/\r\n|\n/)).length;i<iz;i++)result[i]=newline+base2+result[i];return result}function CodeGenerator(){}function generateIdentifier(node){return toSourceNodeWhenNeeded(node.name,node)}function generateAsyncPrefix(node,spaceRequired){return node.async?"async"+(spaceRequired?noEmptySpace():space):""}function generateStarSuffix(node){return node.generator&&!extra.moz.starlessGenerator?"*"+space:""}function generateMethodPrefix(prop){var func=prop.value,prefix="";return func.async&&(prefix+=generateAsyncPrefix(func,!prop.computed)),func.generator&&(prefix+=generateStarSuffix(func)?"*":""),prefix}function generateInternal(node){var codegen;if(codegen=new CodeGenerator,isStatement(node))return codegen.generateStatement(node,1);if(function isExpression(node){return CodeGenerator.Expression.hasOwnProperty(node.type)}(node))return codegen.generateExpression(node,Precedence.Sequence,7);throw new Error("Unknown node type: "+node.type)}CodeGenerator.prototype.maybeBlock=function(stmt,flags){var result,noLeadingComment,that=this;return noLeadingComment=!extra.comment||!stmt.leadingComments,stmt.type===Syntax.BlockStatement&&noLeadingComment?[space,this.generateStatement(stmt,flags)]:stmt.type===Syntax.EmptyStatement&&noLeadingComment?";":(withIndent((function(){result=[newline,addIndent(that.generateStatement(stmt,flags))]})),result)},CodeGenerator.prototype.maybeBlockSuffix=function(stmt,result){var ends=endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString());return stmt.type!==Syntax.BlockStatement||extra.comment&&stmt.leadingComments||ends?ends?[result,base2]:[result,newline,base2]:[result,space]},CodeGenerator.prototype.generatePattern=function(node,precedence,flags){return node.type===Syntax.Identifier?generateIdentifier(node):this.generateExpression(node,precedence,flags)},CodeGenerator.prototype.generateFunctionParams=function(node){var i,iz,result,hasDefault;if(hasDefault=!1,node.type!==Syntax.ArrowFunctionExpression||node.rest||node.defaults&&0!==node.defaults.length||1!==node.params.length||node.params[0].type!==Syntax.Identifier){for((result=node.type===Syntax.ArrowFunctionExpression?[generateAsyncPrefix(node,!1)]:[]).push("("),node.defaults&&(hasDefault=!0),i=0,iz=node.params.length;i<iz;++i)hasDefault&&node.defaults[i]?result.push(this.generateAssignment(node.params[i],node.defaults[i],"=",Precedence.Assignment,7)):result.push(this.generatePattern(node.params[i],Precedence.Assignment,7)),i+1<iz&&result.push(","+space);node.rest&&(node.params.length&&result.push(","+space),result.push("..."),result.push(generateIdentifier(node.rest))),result.push(")")}else result=[generateAsyncPrefix(node,!0),generateIdentifier(node.params[0])];return result},CodeGenerator.prototype.generateFunctionBody=function(node){var result,expr;return result=this.generateFunctionParams(node),node.type===Syntax.ArrowFunctionExpression&&(result.push(space),result.push("=>")),node.expression?(result.push(space),"{"===(expr=this.generateExpression(node.body,Precedence.Assignment,7)).toString().charAt(0)&&(expr=["(",expr,")"]),result.push(expr)):result.push(this.maybeBlock(node.body,9)),result},CodeGenerator.prototype.generateIterationForStatement=function(operator,stmt,flags){var result=["for"+(stmt.await?noEmptySpace()+"await":"")+space+"("],that=this;return withIndent((function(){stmt.left.type===Syntax.VariableDeclaration?withIndent((function(){result.push(stmt.left.kind+noEmptySpace()),result.push(that.generateStatement(stmt.left.declarations[0],0))})):result.push(that.generateExpression(stmt.left,Precedence.Call,7)),result=join(result,operator),result=[join(result,that.generateExpression(stmt.right,Precedence.Assignment,7)),")"]})),result.push(this.maybeBlock(stmt.body,flags)),result},CodeGenerator.prototype.generatePropertyKey=function(expr,computed){var result=[];return computed&&result.push("["),result.push(this.generateExpression(expr,Precedence.Assignment,7)),computed&&result.push("]"),result},CodeGenerator.prototype.generateAssignment=function(left,right,operator,precedence,flags){return Precedence.Assignment<precedence&&(flags|=1),parenthesize([this.generateExpression(left,Precedence.Call,flags),space+operator+space,this.generateExpression(right,Precedence.Assignment,flags)],Precedence.Assignment,precedence)},CodeGenerator.prototype.semicolon=function(flags){return!semicolons&&32&flags?"":";"},CodeGenerator.Statement={BlockStatement:function(stmt,flags){var range,content,result=["{",newline],that=this;return withIndent((function(){var i,iz,fragment,bodyFlags;for(0===stmt.body.length&&preserveBlankLines&&((range=stmt.range)[1]-range[0]>2&&("\n"===(content=sourceCode.substring(range[0]+1,range[1]-1))[0]&&(result=["{"]),result.push(content))),bodyFlags=1,8&flags&&(bodyFlags|=16),i=0,iz=stmt.body.length;i<iz;++i)preserveBlankLines&&(0===i&&(stmt.body[0].leadingComments&&(range=stmt.body[0].leadingComments[0].extendedRange,"\n"===(content=sourceCode.substring(range[0],range[1]))[0]&&(result=["{"])),stmt.body[0].leadingComments||generateBlankLines(stmt.range[0],stmt.body[0].range[0],result)),i>0&&!stmt.body[i-1].trailingComments&&!stmt.body[i].leadingComments&&generateBlankLines(stmt.body[i-1].range[1],stmt.body[i].range[0],result)),i===iz-1&&(bodyFlags|=32),fragment=stmt.body[i].leadingComments&&preserveBlankLines?that.generateStatement(stmt.body[i],bodyFlags):addIndent(that.generateStatement(stmt.body[i],bodyFlags)),result.push(fragment),endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())||preserveBlankLines&&i<iz-1&&stmt.body[i+1].leadingComments||result.push(newline),preserveBlankLines&&i===iz-1&&(stmt.body[i].trailingComments||generateBlankLines(stmt.body[i].range[1],stmt.range[1],result))})),result.push(addIndent("}")),result},BreakStatement:function(stmt,flags){return stmt.label?"break "+stmt.label.name+this.semicolon(flags):"break"+this.semicolon(flags)},ContinueStatement:function(stmt,flags){return stmt.label?"continue "+stmt.label.name+this.semicolon(flags):"continue"+this.semicolon(flags)},ClassBody:function(stmt,flags){var result=["{",newline],that=this;return withIndent((function(indent2){var i,iz;for(i=0,iz=stmt.body.length;i<iz;++i)result.push(indent2),result.push(that.generateExpression(stmt.body[i],Precedence.Sequence,7)),i+1<iz&&result.push(newline)})),endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())||result.push(newline),result.push(base2),result.push("}"),result},ClassDeclaration:function(stmt,flags){var result,fragment;return result=["class"],stmt.id&&(result=join(result,this.generateExpression(stmt.id,Precedence.Sequence,7))),stmt.superClass&&(fragment=join("extends",this.generateExpression(stmt.superClass,Precedence.Unary,7)),result=join(result,fragment)),result.push(space),result.push(this.generateStatement(stmt.body,33)),result},DirectiveStatement:function(stmt,flags){return extra.raw&&stmt.raw?stmt.raw+this.semicolon(flags):function escapeDirective(str){var i,iz,code,quote;for(quote="double"===quotes?'"':"'",i=0,iz=str.length;i<iz;++i){if(39===(code=str.charCodeAt(i))){quote='"';break}if(34===code){quote="'";break}92===code&&++i}return quote+str+quote}(stmt.directive)+this.semicolon(flags)},DoWhileStatement:function(stmt,flags){var result=join("do",this.maybeBlock(stmt.body,1));return join(result=this.maybeBlockSuffix(stmt.body,result),["while"+space+"(",this.generateExpression(stmt.test,Precedence.Sequence,7),")"+this.semicolon(flags)])},CatchClause:function(stmt,flags){var result,that=this;return withIndent((function(){var guard;stmt.param?(result=["catch"+space+"(",that.generateExpression(stmt.param,Precedence.Sequence,7),")"],stmt.guard&&(guard=that.generateExpression(stmt.guard,Precedence.Sequence,7),result.splice(2,0," if ",guard))):result=["catch"]})),result.push(this.maybeBlock(stmt.body,1)),result},DebuggerStatement:function(stmt,flags){return"debugger"+this.semicolon(flags)},EmptyStatement:function(stmt,flags){return";"},ExportDefaultDeclaration:function(stmt,flags){var bodyFlags,result=["export"];return bodyFlags=32&flags?33:1,result=join(result,"default"),result=isStatement(stmt.declaration)?join(result,this.generateStatement(stmt.declaration,bodyFlags)):join(result,this.generateExpression(stmt.declaration,Precedence.Assignment,7)+this.semicolon(flags))},ExportNamedDeclaration:function(stmt,flags){var bodyFlags,result=["export"],that=this;return bodyFlags=32&flags?33:1,stmt.declaration?join(result,this.generateStatement(stmt.declaration,bodyFlags)):(stmt.specifiers&&(0===stmt.specifiers.length?result=join(result,"{"+space+"}"):stmt.specifiers[0].type===Syntax.ExportBatchSpecifier?result=join(result,this.generateExpression(stmt.specifiers[0],Precedence.Sequence,7)):(result=join(result,"{"),withIndent((function(indent2){var i,iz;for(result.push(newline),i=0,iz=stmt.specifiers.length;i<iz;++i)result.push(indent2),result.push(that.generateExpression(stmt.specifiers[i],Precedence.Sequence,7)),i+1<iz&&result.push(","+newline)})),endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())||result.push(newline),result.push(base2+"}")),stmt.source?result=join(result,["from"+space,this.generateExpression(stmt.source,Precedence.Sequence,7),this.semicolon(flags)]):result.push(this.semicolon(flags))),result)},ExportAllDeclaration:function(stmt,flags){return["export"+space,"*"+space,"from"+space,this.generateExpression(stmt.source,Precedence.Sequence,7),this.semicolon(flags)]},ExpressionStatement:function(stmt,flags){var result,fragment;return 123===(fragment=toSourceNodeWhenNeeded(result=[this.generateExpression(stmt.expression,Precedence.Sequence,7)]).toString()).charCodeAt(0)||function isClassPrefixed(fragment2){var code;return"class"===fragment2.slice(0,5)&&(123===(code=fragment2.charCodeAt(5))||esutils.code.isWhiteSpace(code)||esutils.code.isLineTerminator(code))}(fragment)||function isFunctionPrefixed(fragment2){var code;return"function"===fragment2.slice(0,8)&&(40===(code=fragment2.charCodeAt(8))||esutils.code.isWhiteSpace(code)||42===code||esutils.code.isLineTerminator(code))}(fragment)||function isAsyncPrefixed(fragment2){var code,i,iz;if("async"!==fragment2.slice(0,5)||!esutils.code.isWhiteSpace(fragment2.charCodeAt(5)))return!1;for(i=6,iz=fragment2.length;i<iz&&esutils.code.isWhiteSpace(fragment2.charCodeAt(i));++i);return i!==iz&&"function"===fragment2.slice(i,i+8)&&(40===(code=fragment2.charCodeAt(i+8))||esutils.code.isWhiteSpace(code)||42===code||esutils.code.isLineTerminator(code))}(fragment)||directive&&16&flags&&stmt.expression.type===Syntax.Literal&&"string"==typeof stmt.expression.value?result=["(",result,")"+this.semicolon(flags)]:result.push(this.semicolon(flags)),result},ImportDeclaration:function(stmt,flags){var result,cursor,that=this;return 0===stmt.specifiers.length?["import",space,this.generateExpression(stmt.source,Precedence.Sequence,7),this.semicolon(flags)]:(result=["import"],cursor=0,stmt.specifiers[cursor].type===Syntax.ImportDefaultSpecifier&&(result=join(result,[this.generateExpression(stmt.specifiers[cursor],Precedence.Sequence,7)]),++cursor),stmt.specifiers[cursor]&&(0!==cursor&&result.push(","),stmt.specifiers[cursor].type===Syntax.ImportNamespaceSpecifier?result=join(result,[space,this.generateExpression(stmt.specifiers[cursor],Precedence.Sequence,7)]):(result.push(space+"{"),stmt.specifiers.length-cursor==1?(result.push(space),result.push(this.generateExpression(stmt.specifiers[cursor],Precedence.Sequence,7)),result.push(space+"}"+space)):(withIndent((function(indent2){var i,iz;for(result.push(newline),i=cursor,iz=stmt.specifiers.length;i<iz;++i)result.push(indent2),result.push(that.generateExpression(stmt.specifiers[i],Precedence.Sequence,7)),i+1<iz&&result.push(","+newline)})),endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())||result.push(newline),result.push(base2+"}"+space)))),result=join(result,["from"+space,this.generateExpression(stmt.source,Precedence.Sequence,7),this.semicolon(flags)]))},VariableDeclarator:function(stmt,flags){var itemFlags=1&flags?7:6;return stmt.init?[this.generateExpression(stmt.id,Precedence.Assignment,itemFlags),space,"=",space,this.generateExpression(stmt.init,Precedence.Assignment,itemFlags)]:this.generatePattern(stmt.id,Precedence.Assignment,itemFlags)},VariableDeclaration:function(stmt,flags){var result,i,iz,node,bodyFlags,that=this;function block(){for(node=stmt.declarations[0],extra.comment&&node.leadingComments?(result.push("\n"),result.push(addIndent(that.generateStatement(node,bodyFlags)))):(result.push(noEmptySpace()),result.push(that.generateStatement(node,bodyFlags))),i=1,iz=stmt.declarations.length;i<iz;++i)node=stmt.declarations[i],extra.comment&&node.leadingComments?(result.push(","+newline),result.push(addIndent(that.generateStatement(node,bodyFlags)))):(result.push(","+space),result.push(that.generateStatement(node,bodyFlags)))}return result=[stmt.kind],bodyFlags=1&flags?1:0,stmt.declarations.length>1?withIndent(block):block(),result.push(this.semicolon(flags)),result},ThrowStatement:function(stmt,flags){return[join("throw",this.generateExpression(stmt.argument,Precedence.Sequence,7)),this.semicolon(flags)]},TryStatement:function(stmt,flags){var result,i,iz,guardedHandlers;if(result=["try",this.maybeBlock(stmt.block,1)],result=this.maybeBlockSuffix(stmt.block,result),stmt.handlers)for(i=0,iz=stmt.handlers.length;i<iz;++i)result=join(result,this.generateStatement(stmt.handlers[i],1)),(stmt.finalizer||i+1!==iz)&&(result=this.maybeBlockSuffix(stmt.handlers[i].body,result));else{for(i=0,iz=(guardedHandlers=stmt.guardedHandlers||[]).length;i<iz;++i)result=join(result,this.generateStatement(guardedHandlers[i],1)),(stmt.finalizer||i+1!==iz)&&(result=this.maybeBlockSuffix(guardedHandlers[i].body,result));if(stmt.handler)if(Array.isArray(stmt.handler))for(i=0,iz=stmt.handler.length;i<iz;++i)result=join(result,this.generateStatement(stmt.handler[i],1)),(stmt.finalizer||i+1!==iz)&&(result=this.maybeBlockSuffix(stmt.handler[i].body,result));else result=join(result,this.generateStatement(stmt.handler,1)),stmt.finalizer&&(result=this.maybeBlockSuffix(stmt.handler.body,result))}return stmt.finalizer&&(result=join(result,["finally",this.maybeBlock(stmt.finalizer,1)])),result},SwitchStatement:function(stmt,flags){var result,fragment,i,iz,bodyFlags,that=this;if(withIndent((function(){result=["switch"+space+"(",that.generateExpression(stmt.discriminant,Precedence.Sequence,7),")"+space+"{"+newline]})),stmt.cases)for(bodyFlags=1,i=0,iz=stmt.cases.length;i<iz;++i)i===iz-1&&(bodyFlags|=32),fragment=addIndent(this.generateStatement(stmt.cases[i],bodyFlags)),result.push(fragment),endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())||result.push(newline);return result.push(addIndent("}")),result},SwitchCase:function(stmt,flags){var result,fragment,i,iz,bodyFlags,that=this;return withIndent((function(){for(result=stmt.test?[join("case",that.generateExpression(stmt.test,Precedence.Sequence,7)),":"]:["default:"],i=0,(iz=stmt.consequent.length)&&stmt.consequent[0].type===Syntax.BlockStatement&&(fragment=that.maybeBlock(stmt.consequent[0],1),result.push(fragment),i=1),i!==iz&&!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())&&result.push(newline),bodyFlags=1;i<iz;++i)i===iz-1&&32&flags&&(bodyFlags|=32),fragment=addIndent(that.generateStatement(stmt.consequent[i],bodyFlags)),result.push(fragment),i+1!==iz&&!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())&&result.push(newline)})),result},IfStatement:function(stmt,flags){var result,bodyFlags,that=this;return withIndent((function(){result=["if"+space+"(",that.generateExpression(stmt.test,Precedence.Sequence,7),")"]})),bodyFlags=1,32&flags&&(bodyFlags|=32),stmt.alternate?(result.push(this.maybeBlock(stmt.consequent,1)),result=this.maybeBlockSuffix(stmt.consequent,result),result=stmt.alternate.type===Syntax.IfStatement?join(result,["else ",this.generateStatement(stmt.alternate,bodyFlags)]):join(result,join("else",this.maybeBlock(stmt.alternate,bodyFlags)))):result.push(this.maybeBlock(stmt.consequent,bodyFlags)),result},ForStatement:function(stmt,flags){var result,that=this;return withIndent((function(){result=["for"+space+"("],stmt.init?stmt.init.type===Syntax.VariableDeclaration?result.push(that.generateStatement(stmt.init,0)):(result.push(that.generateExpression(stmt.init,Precedence.Sequence,6)),result.push(";")):result.push(";"),stmt.test&&(result.push(space),result.push(that.generateExpression(stmt.test,Precedence.Sequence,7))),result.push(";"),stmt.update&&(result.push(space),result.push(that.generateExpression(stmt.update,Precedence.Sequence,7))),result.push(")")})),result.push(this.maybeBlock(stmt.body,32&flags?33:1)),result},ForInStatement:function(stmt,flags){return this.generateIterationForStatement("in",stmt,32&flags?33:1)},ForOfStatement:function(stmt,flags){return this.generateIterationForStatement("of",stmt,32&flags?33:1)},LabeledStatement:function(stmt,flags){return[stmt.label.name+":",this.maybeBlock(stmt.body,32&flags?33:1)]},Program:function(stmt,flags){var result,fragment,i,iz,bodyFlags;for(iz=stmt.body.length,result=[safeConcatenation&&iz>0?"\n":""],bodyFlags=17,i=0;i<iz;++i)!safeConcatenation&&i===iz-1&&(bodyFlags|=32),preserveBlankLines&&(0===i&&(stmt.body[0].leadingComments||generateBlankLines(stmt.range[0],stmt.body[i].range[0],result)),i>0&&!stmt.body[i-1].trailingComments&&!stmt.body[i].leadingComments&&generateBlankLines(stmt.body[i-1].range[1],stmt.body[i].range[0],result)),fragment=addIndent(this.generateStatement(stmt.body[i],bodyFlags)),result.push(fragment),i+1<iz&&!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())&&(preserveBlankLines&&stmt.body[i+1].leadingComments||result.push(newline)),preserveBlankLines&&i===iz-1&&(stmt.body[i].trailingComments||generateBlankLines(stmt.body[i].range[1],stmt.range[1],result));return result},FunctionDeclaration:function(stmt,flags){return[generateAsyncPrefix(stmt,!0),"function",generateStarSuffix(stmt)||noEmptySpace(),stmt.id?generateIdentifier(stmt.id):"",this.generateFunctionBody(stmt)]},ReturnStatement:function(stmt,flags){return stmt.argument?[join("return",this.generateExpression(stmt.argument,Precedence.Sequence,7)),this.semicolon(flags)]:["return"+this.semicolon(flags)]},WhileStatement:function(stmt,flags){var result,that=this;return withIndent((function(){result=["while"+space+"(",that.generateExpression(stmt.test,Precedence.Sequence,7),")"]})),result.push(this.maybeBlock(stmt.body,32&flags?33:1)),result},WithStatement:function(stmt,flags){var result,that=this;return withIndent((function(){result=["with"+space+"(",that.generateExpression(stmt.object,Precedence.Sequence,7),")"]})),result.push(this.maybeBlock(stmt.body,32&flags?33:1)),result}},merge(CodeGenerator.prototype,CodeGenerator.Statement),CodeGenerator.Expression={SequenceExpression:function(expr,precedence,flags){var result,i,iz;for(Precedence.Sequence<precedence&&(flags|=1),result=[],i=0,iz=expr.expressions.length;i<iz;++i)result.push(this.generateExpression(expr.expressions[i],Precedence.Assignment,flags)),i+1<iz&&result.push(","+space);return parenthesize(result,Precedence.Sequence,precedence)},AssignmentExpression:function(expr,precedence,flags){return this.generateAssignment(expr.left,expr.right,expr.operator,precedence,flags)},ArrowFunctionExpression:function(expr,precedence,flags){return parenthesize(this.generateFunctionBody(expr),Precedence.ArrowFunction,precedence)},ConditionalExpression:function(expr,precedence,flags){return Precedence.Conditional<precedence&&(flags|=1),parenthesize([this.generateExpression(expr.test,Precedence.Coalesce,flags),space+"?"+space,this.generateExpression(expr.consequent,Precedence.Assignment,flags),space+":"+space,this.generateExpression(expr.alternate,Precedence.Assignment,flags)],Precedence.Conditional,precedence)},LogicalExpression:function(expr,precedence,flags){return"??"===expr.operator&&(flags|=64),this.BinaryExpression(expr,precedence,flags)},BinaryExpression:function(expr,precedence,flags){var result,leftPrecedence,rightPrecedence,currentPrecedence,fragment,leftSource;return currentPrecedence=BinaryPrecedence[expr.operator],leftPrecedence="**"===expr.operator?Precedence.Postfix:currentPrecedence,rightPrecedence="**"===expr.operator?currentPrecedence:currentPrecedence+1,currentPrecedence<precedence&&(flags|=1),result=47===(leftSource=(fragment=this.generateExpression(expr.left,leftPrecedence,flags)).toString()).charCodeAt(leftSource.length-1)&&esutils.code.isIdentifierPartES5(expr.operator.charCodeAt(0))?[fragment,noEmptySpace(),expr.operator]:join(fragment,expr.operator),fragment=this.generateExpression(expr.right,rightPrecedence,flags),"/"===expr.operator&&"/"===fragment.toString().charAt(0)||"<"===expr.operator.slice(-1)&&"!--"===fragment.toString().slice(0,3)?(result.push(noEmptySpace()),result.push(fragment)):result=join(result,fragment),"in"!==expr.operator||1&flags?("||"===expr.operator||"&&"===expr.operator)&&64&flags?["(",result,")"]:parenthesize(result,currentPrecedence,precedence):["(",result,")"]},CallExpression:function(expr,precedence,flags){var result,i,iz;for(result=[this.generateExpression(expr.callee,Precedence.Call,3)],expr.optional&&result.push("?."),result.push("("),i=0,iz=expr.arguments.length;i<iz;++i)result.push(this.generateExpression(expr.arguments[i],Precedence.Assignment,7)),i+1<iz&&result.push(","+space);return result.push(")"),2&flags?parenthesize(result,Precedence.Call,precedence):["(",result,")"]},ChainExpression:function(expr,precedence,flags){return Precedence.OptionalChaining<precedence&&(flags|=2),parenthesize(this.generateExpression(expr.expression,Precedence.OptionalChaining,flags),Precedence.OptionalChaining,precedence)},NewExpression:function(expr,precedence,flags){var result,length,i,iz,itemFlags;if(length=expr.arguments.length,itemFlags=4&flags&&!parentheses&&0===length?5:1,result=join("new",this.generateExpression(expr.callee,Precedence.New,itemFlags)),!(4&flags)||parentheses||length>0){for(result.push("("),i=0,iz=length;i<iz;++i)result.push(this.generateExpression(expr.arguments[i],Precedence.Assignment,7)),i+1<iz&&result.push(","+space);result.push(")")}return parenthesize(result,Precedence.New,precedence)},MemberExpression:function(expr,precedence,flags){var result,fragment;return result=[this.generateExpression(expr.object,Precedence.Call,2&flags?3:1)],expr.computed?(expr.optional&&result.push("?."),result.push("["),result.push(this.generateExpression(expr.property,Precedence.Sequence,2&flags?7:5)),result.push("]")):(!expr.optional&&expr.object.type===Syntax.Literal&&"number"==typeof expr.object.value&&((fragment=toSourceNodeWhenNeeded(result).toString()).indexOf(".")<0&&!/[eExX]/.test(fragment)&&esutils.code.isDecimalDigit(fragment.charCodeAt(fragment.length-1))&&!(fragment.length>=2&&48===fragment.charCodeAt(0))&&result.push(" ")),result.push(expr.optional?"?.":"."),result.push(generateIdentifier(expr.property))),parenthesize(result,Precedence.Member,precedence)},MetaProperty:function(expr,precedence,flags){var result;return(result=[]).push("string"==typeof expr.meta?expr.meta:generateIdentifier(expr.meta)),result.push("."),result.push("string"==typeof expr.property?expr.property:generateIdentifier(expr.property)),parenthesize(result,Precedence.Member,precedence)},UnaryExpression:function(expr,precedence,flags){var result,fragment,rightCharCode,leftSource,leftCharCode;return fragment=this.generateExpression(expr.argument,Precedence.Unary,7),""===space?result=join(expr.operator,fragment):(result=[expr.operator],expr.operator.length>2?result=join(result,fragment):(leftCharCode=(leftSource=toSourceNodeWhenNeeded(result).toString()).charCodeAt(leftSource.length-1),rightCharCode=fragment.toString().charCodeAt(0),((43===leftCharCode||45===leftCharCode)&&leftCharCode===rightCharCode||esutils.code.isIdentifierPartES5(leftCharCode)&&esutils.code.isIdentifierPartES5(rightCharCode))&&result.push(noEmptySpace()),result.push(fragment))),parenthesize(result,Precedence.Unary,precedence)},YieldExpression:function(expr,precedence,flags){var result;return result=expr.delegate?"yield*":"yield",expr.argument&&(result=join(result,this.generateExpression(expr.argument,Precedence.Yield,7))),parenthesize(result,Precedence.Yield,precedence)},AwaitExpression:function(expr,precedence,flags){return parenthesize(join(expr.all?"await*":"await",this.generateExpression(expr.argument,Precedence.Await,7)),Precedence.Await,precedence)},UpdateExpression:function(expr,precedence,flags){return expr.prefix?parenthesize([expr.operator,this.generateExpression(expr.argument,Precedence.Unary,7)],Precedence.Unary,precedence):parenthesize([this.generateExpression(expr.argument,Precedence.Postfix,7),expr.operator],Precedence.Postfix,precedence)},FunctionExpression:function(expr,precedence,flags){var result=[generateAsyncPrefix(expr,!0),"function"];return expr.id?(result.push(generateStarSuffix(expr)||noEmptySpace()),result.push(generateIdentifier(expr.id))):result.push(generateStarSuffix(expr)||space),result.push(this.generateFunctionBody(expr)),result},ArrayPattern:function(expr,precedence,flags){return this.ArrayExpression(expr,precedence,flags,!0)},ArrayExpression:function(expr,precedence,flags,isPattern){var result,multiline,that=this;return expr.elements.length?(multiline=!isPattern&&expr.elements.length>1,result=["[",multiline?newline:""],withIndent((function(indent2){var i,iz;for(i=0,iz=expr.elements.length;i<iz;++i)expr.elements[i]?(result.push(multiline?indent2:""),result.push(that.generateExpression(expr.elements[i],Precedence.Assignment,7))):(multiline&&result.push(indent2),i+1===iz&&result.push(",")),i+1<iz&&result.push(","+(multiline?newline:space))})),multiline&&!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())&&result.push(newline),result.push(multiline?base2:""),result.push("]"),result):"[]"},RestElement:function(expr,precedence,flags){return"..."+this.generatePattern(expr.argument)},ClassExpression:function(expr,precedence,flags){var result,fragment;return result=["class"],expr.id&&(result=join(result,this.generateExpression(expr.id,Precedence.Sequence,7))),expr.superClass&&(fragment=join("extends",this.generateExpression(expr.superClass,Precedence.Unary,7)),result=join(result,fragment)),result.push(space),result.push(this.generateStatement(expr.body,33)),result},MethodDefinition:function(expr,precedence,flags){var result,fragment;return result=expr.static?["static"+space]:[],fragment="get"===expr.kind||"set"===expr.kind?[join(expr.kind,this.generatePropertyKey(expr.key,expr.computed)),this.generateFunctionBody(expr.value)]:[generateMethodPrefix(expr),this.generatePropertyKey(expr.key,expr.computed),this.generateFunctionBody(expr.value)],join(result,fragment)},Property:function(expr,precedence,flags){return"get"===expr.kind||"set"===expr.kind?[expr.kind,noEmptySpace(),this.generatePropertyKey(expr.key,expr.computed),this.generateFunctionBody(expr.value)]:expr.shorthand?"AssignmentPattern"===expr.value.type?this.AssignmentPattern(expr.value,Precedence.Sequence,7):this.generatePropertyKey(expr.key,expr.computed):expr.method?[generateMethodPrefix(expr),this.generatePropertyKey(expr.key,expr.computed),this.generateFunctionBody(expr.value)]:[this.generatePropertyKey(expr.key,expr.computed),":"+space,this.generateExpression(expr.value,Precedence.Assignment,7)]},ObjectExpression:function(expr,precedence,flags){var multiline,result,fragment,that=this;return expr.properties.length?(multiline=expr.properties.length>1,withIndent((function(){fragment=that.generateExpression(expr.properties[0],Precedence.Sequence,7)})),multiline||function hasLineTerminator(str){return/[\r\n]/g.test(str)}(toSourceNodeWhenNeeded(fragment).toString())?(withIndent((function(indent2){var i,iz;if(result=["{",newline,indent2,fragment],multiline)for(result.push(","+newline),i=1,iz=expr.properties.length;i<iz;++i)result.push(indent2),result.push(that.generateExpression(expr.properties[i],Precedence.Sequence,7)),i+1<iz&&result.push(","+newline)})),endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())||result.push(newline),result.push(base2),result.push("}"),result):["{",space,fragment,space,"}"]):"{}"},AssignmentPattern:function(expr,precedence,flags){return this.generateAssignment(expr.left,expr.right,"=",precedence,flags)},ObjectPattern:function(expr,precedence,flags){var result,i,iz,multiline,property,that=this;if(!expr.properties.length)return"{}";if(multiline=!1,1===expr.properties.length)(property=expr.properties[0]).type===Syntax.Property&&property.value.type!==Syntax.Identifier&&(multiline=!0);else for(i=0,iz=expr.properties.length;i<iz;++i)if((property=expr.properties[i]).type===Syntax.Property&&!property.shorthand){multiline=!0;break}return result=["{",multiline?newline:""],withIndent((function(indent2){var i2,iz2;for(i2=0,iz2=expr.properties.length;i2<iz2;++i2)result.push(multiline?indent2:""),result.push(that.generateExpression(expr.properties[i2],Precedence.Sequence,7)),i2+1<iz2&&result.push(","+(multiline?newline:space))})),multiline&&!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())&&result.push(newline),result.push(multiline?base2:""),result.push("}"),result},ThisExpression:function(expr,precedence,flags){return"this"},Super:function(expr,precedence,flags){return"super"},Identifier:function(expr,precedence,flags){return generateIdentifier(expr)},ImportDefaultSpecifier:function(expr,precedence,flags){return generateIdentifier(expr.id||expr.local)},ImportNamespaceSpecifier:function(expr,precedence,flags){var result=["*"],id=expr.id||expr.local;return id&&result.push(space+"as"+noEmptySpace()+generateIdentifier(id)),result},ImportSpecifier:function(expr,precedence,flags){var imported=expr.imported,result=[imported.name],local=expr.local;return local&&local.name!==imported.name&&result.push(noEmptySpace()+"as"+noEmptySpace()+generateIdentifier(local)),result},ExportSpecifier:function(expr,precedence,flags){var local=expr.local,result=[local.name],exported=expr.exported;return exported&&exported.name!==local.name&&result.push(noEmptySpace()+"as"+noEmptySpace()+generateIdentifier(exported)),result},Literal:function(expr,precedence,flags){var raw;if(expr.hasOwnProperty("raw")&&parse5&&extra.raw)try{if((raw=parse5(expr.raw).body[0].expression).type===Syntax.Literal&&raw.value===expr.value)return expr.raw}catch{}return expr.regex?"/"+expr.regex.pattern+"/"+expr.regex.flags:"bigint"==typeof expr.value?expr.value.toString()+"n":expr.bigint?expr.bigint+"n":null===expr.value?"null":"string"==typeof expr.value?function escapeString(str){var i,len,code,single,quote,result="",singleQuotes=0,doubleQuotes=0;for(i=0,len=str.length;i<len;++i){if(39===(code=str.charCodeAt(i)))++singleQuotes;else if(34===code)++doubleQuotes;else if(47===code&&json)result+="\\";else{if(esutils.code.isLineTerminator(code)||92===code){result+=escapeDisallowedCharacter(code);continue}if(!esutils.code.isIdentifierPartES5(code)&&(json&&code<32||!json&&!escapeless&&(code<32||code>126))){result+=escapeAllowedCharacter(code,str.charCodeAt(i+1));continue}}result+=String.fromCharCode(code)}if(quote=(single=!("double"===quotes||"auto"===quotes&&doubleQuotes<singleQuotes))?"'":'"',!(single?singleQuotes:doubleQuotes))return quote+result+quote;for(str=result,result=quote,i=0,len=str.length;i<len;++i)(39===(code=str.charCodeAt(i))&&single||34===code&&!single)&&(result+="\\"),result+=String.fromCharCode(code);return result+quote}(expr.value):"number"==typeof expr.value?function generateNumber(value){var result,point,temp,exponent,pos;if(value!=value)throw new Error("Numeric literal whose value is NaN");if(value<0||0===value&&1/value<0)throw new Error("Numeric literal whose value is negative");if(value===1/0)return json?"null":renumber?"1e400":"1e+400";if(result=""+value,!renumber||result.length<3)return result;for(point=result.indexOf("."),!json&&48===result.charCodeAt(0)&&1===point&&(point=0,result=result.slice(1)),temp=result,result=result.replace("e+","e"),exponent=0,(pos=temp.indexOf("e"))>0&&(exponent=+temp.slice(pos+1),temp=temp.slice(0,pos)),point>=0&&(exponent-=temp.length-point-1,temp=+(temp.slice(0,point)+temp.slice(point+1))+""),pos=0;48===temp.charCodeAt(temp.length+pos-1);)--pos;return 0!==pos&&(exponent-=pos,temp=temp.slice(0,pos)),0!==exponent&&(temp+="e"+exponent),(temp.length<result.length||hexadecimal&&value>1e12&&Math.floor(value)===value&&(temp="0x"+value.toString(16)).length<result.length)&&+temp===value&&(result=temp),result}(expr.value):"boolean"==typeof expr.value?expr.value?"true":"false":function generateRegExp(reg){var match,result,flags,i,iz,ch,characterInBrack,previousIsBackslash;if(result=reg.toString(),reg.source){if(!(match=result.match(/\/([^/]*)$/)))return result;for(flags=match[1],result="",characterInBrack=!1,previousIsBackslash=!1,i=0,iz=reg.source.length;i<iz;++i)ch=reg.source.charCodeAt(i),previousIsBackslash?(result+=escapeRegExpCharacter(ch,previousIsBackslash),previousIsBackslash=!1):(characterInBrack?93===ch&&(characterInBrack=!1):47===ch?result+="\\":91===ch&&(characterInBrack=!0),result+=escapeRegExpCharacter(ch,previousIsBackslash),previousIsBackslash=92===ch);return"/"+result+"/"+flags}return result}(expr.value)},GeneratorExpression:function(expr,precedence,flags){return this.ComprehensionExpression(expr,precedence,flags)},ComprehensionExpression:function(expr,precedence,flags){var result,i,iz,fragment,that=this;return result=expr.type===Syntax.GeneratorExpression?["("]:["["],extra.moz.comprehensionExpressionStartsWithAssignment&&(fragment=this.generateExpression(expr.body,Precedence.Assignment,7),result.push(fragment)),expr.blocks&&withIndent((function(){for(i=0,iz=expr.blocks.length;i<iz;++i)fragment=that.generateExpression(expr.blocks[i],Precedence.Sequence,7),i>0||extra.moz.comprehensionExpressionStartsWithAssignment?result=join(result,fragment):result.push(fragment)})),expr.filter&&(result=join(result,"if"+space),fragment=this.generateExpression(expr.filter,Precedence.Sequence,7),result=join(result,["(",fragment,")"])),extra.moz.comprehensionExpressionStartsWithAssignment||(fragment=this.generateExpression(expr.body,Precedence.Assignment,7),result=join(result,fragment)),result.push(expr.type===Syntax.GeneratorExpression?")":"]"),result},ComprehensionBlock:function(expr,precedence,flags){var fragment;return fragment=join(fragment=expr.left.type===Syntax.VariableDeclaration?[expr.left.kind,noEmptySpace(),this.generateStatement(expr.left.declarations[0],0)]:this.generateExpression(expr.left,Precedence.Call,7),expr.of?"of":"in"),fragment=join(fragment,this.generateExpression(expr.right,Precedence.Sequence,7)),["for"+space+"(",fragment,")"]},SpreadElement:function(expr,precedence,flags){return["...",this.generateExpression(expr.argument,Precedence.Assignment,7)]},TaggedTemplateExpression:function(expr,precedence,flags){var itemFlags=3;return 2&flags||(itemFlags=1),parenthesize([this.generateExpression(expr.tag,Precedence.Call,itemFlags),this.generateExpression(expr.quasi,Precedence.Primary,4)],Precedence.TaggedTemplate,precedence)},TemplateElement:function(expr,precedence,flags){return expr.value.raw},TemplateLiteral:function(expr,precedence,flags){var result,i,iz;for(result=["`"],i=0,iz=expr.quasis.length;i<iz;++i)result.push(this.generateExpression(expr.quasis[i],Precedence.Primary,7)),i+1<iz&&(result.push("${"+space),result.push(this.generateExpression(expr.expressions[i],Precedence.Sequence,7)),result.push(space+"}"));return result.push("`"),result},ModuleSpecifier:function(expr,precedence,flags){return this.Literal(expr,precedence,flags)},ImportExpression:function(expr,precedence,flag){return parenthesize(["import(",this.generateExpression(expr.source,Precedence.Assignment,7),")"],Precedence.Call,precedence)}},merge(CodeGenerator.prototype,CodeGenerator.Expression),CodeGenerator.prototype.generateExpression=function(expr,precedence,flags){var result,type;return type=expr.type||Syntax.Property,extra.verbatim&&expr.hasOwnProperty(extra.verbatim)?function generateVerbatim(expr,precedence){var verbatim,result;return result="string"==typeof(verbatim=expr[extra.verbatim])?parenthesize(generateVerbatimString(verbatim),Precedence.Sequence,precedence):parenthesize(result=generateVerbatimString(verbatim.content),null!=verbatim.precedence?verbatim.precedence:Precedence.Sequence,precedence),toSourceNodeWhenNeeded(result,expr)}(expr,precedence):(result=this[type](expr,precedence,flags),extra.comment&&(result=addComments(expr,result)),toSourceNodeWhenNeeded(result,expr))},CodeGenerator.prototype.generateStatement=function(stmt,flags){var result,fragment;return result=this[stmt.type](stmt,flags),extra.comment&&(result=addComments(stmt,result)),fragment=toSourceNodeWhenNeeded(result).toString(),stmt.type===Syntax.Program&&!safeConcatenation&&""===newline&&"\n"===fragment.charAt(fragment.length-1)&&(result=sourceMap?toSourceNodeWhenNeeded(result).replaceRight(/\s+$/,""):fragment.replace(/\s+$/,"")),toSourceNodeWhenNeeded(result,stmt)},FORMAT_MINIFY={indent:{style:"",base:0},renumber:!0,hexadecimal:!0,quotes:"auto",escapeless:!0,compact:!0,parentheses:!1,semicolons:!1},FORMAT_DEFAULTS={indent:{style:"    ",base:0,adjustMultilineComment:!1},newline:"\n",space:" ",json:!1,renumber:!1,hexadecimal:!1,quotes:"single",escapeless:!1,compact:!1,parentheses:!0,semicolons:!0,safeConcatenation:!1,preserveBlankLines:!1},exports.version=require_package().version,exports.generate=function generate2(node,options){var result,pair,defaultOptions2={indent:null,base:null,parse:null,comment:!1,format:{indent:{style:"    ",base:0,adjustMultilineComment:!1},newline:"\n",space:" ",json:!1,renumber:!1,hexadecimal:!1,quotes:"single",escapeless:!1,compact:!1,parentheses:!0,semicolons:!0,safeConcatenation:!1,preserveBlankLines:!1},moz:{comprehensionExpressionStartsWithAssignment:!1,starlessGenerator:!1},sourceMap:null,sourceMapRoot:null,sourceMapWithCode:!1,directive:!1,raw:!0,verbatim:null,sourceCode:null};return null!=options?("string"==typeof options.indent&&(defaultOptions2.format.indent.style=options.indent),"number"==typeof options.base&&(defaultOptions2.format.indent.base=options.base),options=updateDeeply(defaultOptions2,options),indent=options.format.indent.style,base2="string"==typeof options.base?options.base:stringRepeat(indent,options.format.indent.base)):(indent=(options=defaultOptions2).format.indent.style,base2=stringRepeat(indent,options.format.indent.base)),json=options.format.json,renumber=options.format.renumber,hexadecimal=!json&&options.format.hexadecimal,quotes=json?"double":options.format.quotes,escapeless=options.format.escapeless,newline=options.format.newline,space=options.format.space,options.format.compact&&(newline=space=indent=base2=""),parentheses=options.format.parentheses,semicolons=options.format.semicolons,safeConcatenation=options.format.safeConcatenation,directive=options.directive,parse5=json?null:options.parse,sourceMap=options.sourceMap,sourceCode=options.sourceCode,preserveBlankLines=options.format.preserveBlankLines&&null!==sourceCode,extra=options,sourceMap&&(SourceNode=exports.browser?__webpack_require__.g.sourceMap.SourceNode:require_source_map().SourceNode),result=generateInternal(node),sourceMap?(pair=result.toStringWithSourceMap({file:options.file,sourceRoot:options.sourceMapRoot}),options.sourceContent&&pair.map.setSourceContent(options.sourceMap,options.sourceContent),options.sourceMapWithCode?pair:pair.map.toString()):(pair={code:result.toString(),map:null},options.sourceMapWithCode?pair:pair.code)},exports.attachComments=estraverse.attachComments,exports.Precedence=updateDeeply({},Precedence),exports.browser=!1,exports.FORMAT_MINIFY=FORMAT_MINIFY,exports.FORMAT_DEFAULTS=FORMAT_DEFAULTS}()}}),acorn_exports={};function isInAstralSet(code,set){for(var pos=65536,i=0;i<set.length;i+=2){if((pos+=set[i])>code)return!1;if((pos+=set[i+1])>=code)return!0}}function isIdentifierStart(code,astral){return code<65?36===code:code<91||(code<97?95===code:code<123||(code<=65535?code>=170&&nonASCIIidentifierStart.test(String.fromCharCode(code)):!1!==astral&&isInAstralSet(code,astralIdentifierStartCodes)))}function isIdentifierChar(code,astral){return code<48?36===code:code<58||!(code<65)&&(code<91||(code<97?95===code:code<123||(code<=65535?code>=170&&nonASCIIidentifier.test(String.fromCharCode(code)):!1!==astral&&(isInAstralSet(code,astralIdentifierStartCodes)||isInAstralSet(code,astralIdentifierCodes)))))}function binop(name,prec){return new TokenType(name,{beforeExpr:!0,binop:prec})}function kw(name,options){return void 0===options&&(options={}),options.keyword=name,keywords$1[name]=new TokenType(name,options)}function isNewLine(code,ecma2019String){return 10===code||13===code||!ecma2019String&&(8232===code||8233===code)}function has(obj,propName){return hasOwnProperty.call(obj,propName)}function wordsRegexp(words){return new RegExp("^(?:"+words.replace(/ /g,"|")+")$")}function getLineInfo(input,offset2){for(var line=1,cur=0;;){lineBreakG.lastIndex=cur;var match=lineBreakG.exec(input);if(!(match&&match.index<offset2))return new Position(line,offset2-cur);++line,cur=match.index+match[0].length}}function getOptions(opts){var options={};for(var opt in defaultOptions)options[opt]=opts&&has(opts,opt)?opts[opt]:defaultOptions[opt];if(options.ecmaVersion>=2015&&(options.ecmaVersion-=2009),null==options.allowReserved&&(options.allowReserved=options.ecmaVersion<5),isArray(options.onToken)){var tokens=options.onToken;options.onToken=function(token){return tokens.push(token)}}return isArray(options.onComment)&&(options.onComment=function pushComment(options,array){return function(block,text,start,end,startLoc,endLoc){var comment={type:block?"Block":"Line",value:text,start,end};options.locations&&(comment.loc=new SourceLocation(this,startLoc,endLoc)),options.ranges&&(comment.range=[start,end]),array.push(comment)}}(options,options.onComment)),options}function functionFlags(async,generator){return SCOPE_FUNCTION|(async?SCOPE_ASYNC:0)|(generator?SCOPE_GENERATOR:0)}function DestructuringErrors(){this.shorthandAssign=this.trailingComma=this.parenthesizedAssign=this.parenthesizedBind=this.doubleProto=-1}function finishNodeAt(node,type,pos,loc){return node.type=type,node.end=pos,this.options.locations&&(node.loc.end=loc),this.options.ranges&&(node.range[1]=pos),node}function buildUnicodeData(ecmaVersion){var d=data[ecmaVersion]={binary:wordsRegexp(unicodeBinaryProperties[ecmaVersion]+" "+unicodeGeneralCategoryValues),nonBinary:{General_Category:wordsRegexp(unicodeGeneralCategoryValues),Script:wordsRegexp(unicodeScriptValues[ecmaVersion])}};d.nonBinary.Script_Extensions=d.nonBinary.Script,d.nonBinary.gc=d.nonBinary.General_Category,d.nonBinary.sc=d.nonBinary.Script,d.nonBinary.scx=d.nonBinary.Script_Extensions}function codePointToString(ch){return ch<=65535?String.fromCharCode(ch):(ch-=65536,String.fromCharCode(55296+(ch>>10),56320+(1023&ch)))}function isSyntaxCharacter(ch){return 36===ch||ch>=40&&ch<=43||46===ch||63===ch||ch>=91&&ch<=94||ch>=123&&ch<=125}function isControlLetter(ch){return ch>=65&&ch<=90||ch>=97&&ch<=122}function isUnicodePropertyNameCharacter(ch){return isControlLetter(ch)||95===ch}function isUnicodePropertyValueCharacter(ch){return isUnicodePropertyNameCharacter(ch)||isDecimalDigit(ch)}function isDecimalDigit(ch){return ch>=48&&ch<=57}function isHexDigit(ch){return ch>=48&&ch<=57||ch>=65&&ch<=70||ch>=97&&ch<=102}function hexToInt(ch){return ch>=65&&ch<=70?ch-65+10:ch>=97&&ch<=102?ch-97+10:ch-48}function isOctalDigit(ch){return ch>=48&&ch<=55}function stringToBigInt(str){return"function"!=typeof BigInt?null:BigInt(str.replace(/_/g,""))}function codePointToString$1(code){return code<=65535?String.fromCharCode(code):(code-=65536,String.fromCharCode(55296+(code>>10),56320+(1023&code)))}function parse3(input,options){return Parser.parse(input,options)}function parseExpressionAt2(input,pos,options){return Parser.parseExpressionAt(input,pos,options)}function tokenizer2(input,options){return Parser.tokenizer(input,options)}(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.VA)(acorn_exports,{Node:()=>Node,Parser:()=>Parser,Position:()=>Position,SourceLocation:()=>SourceLocation,TokContext:()=>TokContext,Token:()=>Token,TokenType:()=>TokenType,defaultOptions:()=>defaultOptions,getLineInfo:()=>getLineInfo,isIdentifierChar:()=>isIdentifierChar,isIdentifierStart:()=>isIdentifierStart,isNewLine:()=>isNewLine,keywordTypes:()=>keywords$1,lineBreak:()=>lineBreak,lineBreakG:()=>lineBreakG,nonASCIIwhitespace:()=>nonASCIIwhitespace,parse:()=>parse3,parseExpressionAt:()=>parseExpressionAt2,tokContexts:()=>types$1,tokTypes:()=>types,tokenizer:()=>tokenizer2,version:()=>version});var reservedWords,ecma5AndLessKeywords,keywords,keywordRelationalOperator,nonASCIIidentifierStartChars,nonASCIIidentifierChars,nonASCIIidentifierStart,nonASCIIidentifier,astralIdentifierStartCodes,astralIdentifierCodes,TokenType,beforeExpr,startsExpr,keywords$1,types,lineBreak,lineBreakG,nonASCIIwhitespace,skipWhiteSpace,ref,hasOwnProperty,toString,isArray,Position,SourceLocation,defaultOptions,SCOPE_FUNCTION,SCOPE_VAR,SCOPE_ASYNC,SCOPE_GENERATOR,Parser,prototypeAccessors,pp,literal,pp$1,loopLabel,switchLabel,empty,FUNC_STATEMENT,FUNC_HANGING_STATEMENT,pp$2,pp$3,empty$1,pp$4,pp$5,Scope,Node,pp$6,TokContext,types$1,pp$7,ecma9BinaryProperties,ecma10BinaryProperties,unicodeBinaryProperties,unicodeGeneralCategoryValues,ecma9ScriptValues,ecma10ScriptValues,unicodeScriptValues,data,pp$8,RegExpValidationState,Token,pp$9,INVALID_TEMPLATE_ESCAPE_ERROR,version,init_acorn=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.E)({"../../node_modules/acorn/dist/acorn.mjs"(){reservedWords={3:"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",5:"class enum extends super const export import",6:"enum",strict:"implements interface let package private protected public static yield",strictBind:"eval arguments"},keywords={5:ecma5AndLessKeywords="break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this","5module":ecma5AndLessKeywords+" export import",6:ecma5AndLessKeywords+" const class extends export import super"},keywordRelationalOperator=/^in(stanceof)?$/,nonASCIIidentifierStartChars="ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࣇऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-鿼ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-ꟊꟵ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",nonASCIIidentifierChars="‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿᫀᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿",nonASCIIidentifierStart=new RegExp("["+nonASCIIidentifierStartChars+"]"),nonASCIIidentifier=new RegExp("["+nonASCIIidentifierStartChars+nonASCIIidentifierChars+"]"),nonASCIIidentifierStartChars=nonASCIIidentifierChars=null,astralIdentifierStartCodes=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938],astralIdentifierCodes=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239],beforeExpr={beforeExpr:!0},keywords$1={},types={num:new(TokenType=function(label,conf){void 0===conf&&(conf={}),this.label=label,this.keyword=conf.keyword,this.beforeExpr=!!conf.beforeExpr,this.startsExpr=!!conf.startsExpr,this.isLoop=!!conf.isLoop,this.isAssign=!!conf.isAssign,this.prefix=!!conf.prefix,this.postfix=!!conf.postfix,this.binop=conf.binop||null,this.updateContext=null})("num",startsExpr={startsExpr:!0}),regexp:new TokenType("regexp",startsExpr),string:new TokenType("string",startsExpr),name:new TokenType("name",startsExpr),eof:new TokenType("eof"),bracketL:new TokenType("[",{beforeExpr:!0,startsExpr:!0}),bracketR:new TokenType("]"),braceL:new TokenType("{",{beforeExpr:!0,startsExpr:!0}),braceR:new TokenType("}"),parenL:new TokenType("(",{beforeExpr:!0,startsExpr:!0}),parenR:new TokenType(")"),comma:new TokenType(",",beforeExpr),semi:new TokenType(";",beforeExpr),colon:new TokenType(":",beforeExpr),dot:new TokenType("."),question:new TokenType("?",beforeExpr),questionDot:new TokenType("?."),arrow:new TokenType("=>",beforeExpr),template:new TokenType("template"),invalidTemplate:new TokenType("invalidTemplate"),ellipsis:new TokenType("...",beforeExpr),backQuote:new TokenType("`",startsExpr),dollarBraceL:new TokenType("${",{beforeExpr:!0,startsExpr:!0}),eq:new TokenType("=",{beforeExpr:!0,isAssign:!0}),assign:new TokenType("_=",{beforeExpr:!0,isAssign:!0}),incDec:new TokenType("++/--",{prefix:!0,postfix:!0,startsExpr:!0}),prefix:new TokenType("!/~",{beforeExpr:!0,prefix:!0,startsExpr:!0}),logicalOR:binop("||",1),logicalAND:binop("&&",2),bitwiseOR:binop("|",3),bitwiseXOR:binop("^",4),bitwiseAND:binop("&",5),equality:binop("==/!=/===/!==",6),relational:binop("</>/<=/>=",7),bitShift:binop("<</>>/>>>",8),plusMin:new TokenType("+/-",{beforeExpr:!0,binop:9,prefix:!0,startsExpr:!0}),modulo:binop("%",10),star:binop("*",10),slash:binop("/",10),starstar:new TokenType("**",{beforeExpr:!0}),coalesce:binop("??",1),_break:kw("break"),_case:kw("case",beforeExpr),_catch:kw("catch"),_continue:kw("continue"),_debugger:kw("debugger"),_default:kw("default",beforeExpr),_do:kw("do",{isLoop:!0,beforeExpr:!0}),_else:kw("else",beforeExpr),_finally:kw("finally"),_for:kw("for",{isLoop:!0}),_function:kw("function",startsExpr),_if:kw("if"),_return:kw("return",beforeExpr),_switch:kw("switch"),_throw:kw("throw",beforeExpr),_try:kw("try"),_var:kw("var"),_const:kw("const"),_while:kw("while",{isLoop:!0}),_with:kw("with"),_new:kw("new",{beforeExpr:!0,startsExpr:!0}),_this:kw("this",startsExpr),_super:kw("super",startsExpr),_class:kw("class",startsExpr),_extends:kw("extends",beforeExpr),_export:kw("export"),_import:kw("import",startsExpr),_null:kw("null",startsExpr),_true:kw("true",startsExpr),_false:kw("false",startsExpr),_in:kw("in",{beforeExpr:!0,binop:7}),_instanceof:kw("instanceof",{beforeExpr:!0,binop:7}),_typeof:kw("typeof",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_void:kw("void",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_delete:kw("delete",{beforeExpr:!0,prefix:!0,startsExpr:!0})},lineBreak=/\r\n?|\n|\u2028|\u2029/,lineBreakG=new RegExp(lineBreak.source,"g"),nonASCIIwhitespace=/[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/,skipWhiteSpace=/(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g,ref=Object.prototype,hasOwnProperty=ref.hasOwnProperty,toString=ref.toString,isArray=Array.isArray||function(obj){return"[object Array]"===toString.call(obj)},(Position=function(line,col){this.line=line,this.column=col}).prototype.offset=function(n){return new Position(this.line,this.column+n)},SourceLocation=function(p,start,end){this.start=start,this.end=end,null!==p.sourceFile&&(this.source=p.sourceFile)},defaultOptions={ecmaVersion:10,sourceType:"script",onInsertedSemicolon:null,onTrailingComma:null,allowReserved:null,allowReturnOutsideFunction:!1,allowImportExportEverywhere:!1,allowAwaitOutsideFunction:!1,allowHashBang:!1,locations:!1,onToken:null,onComment:null,ranges:!1,program:null,sourceFile:null,directSourceFile:null,preserveParens:!1},SCOPE_VAR=1|(SCOPE_FUNCTION=2),SCOPE_ASYNC=4,SCOPE_GENERATOR=8,prototypeAccessors={inFunction:{configurable:!0},inGenerator:{configurable:!0},inAsync:{configurable:!0},allowSuper:{configurable:!0},allowDirectSuper:{configurable:!0},treatFunctionsAsVar:{configurable:!0}},(Parser=function(options,input,startPos){this.options=options=getOptions(options),this.sourceFile=options.sourceFile,this.keywords=wordsRegexp(keywords[options.ecmaVersion>=6?6:"module"===options.sourceType?"5module":5]);var reserved="";if(!0!==options.allowReserved){for(var v=options.ecmaVersion;!(reserved=reservedWords[v]);v--);"module"===options.sourceType&&(reserved+=" await")}this.reservedWords=wordsRegexp(reserved);var reservedStrict=(reserved?reserved+" ":"")+reservedWords.strict;this.reservedWordsStrict=wordsRegexp(reservedStrict),this.reservedWordsStrictBind=wordsRegexp(reservedStrict+" "+reservedWords.strictBind),this.input=String(input),this.containsEsc=!1,startPos?(this.pos=startPos,this.lineStart=this.input.lastIndexOf("\n",startPos-1)+1,this.curLine=this.input.slice(0,this.lineStart).split(lineBreak).length):(this.pos=this.lineStart=0,this.curLine=1),this.type=types.eof,this.value=null,this.start=this.end=this.pos,this.startLoc=this.endLoc=this.curPosition(),this.lastTokEndLoc=this.lastTokStartLoc=null,this.lastTokStart=this.lastTokEnd=this.pos,this.context=this.initialContext(),this.exprAllowed=!0,this.inModule="module"===options.sourceType,this.strict=this.inModule||this.strictDirective(this.pos),this.potentialArrowAt=-1,this.yieldPos=this.awaitPos=this.awaitIdentPos=0,this.labels=[],this.undefinedExports={},0===this.pos&&options.allowHashBang&&"#!"===this.input.slice(0,2)&&this.skipLineComment(2),this.scopeStack=[],this.enterScope(1),this.regexpState=null}).prototype.parse=function(){var node=this.options.program||this.startNode();return this.nextToken(),this.parseTopLevel(node)},prototypeAccessors.inFunction.get=function(){return(this.currentVarScope().flags&SCOPE_FUNCTION)>0},prototypeAccessors.inGenerator.get=function(){return(this.currentVarScope().flags&SCOPE_GENERATOR)>0},prototypeAccessors.inAsync.get=function(){return(this.currentVarScope().flags&SCOPE_ASYNC)>0},prototypeAccessors.allowSuper.get=function(){return(64&this.currentThisScope().flags)>0},prototypeAccessors.allowDirectSuper.get=function(){return(128&this.currentThisScope().flags)>0},prototypeAccessors.treatFunctionsAsVar.get=function(){return this.treatFunctionsAsVarInScope(this.currentScope())},Parser.prototype.inNonArrowFunction=function(){return(this.currentThisScope().flags&SCOPE_FUNCTION)>0},Parser.extend=function(){for(var plugins=[],len=arguments.length;len--;)plugins[len]=arguments[len];for(var cls=this,i=0;i<plugins.length;i++)cls=plugins[i](cls);return cls},Parser.parse=function(input,options){return new this(options,input).parse()},Parser.parseExpressionAt=function(input,pos,options){var parser=new this(options,input,pos);return parser.nextToken(),parser.parseExpression()},Parser.tokenizer=function(input,options){return new this(options,input)},Object.defineProperties(Parser.prototype,prototypeAccessors),pp=Parser.prototype,literal=/^(?:'((?:\\.|[^'\\])*?)'|"((?:\\.|[^"\\])*?)")/,pp.strictDirective=function(start){for(;;){skipWhiteSpace.lastIndex=start,start+=skipWhiteSpace.exec(this.input)[0].length;var match=literal.exec(this.input.slice(start));if(!match)return!1;if("use strict"===(match[1]||match[2])){skipWhiteSpace.lastIndex=start+match[0].length;var spaceAfter=skipWhiteSpace.exec(this.input),end=spaceAfter.index+spaceAfter[0].length,next=this.input.charAt(end);return";"===next||"}"===next||lineBreak.test(spaceAfter[0])&&!(/[(`.[+\-/*%<>=,?^&]/.test(next)||"!"===next&&"="===this.input.charAt(end+1))}start+=match[0].length,skipWhiteSpace.lastIndex=start,start+=skipWhiteSpace.exec(this.input)[0].length,";"===this.input[start]&&start++}},pp.eat=function(type){return this.type===type&&(this.next(),!0)},pp.isContextual=function(name){return this.type===types.name&&this.value===name&&!this.containsEsc},pp.eatContextual=function(name){return!!this.isContextual(name)&&(this.next(),!0)},pp.expectContextual=function(name){this.eatContextual(name)||this.unexpected()},pp.canInsertSemicolon=function(){return this.type===types.eof||this.type===types.braceR||lineBreak.test(this.input.slice(this.lastTokEnd,this.start))},pp.insertSemicolon=function(){if(this.canInsertSemicolon())return this.options.onInsertedSemicolon&&this.options.onInsertedSemicolon(this.lastTokEnd,this.lastTokEndLoc),!0},pp.semicolon=function(){!this.eat(types.semi)&&!this.insertSemicolon()&&this.unexpected()},pp.afterTrailingComma=function(tokType,notNext){if(this.type===tokType)return this.options.onTrailingComma&&this.options.onTrailingComma(this.lastTokStart,this.lastTokStartLoc),notNext||this.next(),!0},pp.expect=function(type){this.eat(type)||this.unexpected()},pp.unexpected=function(pos){this.raise(pos??this.start,"Unexpected token")},pp.checkPatternErrors=function(refDestructuringErrors,isAssign){if(refDestructuringErrors){refDestructuringErrors.trailingComma>-1&&this.raiseRecoverable(refDestructuringErrors.trailingComma,"Comma is not permitted after the rest element");var parens=isAssign?refDestructuringErrors.parenthesizedAssign:refDestructuringErrors.parenthesizedBind;parens>-1&&this.raiseRecoverable(parens,"Parenthesized pattern")}},pp.checkExpressionErrors=function(refDestructuringErrors,andThrow){if(!refDestructuringErrors)return!1;var shorthandAssign=refDestructuringErrors.shorthandAssign,doubleProto=refDestructuringErrors.doubleProto;if(!andThrow)return shorthandAssign>=0||doubleProto>=0;shorthandAssign>=0&&this.raise(shorthandAssign,"Shorthand property assignments are valid only in destructuring patterns"),doubleProto>=0&&this.raiseRecoverable(doubleProto,"Redefinition of __proto__ property")},pp.checkYieldAwaitInDefaultParams=function(){this.yieldPos&&(!this.awaitPos||this.yieldPos<this.awaitPos)&&this.raise(this.yieldPos,"Yield expression cannot be a default value"),this.awaitPos&&this.raise(this.awaitPos,"Await expression cannot be a default value")},pp.isSimpleAssignTarget=function(expr){return"ParenthesizedExpression"===expr.type?this.isSimpleAssignTarget(expr.expression):"Identifier"===expr.type||"MemberExpression"===expr.type},(pp$1=Parser.prototype).parseTopLevel=function(node){var exports={};for(node.body||(node.body=[]);this.type!==types.eof;){var stmt=this.parseStatement(null,!0,exports);node.body.push(stmt)}if(this.inModule)for(var i=0,list=Object.keys(this.undefinedExports);i<list.length;i+=1){var name=list[i];this.raiseRecoverable(this.undefinedExports[name].start,"Export '"+name+"' is not defined")}return this.adaptDirectivePrologue(node.body),this.next(),node.sourceType=this.options.sourceType,this.finishNode(node,"Program")},loopLabel={kind:"loop"},switchLabel={kind:"switch"},pp$1.isLet=function(context){if(this.options.ecmaVersion<6||!this.isContextual("let"))return!1;skipWhiteSpace.lastIndex=this.pos;var skip=skipWhiteSpace.exec(this.input),next=this.pos+skip[0].length,nextCh=this.input.charCodeAt(next);if(91===nextCh)return!0;if(context)return!1;if(123===nextCh)return!0;if(isIdentifierStart(nextCh,!0)){for(var pos=next+1;isIdentifierChar(this.input.charCodeAt(pos),!0);)++pos;var ident=this.input.slice(next,pos);if(!keywordRelationalOperator.test(ident))return!0}return!1},pp$1.isAsyncFunction=function(){if(this.options.ecmaVersion<8||!this.isContextual("async"))return!1;skipWhiteSpace.lastIndex=this.pos;var skip=skipWhiteSpace.exec(this.input),next=this.pos+skip[0].length;return!(lineBreak.test(this.input.slice(this.pos,next))||"function"!==this.input.slice(next,next+8)||next+8!==this.input.length&&isIdentifierChar(this.input.charAt(next+8)))},pp$1.parseStatement=function(context,topLevel,exports){var kind,starttype=this.type,node=this.startNode();switch(this.isLet(context)&&(starttype=types._var,kind="let"),starttype){case types._break:case types._continue:return this.parseBreakContinueStatement(node,starttype.keyword);case types._debugger:return this.parseDebuggerStatement(node);case types._do:return this.parseDoStatement(node);case types._for:return this.parseForStatement(node);case types._function:return context&&(this.strict||"if"!==context&&"label"!==context)&&this.options.ecmaVersion>=6&&this.unexpected(),this.parseFunctionStatement(node,!1,!context);case types._class:return context&&this.unexpected(),this.parseClass(node,!0);case types._if:return this.parseIfStatement(node);case types._return:return this.parseReturnStatement(node);case types._switch:return this.parseSwitchStatement(node);case types._throw:return this.parseThrowStatement(node);case types._try:return this.parseTryStatement(node);case types._const:case types._var:return kind=kind||this.value,context&&"var"!==kind&&this.unexpected(),this.parseVarStatement(node,kind);case types._while:return this.parseWhileStatement(node);case types._with:return this.parseWithStatement(node);case types.braceL:return this.parseBlock(!0,node);case types.semi:return this.parseEmptyStatement(node);case types._export:case types._import:if(this.options.ecmaVersion>10&&starttype===types._import){skipWhiteSpace.lastIndex=this.pos;var skip=skipWhiteSpace.exec(this.input),next=this.pos+skip[0].length,nextCh=this.input.charCodeAt(next);if(40===nextCh||46===nextCh)return this.parseExpressionStatement(node,this.parseExpression())}return this.options.allowImportExportEverywhere||(topLevel||this.raise(this.start,"'import' and 'export' may only appear at the top level"),this.inModule||this.raise(this.start,"'import' and 'export' may appear only with 'sourceType: module'")),starttype===types._import?this.parseImport(node):this.parseExport(node,exports);default:if(this.isAsyncFunction())return context&&this.unexpected(),this.next(),this.parseFunctionStatement(node,!0,!context);var maybeName=this.value,expr=this.parseExpression();return starttype===types.name&&"Identifier"===expr.type&&this.eat(types.colon)?this.parseLabeledStatement(node,maybeName,expr,context):this.parseExpressionStatement(node,expr)}},pp$1.parseBreakContinueStatement=function(node,keyword){var isBreak="break"===keyword;this.next(),this.eat(types.semi)||this.insertSemicolon()?node.label=null:this.type!==types.name?this.unexpected():(node.label=this.parseIdent(),this.semicolon());for(var i=0;i<this.labels.length;++i){var lab=this.labels[i];if((null==node.label||lab.name===node.label.name)&&(null!=lab.kind&&(isBreak||"loop"===lab.kind)||node.label&&isBreak))break}return i===this.labels.length&&this.raise(node.start,"Unsyntactic "+keyword),this.finishNode(node,isBreak?"BreakStatement":"ContinueStatement")},pp$1.parseDebuggerStatement=function(node){return this.next(),this.semicolon(),this.finishNode(node,"DebuggerStatement")},pp$1.parseDoStatement=function(node){return this.next(),this.labels.push(loopLabel),node.body=this.parseStatement("do"),this.labels.pop(),this.expect(types._while),node.test=this.parseParenExpression(),this.options.ecmaVersion>=6?this.eat(types.semi):this.semicolon(),this.finishNode(node,"DoWhileStatement")},pp$1.parseForStatement=function(node){this.next();var awaitAt=this.options.ecmaVersion>=9&&(this.inAsync||!this.inFunction&&this.options.allowAwaitOutsideFunction)&&this.eatContextual("await")?this.lastTokStart:-1;if(this.labels.push(loopLabel),this.enterScope(0),this.expect(types.parenL),this.type===types.semi)return awaitAt>-1&&this.unexpected(awaitAt),this.parseFor(node,null);var isLet=this.isLet();if(this.type===types._var||this.type===types._const||isLet){var init$1=this.startNode(),kind=isLet?"let":this.value;return this.next(),this.parseVar(init$1,!0,kind),this.finishNode(init$1,"VariableDeclaration"),(this.type===types._in||this.options.ecmaVersion>=6&&this.isContextual("of"))&&1===init$1.declarations.length?(this.options.ecmaVersion>=9&&(this.type===types._in?awaitAt>-1&&this.unexpected(awaitAt):node.await=awaitAt>-1),this.parseForIn(node,init$1)):(awaitAt>-1&&this.unexpected(awaitAt),this.parseFor(node,init$1))}var refDestructuringErrors=new DestructuringErrors,init=this.parseExpression(!0,refDestructuringErrors);return this.type===types._in||this.options.ecmaVersion>=6&&this.isContextual("of")?(this.options.ecmaVersion>=9&&(this.type===types._in?awaitAt>-1&&this.unexpected(awaitAt):node.await=awaitAt>-1),this.toAssignable(init,!1,refDestructuringErrors),this.checkLVal(init),this.parseForIn(node,init)):(this.checkExpressionErrors(refDestructuringErrors,!0),awaitAt>-1&&this.unexpected(awaitAt),this.parseFor(node,init))},pp$1.parseFunctionStatement=function(node,isAsync,declarationPosition){return this.next(),this.parseFunction(node,FUNC_STATEMENT|(declarationPosition?0:FUNC_HANGING_STATEMENT),!1,isAsync)},pp$1.parseIfStatement=function(node){return this.next(),node.test=this.parseParenExpression(),node.consequent=this.parseStatement("if"),node.alternate=this.eat(types._else)?this.parseStatement("if"):null,this.finishNode(node,"IfStatement")},pp$1.parseReturnStatement=function(node){return!this.inFunction&&!this.options.allowReturnOutsideFunction&&this.raise(this.start,"'return' outside of function"),this.next(),this.eat(types.semi)||this.insertSemicolon()?node.argument=null:(node.argument=this.parseExpression(),this.semicolon()),this.finishNode(node,"ReturnStatement")},pp$1.parseSwitchStatement=function(node){this.next(),node.discriminant=this.parseParenExpression(),node.cases=[],this.expect(types.braceL),this.labels.push(switchLabel),this.enterScope(0);for(var cur,sawDefault=!1;this.type!==types.braceR;)if(this.type===types._case||this.type===types._default){var isCase=this.type===types._case;cur&&this.finishNode(cur,"SwitchCase"),node.cases.push(cur=this.startNode()),cur.consequent=[],this.next(),isCase?cur.test=this.parseExpression():(sawDefault&&this.raiseRecoverable(this.lastTokStart,"Multiple default clauses"),sawDefault=!0,cur.test=null),this.expect(types.colon)}else cur||this.unexpected(),cur.consequent.push(this.parseStatement(null));return this.exitScope(),cur&&this.finishNode(cur,"SwitchCase"),this.next(),this.labels.pop(),this.finishNode(node,"SwitchStatement")},pp$1.parseThrowStatement=function(node){return this.next(),lineBreak.test(this.input.slice(this.lastTokEnd,this.start))&&this.raise(this.lastTokEnd,"Illegal newline after throw"),node.argument=this.parseExpression(),this.semicolon(),this.finishNode(node,"ThrowStatement")},empty=[],pp$1.parseTryStatement=function(node){if(this.next(),node.block=this.parseBlock(),node.handler=null,this.type===types._catch){var clause=this.startNode();if(this.next(),this.eat(types.parenL)){clause.param=this.parseBindingAtom();var simple2="Identifier"===clause.param.type;this.enterScope(simple2?32:0),this.checkLVal(clause.param,simple2?4:2),this.expect(types.parenR)}else this.options.ecmaVersion<10&&this.unexpected(),clause.param=null,this.enterScope(0);clause.body=this.parseBlock(!1),this.exitScope(),node.handler=this.finishNode(clause,"CatchClause")}return node.finalizer=this.eat(types._finally)?this.parseBlock():null,!node.handler&&!node.finalizer&&this.raise(node.start,"Missing catch or finally clause"),this.finishNode(node,"TryStatement")},pp$1.parseVarStatement=function(node,kind){return this.next(),this.parseVar(node,!1,kind),this.semicolon(),this.finishNode(node,"VariableDeclaration")},pp$1.parseWhileStatement=function(node){return this.next(),node.test=this.parseParenExpression(),this.labels.push(loopLabel),node.body=this.parseStatement("while"),this.labels.pop(),this.finishNode(node,"WhileStatement")},pp$1.parseWithStatement=function(node){return this.strict&&this.raise(this.start,"'with' in strict mode"),this.next(),node.object=this.parseParenExpression(),node.body=this.parseStatement("with"),this.finishNode(node,"WithStatement")},pp$1.parseEmptyStatement=function(node){return this.next(),this.finishNode(node,"EmptyStatement")},pp$1.parseLabeledStatement=function(node,maybeName,expr,context){for(var i$1=0,list=this.labels;i$1<list.length;i$1+=1){list[i$1].name===maybeName&&this.raise(expr.start,"Label '"+maybeName+"' is already declared")}for(var kind=this.type.isLoop?"loop":this.type===types._switch?"switch":null,i=this.labels.length-1;i>=0;i--){var label$1=this.labels[i];if(label$1.statementStart!==node.start)break;label$1.statementStart=this.start,label$1.kind=kind}return this.labels.push({name:maybeName,kind,statementStart:this.start}),node.body=this.parseStatement(context?-1===context.indexOf("label")?context+"label":context:"label"),this.labels.pop(),node.label=expr,this.finishNode(node,"LabeledStatement")},pp$1.parseExpressionStatement=function(node,expr){return node.expression=expr,this.semicolon(),this.finishNode(node,"ExpressionStatement")},pp$1.parseBlock=function(createNewLexicalScope,node,exitStrict){for(void 0===createNewLexicalScope&&(createNewLexicalScope=!0),void 0===node&&(node=this.startNode()),node.body=[],this.expect(types.braceL),createNewLexicalScope&&this.enterScope(0);this.type!==types.braceR;){var stmt=this.parseStatement(null);node.body.push(stmt)}return exitStrict&&(this.strict=!1),this.next(),createNewLexicalScope&&this.exitScope(),this.finishNode(node,"BlockStatement")},pp$1.parseFor=function(node,init){return node.init=init,this.expect(types.semi),node.test=this.type===types.semi?null:this.parseExpression(),this.expect(types.semi),node.update=this.type===types.parenR?null:this.parseExpression(),this.expect(types.parenR),node.body=this.parseStatement("for"),this.exitScope(),this.labels.pop(),this.finishNode(node,"ForStatement")},pp$1.parseForIn=function(node,init){var isForIn=this.type===types._in;return this.next(),"VariableDeclaration"===init.type&&null!=init.declarations[0].init&&(!isForIn||this.options.ecmaVersion<8||this.strict||"var"!==init.kind||"Identifier"!==init.declarations[0].id.type)?this.raise(init.start,(isForIn?"for-in":"for-of")+" loop variable declaration may not have an initializer"):"AssignmentPattern"===init.type&&this.raise(init.start,"Invalid left-hand side in for-loop"),node.left=init,node.right=isForIn?this.parseExpression():this.parseMaybeAssign(),this.expect(types.parenR),node.body=this.parseStatement("for"),this.exitScope(),this.labels.pop(),this.finishNode(node,isForIn?"ForInStatement":"ForOfStatement")},pp$1.parseVar=function(node,isFor,kind){for(node.declarations=[],node.kind=kind;;){var decl=this.startNode();if(this.parseVarId(decl,kind),this.eat(types.eq)?decl.init=this.parseMaybeAssign(isFor):"const"!==kind||this.type===types._in||this.options.ecmaVersion>=6&&this.isContextual("of")?"Identifier"===decl.id.type||isFor&&(this.type===types._in||this.isContextual("of"))?decl.init=null:this.raise(this.lastTokEnd,"Complex binding patterns require an initialization value"):this.unexpected(),node.declarations.push(this.finishNode(decl,"VariableDeclarator")),!this.eat(types.comma))break}return node},pp$1.parseVarId=function(decl,kind){decl.id=this.parseBindingAtom(),this.checkLVal(decl.id,"var"===kind?1:2,!1)},FUNC_STATEMENT=1,FUNC_HANGING_STATEMENT=2,pp$1.parseFunction=function(node,statement,allowExpressionBody,isAsync){this.initFunction(node),(this.options.ecmaVersion>=9||this.options.ecmaVersion>=6&&!isAsync)&&(this.type===types.star&&statement&FUNC_HANGING_STATEMENT&&this.unexpected(),node.generator=this.eat(types.star)),this.options.ecmaVersion>=8&&(node.async=!!isAsync),statement&FUNC_STATEMENT&&(node.id=4&statement&&this.type!==types.name?null:this.parseIdent(),node.id&&!(statement&FUNC_HANGING_STATEMENT)&&this.checkLVal(node.id,this.strict||node.generator||node.async?this.treatFunctionsAsVar?1:2:3));var oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;return this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(functionFlags(node.async,node.generator)),statement&FUNC_STATEMENT||(node.id=this.type===types.name?this.parseIdent():null),this.parseFunctionParams(node),this.parseFunctionBody(node,allowExpressionBody,!1),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.awaitIdentPos=oldAwaitIdentPos,this.finishNode(node,statement&FUNC_STATEMENT?"FunctionDeclaration":"FunctionExpression")},pp$1.parseFunctionParams=function(node){this.expect(types.parenL),node.params=this.parseBindingList(types.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams()},pp$1.parseClass=function(node,isStatement){this.next();var oldStrict=this.strict;this.strict=!0,this.parseClassId(node,isStatement),this.parseClassSuper(node);var classBody=this.startNode(),hadConstructor=!1;for(classBody.body=[],this.expect(types.braceL);this.type!==types.braceR;){var element=this.parseClassElement(null!==node.superClass);element&&(classBody.body.push(element),"MethodDefinition"===element.type&&"constructor"===element.kind&&(hadConstructor&&this.raise(element.start,"Duplicate constructor in the same class"),hadConstructor=!0))}return this.strict=oldStrict,this.next(),node.body=this.finishNode(classBody,"ClassBody"),this.finishNode(node,isStatement?"ClassDeclaration":"ClassExpression")},pp$1.parseClassElement=function(constructorAllowsSuper){var this$1$1=this;if(this.eat(types.semi))return null;var method=this.startNode(),tryContextual=function(k,noLineBreak){void 0===noLineBreak&&(noLineBreak=!1);var start=this$1$1.start,startLoc=this$1$1.startLoc;return!!this$1$1.eatContextual(k)&&(!(this$1$1.type===types.parenL||noLineBreak&&this$1$1.canInsertSemicolon())||(method.key&&this$1$1.unexpected(),method.computed=!1,method.key=this$1$1.startNodeAt(start,startLoc),method.key.name=k,this$1$1.finishNode(method.key,"Identifier"),!1))};method.kind="method",method.static=tryContextual("static");var isGenerator=this.eat(types.star),isAsync=!1;isGenerator||(this.options.ecmaVersion>=8&&tryContextual("async",!0)?(isAsync=!0,isGenerator=this.options.ecmaVersion>=9&&this.eat(types.star)):tryContextual("get")?method.kind="get":tryContextual("set")&&(method.kind="set")),method.key||this.parsePropertyName(method);var key=method.key,allowsDirectSuper=!1;return method.computed||method.static||!("Identifier"===key.type&&"constructor"===key.name||"Literal"===key.type&&"constructor"===key.value)?method.static&&"Identifier"===key.type&&"prototype"===key.name&&this.raise(key.start,"Classes may not have a static property named prototype"):("method"!==method.kind&&this.raise(key.start,"Constructor can't have get/set modifier"),isGenerator&&this.raise(key.start,"Constructor can't be a generator"),isAsync&&this.raise(key.start,"Constructor can't be an async method"),method.kind="constructor",allowsDirectSuper=constructorAllowsSuper),this.parseClassMethod(method,isGenerator,isAsync,allowsDirectSuper),"get"===method.kind&&0!==method.value.params.length&&this.raiseRecoverable(method.value.start,"getter should have no params"),"set"===method.kind&&1!==method.value.params.length&&this.raiseRecoverable(method.value.start,"setter should have exactly one param"),"set"===method.kind&&"RestElement"===method.value.params[0].type&&this.raiseRecoverable(method.value.params[0].start,"Setter cannot use rest params"),method},pp$1.parseClassMethod=function(method,isGenerator,isAsync,allowsDirectSuper){return method.value=this.parseMethod(isGenerator,isAsync,allowsDirectSuper),this.finishNode(method,"MethodDefinition")},pp$1.parseClassId=function(node,isStatement){this.type===types.name?(node.id=this.parseIdent(),isStatement&&this.checkLVal(node.id,2,!1)):(!0===isStatement&&this.unexpected(),node.id=null)},pp$1.parseClassSuper=function(node){node.superClass=this.eat(types._extends)?this.parseExprSubscripts():null},pp$1.parseExport=function(node,exports){if(this.next(),this.eat(types.star))return this.options.ecmaVersion>=11&&(this.eatContextual("as")?(node.exported=this.parseIdent(!0),this.checkExport(exports,node.exported.name,this.lastTokStart)):node.exported=null),this.expectContextual("from"),this.type!==types.string&&this.unexpected(),node.source=this.parseExprAtom(),this.semicolon(),this.finishNode(node,"ExportAllDeclaration");if(this.eat(types._default)){var isAsync;if(this.checkExport(exports,"default",this.lastTokStart),this.type===types._function||(isAsync=this.isAsyncFunction())){var fNode=this.startNode();this.next(),isAsync&&this.next(),node.declaration=this.parseFunction(fNode,4|FUNC_STATEMENT,!1,isAsync)}else if(this.type===types._class){var cNode=this.startNode();node.declaration=this.parseClass(cNode,"nullableID")}else node.declaration=this.parseMaybeAssign(),this.semicolon();return this.finishNode(node,"ExportDefaultDeclaration")}if(this.shouldParseExportStatement())node.declaration=this.parseStatement(null),"VariableDeclaration"===node.declaration.type?this.checkVariableExport(exports,node.declaration.declarations):this.checkExport(exports,node.declaration.id.name,node.declaration.id.start),node.specifiers=[],node.source=null;else{if(node.declaration=null,node.specifiers=this.parseExportSpecifiers(exports),this.eatContextual("from"))this.type!==types.string&&this.unexpected(),node.source=this.parseExprAtom();else{for(var i=0,list=node.specifiers;i<list.length;i+=1){var spec=list[i];this.checkUnreserved(spec.local),this.checkLocalExport(spec.local)}node.source=null}this.semicolon()}return this.finishNode(node,"ExportNamedDeclaration")},pp$1.checkExport=function(exports,name,pos){exports&&(has(exports,name)&&this.raiseRecoverable(pos,"Duplicate export '"+name+"'"),exports[name]=!0)},pp$1.checkPatternExport=function(exports,pat){var type=pat.type;if("Identifier"===type)this.checkExport(exports,pat.name,pat.start);else if("ObjectPattern"===type)for(var i=0,list=pat.properties;i<list.length;i+=1){var prop=list[i];this.checkPatternExport(exports,prop)}else if("ArrayPattern"===type)for(var i$1=0,list$1=pat.elements;i$1<list$1.length;i$1+=1){var elt=list$1[i$1];elt&&this.checkPatternExport(exports,elt)}else"Property"===type?this.checkPatternExport(exports,pat.value):"AssignmentPattern"===type?this.checkPatternExport(exports,pat.left):"RestElement"===type?this.checkPatternExport(exports,pat.argument):"ParenthesizedExpression"===type&&this.checkPatternExport(exports,pat.expression)},pp$1.checkVariableExport=function(exports,decls){if(exports)for(var i=0,list=decls;i<list.length;i+=1){var decl=list[i];this.checkPatternExport(exports,decl.id)}},pp$1.shouldParseExportStatement=function(){return"var"===this.type.keyword||"const"===this.type.keyword||"class"===this.type.keyword||"function"===this.type.keyword||this.isLet()||this.isAsyncFunction()},pp$1.parseExportSpecifiers=function(exports){var nodes=[],first=!0;for(this.expect(types.braceL);!this.eat(types.braceR);){if(first)first=!1;else if(this.expect(types.comma),this.afterTrailingComma(types.braceR))break;var node=this.startNode();node.local=this.parseIdent(!0),node.exported=this.eatContextual("as")?this.parseIdent(!0):node.local,this.checkExport(exports,node.exported.name,node.exported.start),nodes.push(this.finishNode(node,"ExportSpecifier"))}return nodes},pp$1.parseImport=function(node){return this.next(),this.type===types.string?(node.specifiers=empty,node.source=this.parseExprAtom()):(node.specifiers=this.parseImportSpecifiers(),this.expectContextual("from"),node.source=this.type===types.string?this.parseExprAtom():this.unexpected()),this.semicolon(),this.finishNode(node,"ImportDeclaration")},pp$1.parseImportSpecifiers=function(){var nodes=[],first=!0;if(this.type===types.name){var node=this.startNode();if(node.local=this.parseIdent(),this.checkLVal(node.local,2),nodes.push(this.finishNode(node,"ImportDefaultSpecifier")),!this.eat(types.comma))return nodes}if(this.type===types.star){var node$1=this.startNode();return this.next(),this.expectContextual("as"),node$1.local=this.parseIdent(),this.checkLVal(node$1.local,2),nodes.push(this.finishNode(node$1,"ImportNamespaceSpecifier")),nodes}for(this.expect(types.braceL);!this.eat(types.braceR);){if(first)first=!1;else if(this.expect(types.comma),this.afterTrailingComma(types.braceR))break;var node$2=this.startNode();node$2.imported=this.parseIdent(!0),this.eatContextual("as")?node$2.local=this.parseIdent():(this.checkUnreserved(node$2.imported),node$2.local=node$2.imported),this.checkLVal(node$2.local,2),nodes.push(this.finishNode(node$2,"ImportSpecifier"))}return nodes},pp$1.adaptDirectivePrologue=function(statements){for(var i=0;i<statements.length&&this.isDirectiveCandidate(statements[i]);++i)statements[i].directive=statements[i].expression.raw.slice(1,-1)},pp$1.isDirectiveCandidate=function(statement){return"ExpressionStatement"===statement.type&&"Literal"===statement.expression.type&&"string"==typeof statement.expression.value&&('"'===this.input[statement.start]||"'"===this.input[statement.start])},(pp$2=Parser.prototype).toAssignable=function(node,isBinding,refDestructuringErrors){if(this.options.ecmaVersion>=6&&node)switch(node.type){case"Identifier":this.inAsync&&"await"===node.name&&this.raise(node.start,"Cannot use 'await' as identifier inside an async function");break;case"ObjectPattern":case"ArrayPattern":case"RestElement":break;case"ObjectExpression":node.type="ObjectPattern",refDestructuringErrors&&this.checkPatternErrors(refDestructuringErrors,!0);for(var i=0,list=node.properties;i<list.length;i+=1){var prop=list[i];this.toAssignable(prop,isBinding),"RestElement"===prop.type&&("ArrayPattern"===prop.argument.type||"ObjectPattern"===prop.argument.type)&&this.raise(prop.argument.start,"Unexpected token")}break;case"Property":"init"!==node.kind&&this.raise(node.key.start,"Object pattern can't contain getter or setter"),this.toAssignable(node.value,isBinding);break;case"ArrayExpression":node.type="ArrayPattern",refDestructuringErrors&&this.checkPatternErrors(refDestructuringErrors,!0),this.toAssignableList(node.elements,isBinding);break;case"SpreadElement":node.type="RestElement",this.toAssignable(node.argument,isBinding),"AssignmentPattern"===node.argument.type&&this.raise(node.argument.start,"Rest elements cannot have a default value");break;case"AssignmentExpression":"="!==node.operator&&this.raise(node.left.end,"Only '=' operator can be used for specifying default value."),node.type="AssignmentPattern",delete node.operator,this.toAssignable(node.left,isBinding);case"AssignmentPattern":break;case"ParenthesizedExpression":this.toAssignable(node.expression,isBinding,refDestructuringErrors);break;case"ChainExpression":this.raiseRecoverable(node.start,"Optional chaining cannot appear in left-hand side");break;case"MemberExpression":if(!isBinding)break;default:this.raise(node.start,"Assigning to rvalue")}else refDestructuringErrors&&this.checkPatternErrors(refDestructuringErrors,!0);return node},pp$2.toAssignableList=function(exprList,isBinding){for(var end=exprList.length,i=0;i<end;i++){var elt=exprList[i];elt&&this.toAssignable(elt,isBinding)}if(end){var last=exprList[end-1];6===this.options.ecmaVersion&&isBinding&&last&&"RestElement"===last.type&&"Identifier"!==last.argument.type&&this.unexpected(last.argument.start)}return exprList},pp$2.parseSpread=function(refDestructuringErrors){var node=this.startNode();return this.next(),node.argument=this.parseMaybeAssign(!1,refDestructuringErrors),this.finishNode(node,"SpreadElement")},pp$2.parseRestBinding=function(){var node=this.startNode();return this.next(),6===this.options.ecmaVersion&&this.type!==types.name&&this.unexpected(),node.argument=this.parseBindingAtom(),this.finishNode(node,"RestElement")},pp$2.parseBindingAtom=function(){if(this.options.ecmaVersion>=6)switch(this.type){case types.bracketL:var node=this.startNode();return this.next(),node.elements=this.parseBindingList(types.bracketR,!0,!0),this.finishNode(node,"ArrayPattern");case types.braceL:return this.parseObj(!0)}return this.parseIdent()},pp$2.parseBindingList=function(close,allowEmpty,allowTrailingComma){for(var elts=[],first=!0;!this.eat(close);)if(first?first=!1:this.expect(types.comma),allowEmpty&&this.type===types.comma)elts.push(null);else{if(allowTrailingComma&&this.afterTrailingComma(close))break;if(this.type===types.ellipsis){var rest=this.parseRestBinding();this.parseBindingListItem(rest),elts.push(rest),this.type===types.comma&&this.raise(this.start,"Comma is not permitted after the rest element"),this.expect(close);break}var elem=this.parseMaybeDefault(this.start,this.startLoc);this.parseBindingListItem(elem),elts.push(elem)}return elts},pp$2.parseBindingListItem=function(param){return param},pp$2.parseMaybeDefault=function(startPos,startLoc,left){if(left=left||this.parseBindingAtom(),this.options.ecmaVersion<6||!this.eat(types.eq))return left;var node=this.startNodeAt(startPos,startLoc);return node.left=left,node.right=this.parseMaybeAssign(),this.finishNode(node,"AssignmentPattern")},pp$2.checkLVal=function(expr,bindingType,checkClashes){switch(void 0===bindingType&&(bindingType=0),expr.type){case"Identifier":2===bindingType&&"let"===expr.name&&this.raiseRecoverable(expr.start,"let is disallowed as a lexically bound name"),this.strict&&this.reservedWordsStrictBind.test(expr.name)&&this.raiseRecoverable(expr.start,(bindingType?"Binding ":"Assigning to ")+expr.name+" in strict mode"),checkClashes&&(has(checkClashes,expr.name)&&this.raiseRecoverable(expr.start,"Argument name clash"),checkClashes[expr.name]=!0),0!==bindingType&&5!==bindingType&&this.declareName(expr.name,bindingType,expr.start);break;case"ChainExpression":this.raiseRecoverable(expr.start,"Optional chaining cannot appear in left-hand side");break;case"MemberExpression":bindingType&&this.raiseRecoverable(expr.start,"Binding member expression");break;case"ObjectPattern":for(var i=0,list=expr.properties;i<list.length;i+=1){var prop=list[i];this.checkLVal(prop,bindingType,checkClashes)}break;case"Property":this.checkLVal(expr.value,bindingType,checkClashes);break;case"ArrayPattern":for(var i$1=0,list$1=expr.elements;i$1<list$1.length;i$1+=1){var elem=list$1[i$1];elem&&this.checkLVal(elem,bindingType,checkClashes)}break;case"AssignmentPattern":this.checkLVal(expr.left,bindingType,checkClashes);break;case"RestElement":this.checkLVal(expr.argument,bindingType,checkClashes);break;case"ParenthesizedExpression":this.checkLVal(expr.expression,bindingType,checkClashes);break;default:this.raise(expr.start,(bindingType?"Binding":"Assigning to")+" rvalue")}},(pp$3=Parser.prototype).checkPropClash=function(prop,propHash,refDestructuringErrors){if(!(this.options.ecmaVersion>=9&&"SpreadElement"===prop.type||this.options.ecmaVersion>=6&&(prop.computed||prop.method||prop.shorthand))){var name,key=prop.key;switch(key.type){case"Identifier":name=key.name;break;case"Literal":name=String(key.value);break;default:return}var kind=prop.kind;if(this.options.ecmaVersion>=6)return void("__proto__"===name&&"init"===kind&&(propHash.proto&&(refDestructuringErrors?refDestructuringErrors.doubleProto<0&&(refDestructuringErrors.doubleProto=key.start):this.raiseRecoverable(key.start,"Redefinition of __proto__ property")),propHash.proto=!0));var other=propHash[name="$"+name];if(other)("init"===kind?this.strict&&other.init||other.get||other.set:other.init||other[kind])&&this.raiseRecoverable(key.start,"Redefinition of property");else other=propHash[name]={init:!1,get:!1,set:!1};other[kind]=!0}},pp$3.parseExpression=function(noIn,refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc,expr=this.parseMaybeAssign(noIn,refDestructuringErrors);if(this.type===types.comma){var node=this.startNodeAt(startPos,startLoc);for(node.expressions=[expr];this.eat(types.comma);)node.expressions.push(this.parseMaybeAssign(noIn,refDestructuringErrors));return this.finishNode(node,"SequenceExpression")}return expr},pp$3.parseMaybeAssign=function(noIn,refDestructuringErrors,afterLeftParse){if(this.isContextual("yield")){if(this.inGenerator)return this.parseYield(noIn);this.exprAllowed=!1}var ownDestructuringErrors=!1,oldParenAssign=-1,oldTrailingComma=-1;refDestructuringErrors?(oldParenAssign=refDestructuringErrors.parenthesizedAssign,oldTrailingComma=refDestructuringErrors.trailingComma,refDestructuringErrors.parenthesizedAssign=refDestructuringErrors.trailingComma=-1):(refDestructuringErrors=new DestructuringErrors,ownDestructuringErrors=!0);var startPos=this.start,startLoc=this.startLoc;(this.type===types.parenL||this.type===types.name)&&(this.potentialArrowAt=this.start);var left=this.parseMaybeConditional(noIn,refDestructuringErrors);if(afterLeftParse&&(left=afterLeftParse.call(this,left,startPos,startLoc)),this.type.isAssign){var node=this.startNodeAt(startPos,startLoc);return node.operator=this.value,node.left=this.type===types.eq?this.toAssignable(left,!1,refDestructuringErrors):left,ownDestructuringErrors||(refDestructuringErrors.parenthesizedAssign=refDestructuringErrors.trailingComma=refDestructuringErrors.doubleProto=-1),refDestructuringErrors.shorthandAssign>=node.left.start&&(refDestructuringErrors.shorthandAssign=-1),this.checkLVal(left),this.next(),node.right=this.parseMaybeAssign(noIn),this.finishNode(node,"AssignmentExpression")}return ownDestructuringErrors&&this.checkExpressionErrors(refDestructuringErrors,!0),oldParenAssign>-1&&(refDestructuringErrors.parenthesizedAssign=oldParenAssign),oldTrailingComma>-1&&(refDestructuringErrors.trailingComma=oldTrailingComma),left},pp$3.parseMaybeConditional=function(noIn,refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc,expr=this.parseExprOps(noIn,refDestructuringErrors);if(this.checkExpressionErrors(refDestructuringErrors))return expr;if(this.eat(types.question)){var node=this.startNodeAt(startPos,startLoc);return node.test=expr,node.consequent=this.parseMaybeAssign(),this.expect(types.colon),node.alternate=this.parseMaybeAssign(noIn),this.finishNode(node,"ConditionalExpression")}return expr},pp$3.parseExprOps=function(noIn,refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc,expr=this.parseMaybeUnary(refDestructuringErrors,!1);return this.checkExpressionErrors(refDestructuringErrors)||expr.start===startPos&&"ArrowFunctionExpression"===expr.type?expr:this.parseExprOp(expr,startPos,startLoc,-1,noIn)},pp$3.parseExprOp=function(left,leftStartPos,leftStartLoc,minPrec,noIn){var prec=this.type.binop;if(null!=prec&&(!noIn||this.type!==types._in)&&prec>minPrec){var logical=this.type===types.logicalOR||this.type===types.logicalAND,coalesce=this.type===types.coalesce;coalesce&&(prec=types.logicalAND.binop);var op=this.value;this.next();var startPos=this.start,startLoc=this.startLoc,right=this.parseExprOp(this.parseMaybeUnary(null,!1),startPos,startLoc,prec,noIn),node=this.buildBinary(leftStartPos,leftStartLoc,left,right,op,logical||coalesce);return(logical&&this.type===types.coalesce||coalesce&&(this.type===types.logicalOR||this.type===types.logicalAND))&&this.raiseRecoverable(this.start,"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses"),this.parseExprOp(node,leftStartPos,leftStartLoc,minPrec,noIn)}return left},pp$3.buildBinary=function(startPos,startLoc,left,right,op,logical){var node=this.startNodeAt(startPos,startLoc);return node.left=left,node.operator=op,node.right=right,this.finishNode(node,logical?"LogicalExpression":"BinaryExpression")},pp$3.parseMaybeUnary=function(refDestructuringErrors,sawUnary){var expr,startPos=this.start,startLoc=this.startLoc;if(this.isContextual("await")&&(this.inAsync||!this.inFunction&&this.options.allowAwaitOutsideFunction))expr=this.parseAwait(),sawUnary=!0;else if(this.type.prefix){var node=this.startNode(),update=this.type===types.incDec;node.operator=this.value,node.prefix=!0,this.next(),node.argument=this.parseMaybeUnary(null,!0),this.checkExpressionErrors(refDestructuringErrors,!0),update?this.checkLVal(node.argument):this.strict&&"delete"===node.operator&&"Identifier"===node.argument.type?this.raiseRecoverable(node.start,"Deleting local variable in strict mode"):sawUnary=!0,expr=this.finishNode(node,update?"UpdateExpression":"UnaryExpression")}else{if(expr=this.parseExprSubscripts(refDestructuringErrors),this.checkExpressionErrors(refDestructuringErrors))return expr;for(;this.type.postfix&&!this.canInsertSemicolon();){var node$1=this.startNodeAt(startPos,startLoc);node$1.operator=this.value,node$1.prefix=!1,node$1.argument=expr,this.checkLVal(expr),this.next(),expr=this.finishNode(node$1,"UpdateExpression")}}return!sawUnary&&this.eat(types.starstar)?this.buildBinary(startPos,startLoc,expr,this.parseMaybeUnary(null,!1),"**",!1):expr},pp$3.parseExprSubscripts=function(refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc,expr=this.parseExprAtom(refDestructuringErrors);if("ArrowFunctionExpression"===expr.type&&")"!==this.input.slice(this.lastTokStart,this.lastTokEnd))return expr;var result=this.parseSubscripts(expr,startPos,startLoc);return refDestructuringErrors&&"MemberExpression"===result.type&&(refDestructuringErrors.parenthesizedAssign>=result.start&&(refDestructuringErrors.parenthesizedAssign=-1),refDestructuringErrors.parenthesizedBind>=result.start&&(refDestructuringErrors.parenthesizedBind=-1)),result},pp$3.parseSubscripts=function(base2,startPos,startLoc,noCalls){for(var maybeAsyncArrow=this.options.ecmaVersion>=8&&"Identifier"===base2.type&&"async"===base2.name&&this.lastTokEnd===base2.end&&!this.canInsertSemicolon()&&base2.end-base2.start==5&&this.potentialArrowAt===base2.start,optionalChained=!1;;){var element=this.parseSubscript(base2,startPos,startLoc,noCalls,maybeAsyncArrow,optionalChained);if(element.optional&&(optionalChained=!0),element===base2||"ArrowFunctionExpression"===element.type){if(optionalChained){var chainNode=this.startNodeAt(startPos,startLoc);chainNode.expression=element,element=this.finishNode(chainNode,"ChainExpression")}return element}base2=element}},pp$3.parseSubscript=function(base2,startPos,startLoc,noCalls,maybeAsyncArrow,optionalChained){var optionalSupported=this.options.ecmaVersion>=11,optional=optionalSupported&&this.eat(types.questionDot);noCalls&&optional&&this.raise(this.lastTokStart,"Optional chaining cannot appear in the callee of new expressions");var computed=this.eat(types.bracketL);if(computed||optional&&this.type!==types.parenL&&this.type!==types.backQuote||this.eat(types.dot)){var node=this.startNodeAt(startPos,startLoc);node.object=base2,node.property=computed?this.parseExpression():this.parseIdent("never"!==this.options.allowReserved),node.computed=!!computed,computed&&this.expect(types.bracketR),optionalSupported&&(node.optional=optional),base2=this.finishNode(node,"MemberExpression")}else if(!noCalls&&this.eat(types.parenL)){var refDestructuringErrors=new DestructuringErrors,oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0;var exprList=this.parseExprList(types.parenR,this.options.ecmaVersion>=8,!1,refDestructuringErrors);if(maybeAsyncArrow&&!optional&&!this.canInsertSemicolon()&&this.eat(types.arrow))return this.checkPatternErrors(refDestructuringErrors,!1),this.checkYieldAwaitInDefaultParams(),this.awaitIdentPos>0&&this.raise(this.awaitIdentPos,"Cannot use 'await' as identifier inside an async function"),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.awaitIdentPos=oldAwaitIdentPos,this.parseArrowExpression(this.startNodeAt(startPos,startLoc),exprList,!0);this.checkExpressionErrors(refDestructuringErrors,!0),this.yieldPos=oldYieldPos||this.yieldPos,this.awaitPos=oldAwaitPos||this.awaitPos,this.awaitIdentPos=oldAwaitIdentPos||this.awaitIdentPos;var node$1=this.startNodeAt(startPos,startLoc);node$1.callee=base2,node$1.arguments=exprList,optionalSupported&&(node$1.optional=optional),base2=this.finishNode(node$1,"CallExpression")}else if(this.type===types.backQuote){(optional||optionalChained)&&this.raise(this.start,"Optional chaining cannot appear in the tag of tagged template expressions");var node$2=this.startNodeAt(startPos,startLoc);node$2.tag=base2,node$2.quasi=this.parseTemplate({isTagged:!0}),base2=this.finishNode(node$2,"TaggedTemplateExpression")}return base2},pp$3.parseExprAtom=function(refDestructuringErrors){this.type===types.slash&&this.readRegexp();var node,canBeArrow=this.potentialArrowAt===this.start;switch(this.type){case types._super:return this.allowSuper||this.raise(this.start,"'super' keyword outside a method"),node=this.startNode(),this.next(),this.type===types.parenL&&!this.allowDirectSuper&&this.raise(node.start,"super() call outside constructor of a subclass"),this.type!==types.dot&&this.type!==types.bracketL&&this.type!==types.parenL&&this.unexpected(),this.finishNode(node,"Super");case types._this:return node=this.startNode(),this.next(),this.finishNode(node,"ThisExpression");case types.name:var startPos=this.start,startLoc=this.startLoc,containsEsc=this.containsEsc,id=this.parseIdent(!1);if(this.options.ecmaVersion>=8&&!containsEsc&&"async"===id.name&&!this.canInsertSemicolon()&&this.eat(types._function))return this.parseFunction(this.startNodeAt(startPos,startLoc),0,!1,!0);if(canBeArrow&&!this.canInsertSemicolon()){if(this.eat(types.arrow))return this.parseArrowExpression(this.startNodeAt(startPos,startLoc),[id],!1);if(this.options.ecmaVersion>=8&&"async"===id.name&&this.type===types.name&&!containsEsc)return id=this.parseIdent(!1),(this.canInsertSemicolon()||!this.eat(types.arrow))&&this.unexpected(),this.parseArrowExpression(this.startNodeAt(startPos,startLoc),[id],!0)}return id;case types.regexp:var value=this.value;return(node=this.parseLiteral(value.value)).regex={pattern:value.pattern,flags:value.flags},node;case types.num:case types.string:return this.parseLiteral(this.value);case types._null:case types._true:case types._false:return(node=this.startNode()).value=this.type===types._null?null:this.type===types._true,node.raw=this.type.keyword,this.next(),this.finishNode(node,"Literal");case types.parenL:var start=this.start,expr=this.parseParenAndDistinguishExpression(canBeArrow);return refDestructuringErrors&&(refDestructuringErrors.parenthesizedAssign<0&&!this.isSimpleAssignTarget(expr)&&(refDestructuringErrors.parenthesizedAssign=start),refDestructuringErrors.parenthesizedBind<0&&(refDestructuringErrors.parenthesizedBind=start)),expr;case types.bracketL:return node=this.startNode(),this.next(),node.elements=this.parseExprList(types.bracketR,!0,!0,refDestructuringErrors),this.finishNode(node,"ArrayExpression");case types.braceL:return this.parseObj(!1,refDestructuringErrors);case types._function:return node=this.startNode(),this.next(),this.parseFunction(node,0);case types._class:return this.parseClass(this.startNode(),!1);case types._new:return this.parseNew();case types.backQuote:return this.parseTemplate();case types._import:return this.options.ecmaVersion>=11?this.parseExprImport():this.unexpected();default:this.unexpected()}},pp$3.parseExprImport=function(){var node=this.startNode();this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword import");var meta=this.parseIdent(!0);switch(this.type){case types.parenL:return this.parseDynamicImport(node);case types.dot:return node.meta=meta,this.parseImportMeta(node);default:this.unexpected()}},pp$3.parseDynamicImport=function(node){if(this.next(),node.source=this.parseMaybeAssign(),!this.eat(types.parenR)){var errorPos=this.start;this.eat(types.comma)&&this.eat(types.parenR)?this.raiseRecoverable(errorPos,"Trailing comma is not allowed in import()"):this.unexpected(errorPos)}return this.finishNode(node,"ImportExpression")},pp$3.parseImportMeta=function(node){this.next();var containsEsc=this.containsEsc;return node.property=this.parseIdent(!0),"meta"!==node.property.name&&this.raiseRecoverable(node.property.start,"The only valid meta property for import is 'import.meta'"),containsEsc&&this.raiseRecoverable(node.start,"'import.meta' must not contain escaped characters"),"module"!==this.options.sourceType&&this.raiseRecoverable(node.start,"Cannot use 'import.meta' outside a module"),this.finishNode(node,"MetaProperty")},pp$3.parseLiteral=function(value){var node=this.startNode();return node.value=value,node.raw=this.input.slice(this.start,this.end),110===node.raw.charCodeAt(node.raw.length-1)&&(node.bigint=node.raw.slice(0,-1).replace(/_/g,"")),this.next(),this.finishNode(node,"Literal")},pp$3.parseParenExpression=function(){this.expect(types.parenL);var val=this.parseExpression();return this.expect(types.parenR),val},pp$3.parseParenAndDistinguishExpression=function(canBeArrow){var val,startPos=this.start,startLoc=this.startLoc,allowTrailingComma=this.options.ecmaVersion>=8;if(this.options.ecmaVersion>=6){this.next();var spreadStart,innerStartPos=this.start,innerStartLoc=this.startLoc,exprList=[],first=!0,lastIsComma=!1,refDestructuringErrors=new DestructuringErrors,oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos;for(this.yieldPos=0,this.awaitPos=0;this.type!==types.parenR;){if(first?first=!1:this.expect(types.comma),allowTrailingComma&&this.afterTrailingComma(types.parenR,!0)){lastIsComma=!0;break}if(this.type===types.ellipsis){spreadStart=this.start,exprList.push(this.parseParenItem(this.parseRestBinding())),this.type===types.comma&&this.raise(this.start,"Comma is not permitted after the rest element");break}exprList.push(this.parseMaybeAssign(!1,refDestructuringErrors,this.parseParenItem))}var innerEndPos=this.start,innerEndLoc=this.startLoc;if(this.expect(types.parenR),canBeArrow&&!this.canInsertSemicolon()&&this.eat(types.arrow))return this.checkPatternErrors(refDestructuringErrors,!1),this.checkYieldAwaitInDefaultParams(),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.parseParenArrowList(startPos,startLoc,exprList);(!exprList.length||lastIsComma)&&this.unexpected(this.lastTokStart),spreadStart&&this.unexpected(spreadStart),this.checkExpressionErrors(refDestructuringErrors,!0),this.yieldPos=oldYieldPos||this.yieldPos,this.awaitPos=oldAwaitPos||this.awaitPos,exprList.length>1?((val=this.startNodeAt(innerStartPos,innerStartLoc)).expressions=exprList,this.finishNodeAt(val,"SequenceExpression",innerEndPos,innerEndLoc)):val=exprList[0]}else val=this.parseParenExpression();if(this.options.preserveParens){var par=this.startNodeAt(startPos,startLoc);return par.expression=val,this.finishNode(par,"ParenthesizedExpression")}return val},pp$3.parseParenItem=function(item){return item},pp$3.parseParenArrowList=function(startPos,startLoc,exprList){return this.parseArrowExpression(this.startNodeAt(startPos,startLoc),exprList)},empty$1=[],pp$3.parseNew=function(){this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword new");var node=this.startNode(),meta=this.parseIdent(!0);if(this.options.ecmaVersion>=6&&this.eat(types.dot)){node.meta=meta;var containsEsc=this.containsEsc;return node.property=this.parseIdent(!0),"target"!==node.property.name&&this.raiseRecoverable(node.property.start,"The only valid meta property for new is 'new.target'"),containsEsc&&this.raiseRecoverable(node.start,"'new.target' must not contain escaped characters"),this.inNonArrowFunction()||this.raiseRecoverable(node.start,"'new.target' can only be used in functions"),this.finishNode(node,"MetaProperty")}var startPos=this.start,startLoc=this.startLoc,isImport=this.type===types._import;return node.callee=this.parseSubscripts(this.parseExprAtom(),startPos,startLoc,!0),isImport&&"ImportExpression"===node.callee.type&&this.raise(startPos,"Cannot use new with import()"),this.eat(types.parenL)?node.arguments=this.parseExprList(types.parenR,this.options.ecmaVersion>=8,!1):node.arguments=empty$1,this.finishNode(node,"NewExpression")},pp$3.parseTemplateElement=function(ref2){var isTagged=ref2.isTagged,elem=this.startNode();return this.type===types.invalidTemplate?(isTagged||this.raiseRecoverable(this.start,"Bad escape sequence in untagged template literal"),elem.value={raw:this.value,cooked:null}):elem.value={raw:this.input.slice(this.start,this.end).replace(/\r\n?/g,"\n"),cooked:this.value},this.next(),elem.tail=this.type===types.backQuote,this.finishNode(elem,"TemplateElement")},pp$3.parseTemplate=function(ref2){void 0===ref2&&(ref2={});var isTagged=ref2.isTagged;void 0===isTagged&&(isTagged=!1);var node=this.startNode();this.next(),node.expressions=[];var curElt=this.parseTemplateElement({isTagged});for(node.quasis=[curElt];!curElt.tail;)this.type===types.eof&&this.raise(this.pos,"Unterminated template literal"),this.expect(types.dollarBraceL),node.expressions.push(this.parseExpression()),this.expect(types.braceR),node.quasis.push(curElt=this.parseTemplateElement({isTagged}));return this.next(),this.finishNode(node,"TemplateLiteral")},pp$3.isAsyncProp=function(prop){return!prop.computed&&"Identifier"===prop.key.type&&"async"===prop.key.name&&(this.type===types.name||this.type===types.num||this.type===types.string||this.type===types.bracketL||this.type.keyword||this.options.ecmaVersion>=9&&this.type===types.star)&&!lineBreak.test(this.input.slice(this.lastTokEnd,this.start))},pp$3.parseObj=function(isPattern,refDestructuringErrors){var node=this.startNode(),first=!0,propHash={};for(node.properties=[],this.next();!this.eat(types.braceR);){if(first)first=!1;else if(this.expect(types.comma),this.options.ecmaVersion>=5&&this.afterTrailingComma(types.braceR))break;var prop=this.parseProperty(isPattern,refDestructuringErrors);isPattern||this.checkPropClash(prop,propHash,refDestructuringErrors),node.properties.push(prop)}return this.finishNode(node,isPattern?"ObjectPattern":"ObjectExpression")},pp$3.parseProperty=function(isPattern,refDestructuringErrors){var isGenerator,isAsync,startPos,startLoc,prop=this.startNode();if(this.options.ecmaVersion>=9&&this.eat(types.ellipsis))return isPattern?(prop.argument=this.parseIdent(!1),this.type===types.comma&&this.raise(this.start,"Comma is not permitted after the rest element"),this.finishNode(prop,"RestElement")):(this.type===types.parenL&&refDestructuringErrors&&(refDestructuringErrors.parenthesizedAssign<0&&(refDestructuringErrors.parenthesizedAssign=this.start),refDestructuringErrors.parenthesizedBind<0&&(refDestructuringErrors.parenthesizedBind=this.start)),prop.argument=this.parseMaybeAssign(!1,refDestructuringErrors),this.type===types.comma&&refDestructuringErrors&&refDestructuringErrors.trailingComma<0&&(refDestructuringErrors.trailingComma=this.start),this.finishNode(prop,"SpreadElement"));this.options.ecmaVersion>=6&&(prop.method=!1,prop.shorthand=!1,(isPattern||refDestructuringErrors)&&(startPos=this.start,startLoc=this.startLoc),isPattern||(isGenerator=this.eat(types.star)));var containsEsc=this.containsEsc;return this.parsePropertyName(prop),!isPattern&&!containsEsc&&this.options.ecmaVersion>=8&&!isGenerator&&this.isAsyncProp(prop)?(isAsync=!0,isGenerator=this.options.ecmaVersion>=9&&this.eat(types.star),this.parsePropertyName(prop,refDestructuringErrors)):isAsync=!1,this.parsePropertyValue(prop,isPattern,isGenerator,isAsync,startPos,startLoc,refDestructuringErrors,containsEsc),this.finishNode(prop,"Property")},pp$3.parsePropertyValue=function(prop,isPattern,isGenerator,isAsync,startPos,startLoc,refDestructuringErrors,containsEsc){if((isGenerator||isAsync)&&this.type===types.colon&&this.unexpected(),this.eat(types.colon))prop.value=isPattern?this.parseMaybeDefault(this.start,this.startLoc):this.parseMaybeAssign(!1,refDestructuringErrors),prop.kind="init";else if(this.options.ecmaVersion>=6&&this.type===types.parenL)isPattern&&this.unexpected(),prop.kind="init",prop.method=!0,prop.value=this.parseMethod(isGenerator,isAsync);else if(isPattern||containsEsc||!(this.options.ecmaVersion>=5)||prop.computed||"Identifier"!==prop.key.type||"get"!==prop.key.name&&"set"!==prop.key.name||this.type===types.comma||this.type===types.braceR||this.type===types.eq)this.options.ecmaVersion>=6&&!prop.computed&&"Identifier"===prop.key.type?((isGenerator||isAsync)&&this.unexpected(),this.checkUnreserved(prop.key),"await"===prop.key.name&&!this.awaitIdentPos&&(this.awaitIdentPos=startPos),prop.kind="init",isPattern?prop.value=this.parseMaybeDefault(startPos,startLoc,prop.key):this.type===types.eq&&refDestructuringErrors?(refDestructuringErrors.shorthandAssign<0&&(refDestructuringErrors.shorthandAssign=this.start),prop.value=this.parseMaybeDefault(startPos,startLoc,prop.key)):prop.value=prop.key,prop.shorthand=!0):this.unexpected();else{(isGenerator||isAsync)&&this.unexpected(),prop.kind=prop.key.name,this.parsePropertyName(prop),prop.value=this.parseMethod(!1);var paramCount="get"===prop.kind?0:1;if(prop.value.params.length!==paramCount){var start=prop.value.start;"get"===prop.kind?this.raiseRecoverable(start,"getter should have no params"):this.raiseRecoverable(start,"setter should have exactly one param")}else"set"===prop.kind&&"RestElement"===prop.value.params[0].type&&this.raiseRecoverable(prop.value.params[0].start,"Setter cannot use rest params")}},pp$3.parsePropertyName=function(prop){if(this.options.ecmaVersion>=6){if(this.eat(types.bracketL))return prop.computed=!0,prop.key=this.parseMaybeAssign(),this.expect(types.bracketR),prop.key;prop.computed=!1}return prop.key=this.type===types.num||this.type===types.string?this.parseExprAtom():this.parseIdent("never"!==this.options.allowReserved)},pp$3.initFunction=function(node){node.id=null,this.options.ecmaVersion>=6&&(node.generator=node.expression=!1),this.options.ecmaVersion>=8&&(node.async=!1)},pp$3.parseMethod=function(isGenerator,isAsync,allowDirectSuper){var node=this.startNode(),oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;return this.initFunction(node),this.options.ecmaVersion>=6&&(node.generator=isGenerator),this.options.ecmaVersion>=8&&(node.async=!!isAsync),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(64|functionFlags(isAsync,node.generator)|(allowDirectSuper?128:0)),this.expect(types.parenL),node.params=this.parseBindingList(types.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams(),this.parseFunctionBody(node,!1,!0),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.awaitIdentPos=oldAwaitIdentPos,this.finishNode(node,"FunctionExpression")},pp$3.parseArrowExpression=function(node,params,isAsync){var oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;return this.enterScope(16|functionFlags(isAsync,!1)),this.initFunction(node),this.options.ecmaVersion>=8&&(node.async=!!isAsync),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,node.params=this.toAssignableList(params,!0),this.parseFunctionBody(node,!0,!1),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.awaitIdentPos=oldAwaitIdentPos,this.finishNode(node,"ArrowFunctionExpression")},pp$3.parseFunctionBody=function(node,isArrowFunction,isMethod){var isExpression=isArrowFunction&&this.type!==types.braceL,oldStrict=this.strict,useStrict=!1;if(isExpression)node.body=this.parseMaybeAssign(),node.expression=!0,this.checkParams(node,!1);else{var nonSimple=this.options.ecmaVersion>=7&&!this.isSimpleParamList(node.params);(!oldStrict||nonSimple)&&((useStrict=this.strictDirective(this.end))&&nonSimple&&this.raiseRecoverable(node.start,"Illegal 'use strict' directive in function with non-simple parameter list"));var oldLabels=this.labels;this.labels=[],useStrict&&(this.strict=!0),this.checkParams(node,!oldStrict&&!useStrict&&!isArrowFunction&&!isMethod&&this.isSimpleParamList(node.params)),this.strict&&node.id&&this.checkLVal(node.id,5),node.body=this.parseBlock(!1,void 0,useStrict&&!oldStrict),node.expression=!1,this.adaptDirectivePrologue(node.body.body),this.labels=oldLabels}this.exitScope()},pp$3.isSimpleParamList=function(params){for(var i=0,list=params;i<list.length;i+=1){if("Identifier"!==list[i].type)return!1}return!0},pp$3.checkParams=function(node,allowDuplicates){for(var nameHash={},i=0,list=node.params;i<list.length;i+=1){var param=list[i];this.checkLVal(param,1,allowDuplicates?null:nameHash)}},pp$3.parseExprList=function(close,allowTrailingComma,allowEmpty,refDestructuringErrors){for(var elts=[],first=!0;!this.eat(close);){if(first)first=!1;else if(this.expect(types.comma),allowTrailingComma&&this.afterTrailingComma(close))break;var elt=void 0;allowEmpty&&this.type===types.comma?elt=null:this.type===types.ellipsis?(elt=this.parseSpread(refDestructuringErrors),refDestructuringErrors&&this.type===types.comma&&refDestructuringErrors.trailingComma<0&&(refDestructuringErrors.trailingComma=this.start)):elt=this.parseMaybeAssign(!1,refDestructuringErrors),elts.push(elt)}return elts},pp$3.checkUnreserved=function(ref2){var start=ref2.start,end=ref2.end,name=ref2.name;(this.inGenerator&&"yield"===name&&this.raiseRecoverable(start,"Cannot use 'yield' as identifier inside a generator"),this.inAsync&&"await"===name&&this.raiseRecoverable(start,"Cannot use 'await' as identifier inside an async function"),this.keywords.test(name)&&this.raise(start,"Unexpected keyword '"+name+"'"),this.options.ecmaVersion<6&&-1!==this.input.slice(start,end).indexOf("\\"))||(this.strict?this.reservedWordsStrict:this.reservedWords).test(name)&&(!this.inAsync&&"await"===name&&this.raiseRecoverable(start,"Cannot use keyword 'await' outside an async function"),this.raiseRecoverable(start,"The keyword '"+name+"' is reserved"))},pp$3.parseIdent=function(liberal,isBinding){var node=this.startNode();return this.type===types.name?node.name=this.value:this.type.keyword?(node.name=this.type.keyword,("class"===node.name||"function"===node.name)&&(this.lastTokEnd!==this.lastTokStart+1||46!==this.input.charCodeAt(this.lastTokStart))&&this.context.pop()):this.unexpected(),this.next(!!liberal),this.finishNode(node,"Identifier"),liberal||(this.checkUnreserved(node),"await"===node.name&&!this.awaitIdentPos&&(this.awaitIdentPos=node.start)),node},pp$3.parseYield=function(noIn){this.yieldPos||(this.yieldPos=this.start);var node=this.startNode();return this.next(),this.type===types.semi||this.canInsertSemicolon()||this.type!==types.star&&!this.type.startsExpr?(node.delegate=!1,node.argument=null):(node.delegate=this.eat(types.star),node.argument=this.parseMaybeAssign(noIn)),this.finishNode(node,"YieldExpression")},pp$3.parseAwait=function(){this.awaitPos||(this.awaitPos=this.start);var node=this.startNode();return this.next(),node.argument=this.parseMaybeUnary(null,!1),this.finishNode(node,"AwaitExpression")},(pp$4=Parser.prototype).raise=function(pos,message){var loc=getLineInfo(this.input,pos);message+=" ("+loc.line+":"+loc.column+")";var err=new SyntaxError(message);throw err.pos=pos,err.loc=loc,err.raisedAt=this.pos,err},pp$4.raiseRecoverable=pp$4.raise,pp$4.curPosition=function(){if(this.options.locations)return new Position(this.curLine,this.pos-this.lineStart)},pp$5=Parser.prototype,Scope=function(flags){this.flags=flags,this.var=[],this.lexical=[],this.functions=[]},pp$5.enterScope=function(flags){this.scopeStack.push(new Scope(flags))},pp$5.exitScope=function(){this.scopeStack.pop()},pp$5.treatFunctionsAsVarInScope=function(scope){return scope.flags&SCOPE_FUNCTION||!this.inModule&&1&scope.flags},pp$5.declareName=function(name,bindingType,pos){var redeclared=!1;if(2===bindingType){var scope=this.currentScope();redeclared=scope.lexical.indexOf(name)>-1||scope.functions.indexOf(name)>-1||scope.var.indexOf(name)>-1,scope.lexical.push(name),this.inModule&&1&scope.flags&&delete this.undefinedExports[name]}else if(4===bindingType){this.currentScope().lexical.push(name)}else if(3===bindingType){var scope$2=this.currentScope();redeclared=this.treatFunctionsAsVar?scope$2.lexical.indexOf(name)>-1:scope$2.lexical.indexOf(name)>-1||scope$2.var.indexOf(name)>-1,scope$2.functions.push(name)}else for(var i=this.scopeStack.length-1;i>=0;--i){var scope$3=this.scopeStack[i];if(scope$3.lexical.indexOf(name)>-1&&!(32&scope$3.flags&&scope$3.lexical[0]===name)||!this.treatFunctionsAsVarInScope(scope$3)&&scope$3.functions.indexOf(name)>-1){redeclared=!0;break}if(scope$3.var.push(name),this.inModule&&1&scope$3.flags&&delete this.undefinedExports[name],scope$3.flags&SCOPE_VAR)break}redeclared&&this.raiseRecoverable(pos,"Identifier '"+name+"' has already been declared")},pp$5.checkLocalExport=function(id){-1===this.scopeStack[0].lexical.indexOf(id.name)&&-1===this.scopeStack[0].var.indexOf(id.name)&&(this.undefinedExports[id.name]=id)},pp$5.currentScope=function(){return this.scopeStack[this.scopeStack.length-1]},pp$5.currentVarScope=function(){for(var i=this.scopeStack.length-1;;i--){var scope=this.scopeStack[i];if(scope.flags&SCOPE_VAR)return scope}},pp$5.currentThisScope=function(){for(var i=this.scopeStack.length-1;;i--){var scope=this.scopeStack[i];if(scope.flags&SCOPE_VAR&&!(16&scope.flags))return scope}},Node=function(parser,pos,loc){this.type="",this.start=pos,this.end=0,parser.options.locations&&(this.loc=new SourceLocation(parser,loc)),parser.options.directSourceFile&&(this.sourceFile=parser.options.directSourceFile),parser.options.ranges&&(this.range=[pos,0])},(pp$6=Parser.prototype).startNode=function(){return new Node(this,this.start,this.startLoc)},pp$6.startNodeAt=function(pos,loc){return new Node(this,pos,loc)},pp$6.finishNode=function(node,type){return finishNodeAt.call(this,node,type,this.lastTokEnd,this.lastTokEndLoc)},pp$6.finishNodeAt=function(node,type,pos,loc){return finishNodeAt.call(this,node,type,pos,loc)},types$1={b_stat:new(TokContext=function(token,isExpr,preserveSpace,override,generator){this.token=token,this.isExpr=!!isExpr,this.preserveSpace=!!preserveSpace,this.override=override,this.generator=!!generator})("{",!1),b_expr:new TokContext("{",!0),b_tmpl:new TokContext("${",!1),p_stat:new TokContext("(",!1),p_expr:new TokContext("(",!0),q_tmpl:new TokContext("`",!0,!0,(function(p){return p.tryReadTemplateToken()})),f_stat:new TokContext("function",!1),f_expr:new TokContext("function",!0),f_expr_gen:new TokContext("function",!0,!1,null,!0),f_gen:new TokContext("function",!1,!1,null,!0)},(pp$7=Parser.prototype).initialContext=function(){return[types$1.b_stat]},pp$7.braceIsBlock=function(prevType){var parent=this.curContext();return parent===types$1.f_expr||parent===types$1.f_stat||(prevType!==types.colon||parent!==types$1.b_stat&&parent!==types$1.b_expr?prevType===types._return||prevType===types.name&&this.exprAllowed?lineBreak.test(this.input.slice(this.lastTokEnd,this.start)):prevType===types._else||prevType===types.semi||prevType===types.eof||prevType===types.parenR||prevType===types.arrow||(prevType===types.braceL?parent===types$1.b_stat:prevType!==types._var&&prevType!==types._const&&prevType!==types.name&&!this.exprAllowed):!parent.isExpr)},pp$7.inGeneratorContext=function(){for(var i=this.context.length-1;i>=1;i--){var context=this.context[i];if("function"===context.token)return context.generator}return!1},pp$7.updateContext=function(prevType){var update,type=this.type;type.keyword&&prevType===types.dot?this.exprAllowed=!1:(update=type.updateContext)?update.call(this,prevType):this.exprAllowed=type.beforeExpr},types.parenR.updateContext=types.braceR.updateContext=function(){if(1!==this.context.length){var out=this.context.pop();out===types$1.b_stat&&"function"===this.curContext().token&&(out=this.context.pop()),this.exprAllowed=!out.isExpr}else this.exprAllowed=!0},types.braceL.updateContext=function(prevType){this.context.push(this.braceIsBlock(prevType)?types$1.b_stat:types$1.b_expr),this.exprAllowed=!0},types.dollarBraceL.updateContext=function(){this.context.push(types$1.b_tmpl),this.exprAllowed=!0},types.parenL.updateContext=function(prevType){var statementParens=prevType===types._if||prevType===types._for||prevType===types._with||prevType===types._while;this.context.push(statementParens?types$1.p_stat:types$1.p_expr),this.exprAllowed=!0},types.incDec.updateContext=function(){},types._function.updateContext=types._class.updateContext=function(prevType){!prevType.beforeExpr||prevType===types.semi||prevType===types._else||prevType===types._return&&lineBreak.test(this.input.slice(this.lastTokEnd,this.start))||(prevType===types.colon||prevType===types.braceL)&&this.curContext()===types$1.b_stat?this.context.push(types$1.f_stat):this.context.push(types$1.f_expr),this.exprAllowed=!1},types.backQuote.updateContext=function(){this.curContext()===types$1.q_tmpl?this.context.pop():this.context.push(types$1.q_tmpl),this.exprAllowed=!1},types.star.updateContext=function(prevType){if(prevType===types._function){var index=this.context.length-1;this.context[index]===types$1.f_expr?this.context[index]=types$1.f_expr_gen:this.context[index]=types$1.f_gen}this.exprAllowed=!0},types.name.updateContext=function(prevType){var allowed=!1;this.options.ecmaVersion>=6&&prevType!==types.dot&&("of"===this.value&&!this.exprAllowed||"yield"===this.value&&this.inGeneratorContext())&&(allowed=!0),this.exprAllowed=allowed},unicodeBinaryProperties={9:ecma9BinaryProperties="ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS",10:ecma10BinaryProperties=ecma9BinaryProperties+" Extended_Pictographic",11:ecma10BinaryProperties},unicodeGeneralCategoryValues="Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu",unicodeScriptValues={9:ecma9ScriptValues="Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb",10:ecma10ScriptValues=ecma9ScriptValues+" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd",11:ecma10ScriptValues+" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho"},data={},buildUnicodeData(9),buildUnicodeData(10),buildUnicodeData(11),pp$8=Parser.prototype,(RegExpValidationState=function(parser){this.parser=parser,this.validFlags="gim"+(parser.options.ecmaVersion>=6?"uy":"")+(parser.options.ecmaVersion>=9?"s":""),this.unicodeProperties=data[parser.options.ecmaVersion>=11?11:parser.options.ecmaVersion],this.source="",this.flags="",this.start=0,this.switchU=!1,this.switchN=!1,this.pos=0,this.lastIntValue=0,this.lastStringValue="",this.lastAssertionIsQuantifiable=!1,this.numCapturingParens=0,this.maxBackReference=0,this.groupNames=[],this.backReferenceNames=[]}).prototype.reset=function(start,pattern,flags){var unicode=-1!==flags.indexOf("u");this.start=0|start,this.source=pattern+"",this.flags=flags,this.switchU=unicode&&this.parser.options.ecmaVersion>=6,this.switchN=unicode&&this.parser.options.ecmaVersion>=9},RegExpValidationState.prototype.raise=function(message){this.parser.raiseRecoverable(this.start,"Invalid regular expression: /"+this.source+"/: "+message)},RegExpValidationState.prototype.at=function(i,forceU){void 0===forceU&&(forceU=!1);var s=this.source,l=s.length;if(i>=l)return-1;var c=s.charCodeAt(i);if(!forceU&&!this.switchU||c<=55295||c>=57344||i+1>=l)return c;var next=s.charCodeAt(i+1);return next>=56320&&next<=57343?(c<<10)+next-56613888:c},RegExpValidationState.prototype.nextIndex=function(i,forceU){void 0===forceU&&(forceU=!1);var s=this.source,l=s.length;if(i>=l)return l;var next,c=s.charCodeAt(i);return!forceU&&!this.switchU||c<=55295||c>=57344||i+1>=l||(next=s.charCodeAt(i+1))<56320||next>57343?i+1:i+2},RegExpValidationState.prototype.current=function(forceU){return void 0===forceU&&(forceU=!1),this.at(this.pos,forceU)},RegExpValidationState.prototype.lookahead=function(forceU){return void 0===forceU&&(forceU=!1),this.at(this.nextIndex(this.pos,forceU),forceU)},RegExpValidationState.prototype.advance=function(forceU){void 0===forceU&&(forceU=!1),this.pos=this.nextIndex(this.pos,forceU)},RegExpValidationState.prototype.eat=function(ch,forceU){return void 0===forceU&&(forceU=!1),this.current(forceU)===ch&&(this.advance(forceU),!0)},pp$8.validateRegExpFlags=function(state){for(var validFlags=state.validFlags,flags=state.flags,i=0;i<flags.length;i++){var flag=flags.charAt(i);-1===validFlags.indexOf(flag)&&this.raise(state.start,"Invalid regular expression flag"),flags.indexOf(flag,i+1)>-1&&this.raise(state.start,"Duplicate regular expression flag")}},pp$8.validateRegExpPattern=function(state){this.regexp_pattern(state),!state.switchN&&this.options.ecmaVersion>=9&&state.groupNames.length>0&&(state.switchN=!0,this.regexp_pattern(state))},pp$8.regexp_pattern=function(state){state.pos=0,state.lastIntValue=0,state.lastStringValue="",state.lastAssertionIsQuantifiable=!1,state.numCapturingParens=0,state.maxBackReference=0,state.groupNames.length=0,state.backReferenceNames.length=0,this.regexp_disjunction(state),state.pos!==state.source.length&&(state.eat(41)&&state.raise("Unmatched ')'"),(state.eat(93)||state.eat(125))&&state.raise("Lone quantifier brackets")),state.maxBackReference>state.numCapturingParens&&state.raise("Invalid escape");for(var i=0,list=state.backReferenceNames;i<list.length;i+=1){var name=list[i];-1===state.groupNames.indexOf(name)&&state.raise("Invalid named capture referenced")}},pp$8.regexp_disjunction=function(state){for(this.regexp_alternative(state);state.eat(124);)this.regexp_alternative(state);this.regexp_eatQuantifier(state,!0)&&state.raise("Nothing to repeat"),state.eat(123)&&state.raise("Lone quantifier brackets")},pp$8.regexp_alternative=function(state){for(;state.pos<state.source.length&&this.regexp_eatTerm(state););},pp$8.regexp_eatTerm=function(state){return this.regexp_eatAssertion(state)?(state.lastAssertionIsQuantifiable&&this.regexp_eatQuantifier(state)&&state.switchU&&state.raise("Invalid quantifier"),!0):!!(state.switchU?this.regexp_eatAtom(state):this.regexp_eatExtendedAtom(state))&&(this.regexp_eatQuantifier(state),!0)},pp$8.regexp_eatAssertion=function(state){var start=state.pos;if(state.lastAssertionIsQuantifiable=!1,state.eat(94)||state.eat(36))return!0;if(state.eat(92)){if(state.eat(66)||state.eat(98))return!0;state.pos=start}if(state.eat(40)&&state.eat(63)){var lookbehind=!1;if(this.options.ecmaVersion>=9&&(lookbehind=state.eat(60)),state.eat(61)||state.eat(33))return this.regexp_disjunction(state),state.eat(41)||state.raise("Unterminated group"),state.lastAssertionIsQuantifiable=!lookbehind,!0}return state.pos=start,!1},pp$8.regexp_eatQuantifier=function(state,noError){return void 0===noError&&(noError=!1),!!this.regexp_eatQuantifierPrefix(state,noError)&&(state.eat(63),!0)},pp$8.regexp_eatQuantifierPrefix=function(state,noError){return state.eat(42)||state.eat(43)||state.eat(63)||this.regexp_eatBracedQuantifier(state,noError)},pp$8.regexp_eatBracedQuantifier=function(state,noError){var start=state.pos;if(state.eat(123)){var min=0,max=-1;if(this.regexp_eatDecimalDigits(state)&&(min=state.lastIntValue,state.eat(44)&&this.regexp_eatDecimalDigits(state)&&(max=state.lastIntValue),state.eat(125)))return-1!==max&&max<min&&!noError&&state.raise("numbers out of order in {} quantifier"),!0;state.switchU&&!noError&&state.raise("Incomplete quantifier"),state.pos=start}return!1},pp$8.regexp_eatAtom=function(state){return this.regexp_eatPatternCharacters(state)||state.eat(46)||this.regexp_eatReverseSolidusAtomEscape(state)||this.regexp_eatCharacterClass(state)||this.regexp_eatUncapturingGroup(state)||this.regexp_eatCapturingGroup(state)},pp$8.regexp_eatReverseSolidusAtomEscape=function(state){var start=state.pos;if(state.eat(92)){if(this.regexp_eatAtomEscape(state))return!0;state.pos=start}return!1},pp$8.regexp_eatUncapturingGroup=function(state){var start=state.pos;if(state.eat(40)){if(state.eat(63)&&state.eat(58)){if(this.regexp_disjunction(state),state.eat(41))return!0;state.raise("Unterminated group")}state.pos=start}return!1},pp$8.regexp_eatCapturingGroup=function(state){if(state.eat(40)){if(this.options.ecmaVersion>=9?this.regexp_groupSpecifier(state):63===state.current()&&state.raise("Invalid group"),this.regexp_disjunction(state),state.eat(41))return state.numCapturingParens+=1,!0;state.raise("Unterminated group")}return!1},pp$8.regexp_eatExtendedAtom=function(state){return state.eat(46)||this.regexp_eatReverseSolidusAtomEscape(state)||this.regexp_eatCharacterClass(state)||this.regexp_eatUncapturingGroup(state)||this.regexp_eatCapturingGroup(state)||this.regexp_eatInvalidBracedQuantifier(state)||this.regexp_eatExtendedPatternCharacter(state)},pp$8.regexp_eatInvalidBracedQuantifier=function(state){return this.regexp_eatBracedQuantifier(state,!0)&&state.raise("Nothing to repeat"),!1},pp$8.regexp_eatSyntaxCharacter=function(state){var ch=state.current();return!!isSyntaxCharacter(ch)&&(state.lastIntValue=ch,state.advance(),!0)},pp$8.regexp_eatPatternCharacters=function(state){for(var start=state.pos,ch=0;-1!==(ch=state.current())&&!isSyntaxCharacter(ch);)state.advance();return state.pos!==start},pp$8.regexp_eatExtendedPatternCharacter=function(state){var ch=state.current();return!(-1===ch||36===ch||ch>=40&&ch<=43||46===ch||63===ch||91===ch||94===ch||124===ch)&&(state.advance(),!0)},pp$8.regexp_groupSpecifier=function(state){if(state.eat(63)){if(this.regexp_eatGroupName(state))return-1!==state.groupNames.indexOf(state.lastStringValue)&&state.raise("Duplicate capture group name"),void state.groupNames.push(state.lastStringValue);state.raise("Invalid group")}},pp$8.regexp_eatGroupName=function(state){if(state.lastStringValue="",state.eat(60)){if(this.regexp_eatRegExpIdentifierName(state)&&state.eat(62))return!0;state.raise("Invalid capture group name")}return!1},pp$8.regexp_eatRegExpIdentifierName=function(state){if(state.lastStringValue="",this.regexp_eatRegExpIdentifierStart(state)){for(state.lastStringValue+=codePointToString(state.lastIntValue);this.regexp_eatRegExpIdentifierPart(state);)state.lastStringValue+=codePointToString(state.lastIntValue);return!0}return!1},pp$8.regexp_eatRegExpIdentifierStart=function(state){var start=state.pos,forceU=this.options.ecmaVersion>=11,ch=state.current(forceU);return state.advance(forceU),92===ch&&this.regexp_eatRegExpUnicodeEscapeSequence(state,forceU)&&(ch=state.lastIntValue),function isRegExpIdentifierStart(ch){return isIdentifierStart(ch,!0)||36===ch||95===ch}(ch)?(state.lastIntValue=ch,!0):(state.pos=start,!1)},pp$8.regexp_eatRegExpIdentifierPart=function(state){var start=state.pos,forceU=this.options.ecmaVersion>=11,ch=state.current(forceU);return state.advance(forceU),92===ch&&this.regexp_eatRegExpUnicodeEscapeSequence(state,forceU)&&(ch=state.lastIntValue),function isRegExpIdentifierPart(ch){return isIdentifierChar(ch,!0)||36===ch||95===ch||8204===ch||8205===ch}(ch)?(state.lastIntValue=ch,!0):(state.pos=start,!1)},pp$8.regexp_eatAtomEscape=function(state){return!!(this.regexp_eatBackReference(state)||this.regexp_eatCharacterClassEscape(state)||this.regexp_eatCharacterEscape(state)||state.switchN&&this.regexp_eatKGroupName(state))||(state.switchU&&(99===state.current()&&state.raise("Invalid unicode escape"),state.raise("Invalid escape")),!1)},pp$8.regexp_eatBackReference=function(state){var start=state.pos;if(this.regexp_eatDecimalEscape(state)){var n=state.lastIntValue;if(state.switchU)return n>state.maxBackReference&&(state.maxBackReference=n),!0;if(n<=state.numCapturingParens)return!0;state.pos=start}return!1},pp$8.regexp_eatKGroupName=function(state){if(state.eat(107)){if(this.regexp_eatGroupName(state))return state.backReferenceNames.push(state.lastStringValue),!0;state.raise("Invalid named reference")}return!1},pp$8.regexp_eatCharacterEscape=function(state){return this.regexp_eatControlEscape(state)||this.regexp_eatCControlLetter(state)||this.regexp_eatZero(state)||this.regexp_eatHexEscapeSequence(state)||this.regexp_eatRegExpUnicodeEscapeSequence(state,!1)||!state.switchU&&this.regexp_eatLegacyOctalEscapeSequence(state)||this.regexp_eatIdentityEscape(state)},pp$8.regexp_eatCControlLetter=function(state){var start=state.pos;if(state.eat(99)){if(this.regexp_eatControlLetter(state))return!0;state.pos=start}return!1},pp$8.regexp_eatZero=function(state){return 48===state.current()&&!isDecimalDigit(state.lookahead())&&(state.lastIntValue=0,state.advance(),!0)},pp$8.regexp_eatControlEscape=function(state){var ch=state.current();return 116===ch?(state.lastIntValue=9,state.advance(),!0):110===ch?(state.lastIntValue=10,state.advance(),!0):118===ch?(state.lastIntValue=11,state.advance(),!0):102===ch?(state.lastIntValue=12,state.advance(),!0):114===ch&&(state.lastIntValue=13,state.advance(),!0)},pp$8.regexp_eatControlLetter=function(state){var ch=state.current();return!!isControlLetter(ch)&&(state.lastIntValue=ch%32,state.advance(),!0)},pp$8.regexp_eatRegExpUnicodeEscapeSequence=function(state,forceU){void 0===forceU&&(forceU=!1);var start=state.pos,switchU=forceU||state.switchU;if(state.eat(117)){if(this.regexp_eatFixedHexDigits(state,4)){var lead=state.lastIntValue;if(switchU&&lead>=55296&&lead<=56319){var leadSurrogateEnd=state.pos;if(state.eat(92)&&state.eat(117)&&this.regexp_eatFixedHexDigits(state,4)){var trail=state.lastIntValue;if(trail>=56320&&trail<=57343)return state.lastIntValue=1024*(lead-55296)+(trail-56320)+65536,!0}state.pos=leadSurrogateEnd,state.lastIntValue=lead}return!0}if(switchU&&state.eat(123)&&this.regexp_eatHexDigits(state)&&state.eat(125)&&function isValidUnicode(ch){return ch>=0&&ch<=1114111}(state.lastIntValue))return!0;switchU&&state.raise("Invalid unicode escape"),state.pos=start}return!1},pp$8.regexp_eatIdentityEscape=function(state){if(state.switchU)return!!this.regexp_eatSyntaxCharacter(state)||!!state.eat(47)&&(state.lastIntValue=47,!0);var ch=state.current();return!(99===ch||state.switchN&&107===ch)&&(state.lastIntValue=ch,state.advance(),!0)},pp$8.regexp_eatDecimalEscape=function(state){state.lastIntValue=0;var ch=state.current();if(ch>=49&&ch<=57){do{state.lastIntValue=10*state.lastIntValue+(ch-48),state.advance()}while((ch=state.current())>=48&&ch<=57);return!0}return!1},pp$8.regexp_eatCharacterClassEscape=function(state){var ch=state.current();if(function isCharacterClassEscape(ch){return 100===ch||68===ch||115===ch||83===ch||119===ch||87===ch}(ch))return state.lastIntValue=-1,state.advance(),!0;if(state.switchU&&this.options.ecmaVersion>=9&&(80===ch||112===ch)){if(state.lastIntValue=-1,state.advance(),state.eat(123)&&this.regexp_eatUnicodePropertyValueExpression(state)&&state.eat(125))return!0;state.raise("Invalid property name")}return!1},pp$8.regexp_eatUnicodePropertyValueExpression=function(state){var start=state.pos;if(this.regexp_eatUnicodePropertyName(state)&&state.eat(61)){var name=state.lastStringValue;if(this.regexp_eatUnicodePropertyValue(state)){var value=state.lastStringValue;return this.regexp_validateUnicodePropertyNameAndValue(state,name,value),!0}}if(state.pos=start,this.regexp_eatLoneUnicodePropertyNameOrValue(state)){var nameOrValue=state.lastStringValue;return this.regexp_validateUnicodePropertyNameOrValue(state,nameOrValue),!0}return!1},pp$8.regexp_validateUnicodePropertyNameAndValue=function(state,name,value){has(state.unicodeProperties.nonBinary,name)||state.raise("Invalid property name"),state.unicodeProperties.nonBinary[name].test(value)||state.raise("Invalid property value")},pp$8.regexp_validateUnicodePropertyNameOrValue=function(state,nameOrValue){state.unicodeProperties.binary.test(nameOrValue)||state.raise("Invalid property name")},pp$8.regexp_eatUnicodePropertyName=function(state){var ch=0;for(state.lastStringValue="";isUnicodePropertyNameCharacter(ch=state.current());)state.lastStringValue+=codePointToString(ch),state.advance();return""!==state.lastStringValue},pp$8.regexp_eatUnicodePropertyValue=function(state){var ch=0;for(state.lastStringValue="";isUnicodePropertyValueCharacter(ch=state.current());)state.lastStringValue+=codePointToString(ch),state.advance();return""!==state.lastStringValue},pp$8.regexp_eatLoneUnicodePropertyNameOrValue=function(state){return this.regexp_eatUnicodePropertyValue(state)},pp$8.regexp_eatCharacterClass=function(state){if(state.eat(91)){if(state.eat(94),this.regexp_classRanges(state),state.eat(93))return!0;state.raise("Unterminated character class")}return!1},pp$8.regexp_classRanges=function(state){for(;this.regexp_eatClassAtom(state);){var left=state.lastIntValue;if(state.eat(45)&&this.regexp_eatClassAtom(state)){var right=state.lastIntValue;state.switchU&&(-1===left||-1===right)&&state.raise("Invalid character class"),-1!==left&&-1!==right&&left>right&&state.raise("Range out of order in character class")}}},pp$8.regexp_eatClassAtom=function(state){var start=state.pos;if(state.eat(92)){if(this.regexp_eatClassEscape(state))return!0;if(state.switchU){var ch$1=state.current();(99===ch$1||isOctalDigit(ch$1))&&state.raise("Invalid class escape"),state.raise("Invalid escape")}state.pos=start}var ch=state.current();return 93!==ch&&(state.lastIntValue=ch,state.advance(),!0)},pp$8.regexp_eatClassEscape=function(state){var start=state.pos;if(state.eat(98))return state.lastIntValue=8,!0;if(state.switchU&&state.eat(45))return state.lastIntValue=45,!0;if(!state.switchU&&state.eat(99)){if(this.regexp_eatClassControlLetter(state))return!0;state.pos=start}return this.regexp_eatCharacterClassEscape(state)||this.regexp_eatCharacterEscape(state)},pp$8.regexp_eatClassControlLetter=function(state){var ch=state.current();return!(!isDecimalDigit(ch)&&95!==ch)&&(state.lastIntValue=ch%32,state.advance(),!0)},pp$8.regexp_eatHexEscapeSequence=function(state){var start=state.pos;if(state.eat(120)){if(this.regexp_eatFixedHexDigits(state,2))return!0;state.switchU&&state.raise("Invalid escape"),state.pos=start}return!1},pp$8.regexp_eatDecimalDigits=function(state){var start=state.pos,ch=0;for(state.lastIntValue=0;isDecimalDigit(ch=state.current());)state.lastIntValue=10*state.lastIntValue+(ch-48),state.advance();return state.pos!==start},pp$8.regexp_eatHexDigits=function(state){var start=state.pos,ch=0;for(state.lastIntValue=0;isHexDigit(ch=state.current());)state.lastIntValue=16*state.lastIntValue+hexToInt(ch),state.advance();return state.pos!==start},pp$8.regexp_eatLegacyOctalEscapeSequence=function(state){if(this.regexp_eatOctalDigit(state)){var n1=state.lastIntValue;if(this.regexp_eatOctalDigit(state)){var n2=state.lastIntValue;n1<=3&&this.regexp_eatOctalDigit(state)?state.lastIntValue=64*n1+8*n2+state.lastIntValue:state.lastIntValue=8*n1+n2}else state.lastIntValue=n1;return!0}return!1},pp$8.regexp_eatOctalDigit=function(state){var ch=state.current();return isOctalDigit(ch)?(state.lastIntValue=ch-48,state.advance(),!0):(state.lastIntValue=0,!1)},pp$8.regexp_eatFixedHexDigits=function(state,length){var start=state.pos;state.lastIntValue=0;for(var i=0;i<length;++i){var ch=state.current();if(!isHexDigit(ch))return state.pos=start,!1;state.lastIntValue=16*state.lastIntValue+hexToInt(ch),state.advance()}return!0},Token=function(p){this.type=p.type,this.value=p.value,this.start=p.start,this.end=p.end,p.options.locations&&(this.loc=new SourceLocation(p,p.startLoc,p.endLoc)),p.options.ranges&&(this.range=[p.start,p.end])},(pp$9=Parser.prototype).next=function(ignoreEscapeSequenceInKeyword){!ignoreEscapeSequenceInKeyword&&this.type.keyword&&this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword "+this.type.keyword),this.options.onToken&&this.options.onToken(new Token(this)),this.lastTokEnd=this.end,this.lastTokStart=this.start,this.lastTokEndLoc=this.endLoc,this.lastTokStartLoc=this.startLoc,this.nextToken()},pp$9.getToken=function(){return this.next(),new Token(this)},typeof Symbol<"u"&&(pp$9[Symbol.iterator]=function(){var this$1$1=this;return{next:function(){var token=this$1$1.getToken();return{done:token.type===types.eof,value:token}}}}),pp$9.curContext=function(){return this.context[this.context.length-1]},pp$9.nextToken=function(){var curContext=this.curContext();return(!curContext||!curContext.preserveSpace)&&this.skipSpace(),this.start=this.pos,this.options.locations&&(this.startLoc=this.curPosition()),this.pos>=this.input.length?this.finishToken(types.eof):curContext.override?curContext.override(this):void this.readToken(this.fullCharCodeAtPos())},pp$9.readToken=function(code){return isIdentifierStart(code,this.options.ecmaVersion>=6)||92===code?this.readWord():this.getTokenFromCode(code)},pp$9.fullCharCodeAtPos=function(){var code=this.input.charCodeAt(this.pos);return code<=55295||code>=57344?code:(code<<10)+this.input.charCodeAt(this.pos+1)-56613888},pp$9.skipBlockComment=function(){var startLoc=this.options.onComment&&this.curPosition(),start=this.pos,end=this.input.indexOf("*/",this.pos+=2);if(-1===end&&this.raise(this.pos-2,"Unterminated comment"),this.pos=end+2,this.options.locations){lineBreakG.lastIndex=start;for(var match;(match=lineBreakG.exec(this.input))&&match.index<this.pos;)++this.curLine,this.lineStart=match.index+match[0].length}this.options.onComment&&this.options.onComment(!0,this.input.slice(start+2,end),start,this.pos,startLoc,this.curPosition())},pp$9.skipLineComment=function(startSkip){for(var start=this.pos,startLoc=this.options.onComment&&this.curPosition(),ch=this.input.charCodeAt(this.pos+=startSkip);this.pos<this.input.length&&!isNewLine(ch);)ch=this.input.charCodeAt(++this.pos);this.options.onComment&&this.options.onComment(!1,this.input.slice(start+startSkip,this.pos),start,this.pos,startLoc,this.curPosition())},pp$9.skipSpace=function(){loop:for(;this.pos<this.input.length;){var ch=this.input.charCodeAt(this.pos);switch(ch){case 32:case 160:++this.pos;break;case 13:10===this.input.charCodeAt(this.pos+1)&&++this.pos;case 10:case 8232:case 8233:++this.pos,this.options.locations&&(++this.curLine,this.lineStart=this.pos);break;case 47:switch(this.input.charCodeAt(this.pos+1)){case 42:this.skipBlockComment();break;case 47:this.skipLineComment(2);break;default:break loop}break;default:if(!(ch>8&&ch<14||ch>=5760&&nonASCIIwhitespace.test(String.fromCharCode(ch))))break loop;++this.pos}}},pp$9.finishToken=function(type,val){this.end=this.pos,this.options.locations&&(this.endLoc=this.curPosition());var prevType=this.type;this.type=type,this.value=val,this.updateContext(prevType)},pp$9.readToken_dot=function(){var next=this.input.charCodeAt(this.pos+1);if(next>=48&&next<=57)return this.readNumber(!0);var next2=this.input.charCodeAt(this.pos+2);return this.options.ecmaVersion>=6&&46===next&&46===next2?(this.pos+=3,this.finishToken(types.ellipsis)):(++this.pos,this.finishToken(types.dot))},pp$9.readToken_slash=function(){var next=this.input.charCodeAt(this.pos+1);return this.exprAllowed?(++this.pos,this.readRegexp()):61===next?this.finishOp(types.assign,2):this.finishOp(types.slash,1)},pp$9.readToken_mult_modulo_exp=function(code){var next=this.input.charCodeAt(this.pos+1),size=1,tokentype=42===code?types.star:types.modulo;return this.options.ecmaVersion>=7&&42===code&&42===next&&(++size,tokentype=types.starstar,next=this.input.charCodeAt(this.pos+2)),61===next?this.finishOp(types.assign,size+1):this.finishOp(tokentype,size)},pp$9.readToken_pipe_amp=function(code){var next=this.input.charCodeAt(this.pos+1);if(next===code){if(this.options.ecmaVersion>=12)if(61===this.input.charCodeAt(this.pos+2))return this.finishOp(types.assign,3);return this.finishOp(124===code?types.logicalOR:types.logicalAND,2)}return 61===next?this.finishOp(types.assign,2):this.finishOp(124===code?types.bitwiseOR:types.bitwiseAND,1)},pp$9.readToken_caret=function(){return 61===this.input.charCodeAt(this.pos+1)?this.finishOp(types.assign,2):this.finishOp(types.bitwiseXOR,1)},pp$9.readToken_plus_min=function(code){var next=this.input.charCodeAt(this.pos+1);return next===code?45!==next||this.inModule||62!==this.input.charCodeAt(this.pos+2)||0!==this.lastTokEnd&&!lineBreak.test(this.input.slice(this.lastTokEnd,this.pos))?this.finishOp(types.incDec,2):(this.skipLineComment(3),this.skipSpace(),this.nextToken()):61===next?this.finishOp(types.assign,2):this.finishOp(types.plusMin,1)},pp$9.readToken_lt_gt=function(code){var next=this.input.charCodeAt(this.pos+1),size=1;return next===code?(size=62===code&&62===this.input.charCodeAt(this.pos+2)?3:2,61===this.input.charCodeAt(this.pos+size)?this.finishOp(types.assign,size+1):this.finishOp(types.bitShift,size)):33!==next||60!==code||this.inModule||45!==this.input.charCodeAt(this.pos+2)||45!==this.input.charCodeAt(this.pos+3)?(61===next&&(size=2),this.finishOp(types.relational,size)):(this.skipLineComment(4),this.skipSpace(),this.nextToken())},pp$9.readToken_eq_excl=function(code){var next=this.input.charCodeAt(this.pos+1);return 61===next?this.finishOp(types.equality,61===this.input.charCodeAt(this.pos+2)?3:2):61===code&&62===next&&this.options.ecmaVersion>=6?(this.pos+=2,this.finishToken(types.arrow)):this.finishOp(61===code?types.eq:types.prefix,1)},pp$9.readToken_question=function(){var ecmaVersion=this.options.ecmaVersion;if(ecmaVersion>=11){var next=this.input.charCodeAt(this.pos+1);if(46===next){var next2=this.input.charCodeAt(this.pos+2);if(next2<48||next2>57)return this.finishOp(types.questionDot,2)}if(63===next){if(ecmaVersion>=12)if(61===this.input.charCodeAt(this.pos+2))return this.finishOp(types.assign,3);return this.finishOp(types.coalesce,2)}}return this.finishOp(types.question,1)},pp$9.getTokenFromCode=function(code){switch(code){case 46:return this.readToken_dot();case 40:return++this.pos,this.finishToken(types.parenL);case 41:return++this.pos,this.finishToken(types.parenR);case 59:return++this.pos,this.finishToken(types.semi);case 44:return++this.pos,this.finishToken(types.comma);case 91:return++this.pos,this.finishToken(types.bracketL);case 93:return++this.pos,this.finishToken(types.bracketR);case 123:return++this.pos,this.finishToken(types.braceL);case 125:return++this.pos,this.finishToken(types.braceR);case 58:return++this.pos,this.finishToken(types.colon);case 96:if(this.options.ecmaVersion<6)break;return++this.pos,this.finishToken(types.backQuote);case 48:var next=this.input.charCodeAt(this.pos+1);if(120===next||88===next)return this.readRadixNumber(16);if(this.options.ecmaVersion>=6){if(111===next||79===next)return this.readRadixNumber(8);if(98===next||66===next)return this.readRadixNumber(2)}case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return this.readNumber(!1);case 34:case 39:return this.readString(code);case 47:return this.readToken_slash();case 37:case 42:return this.readToken_mult_modulo_exp(code);case 124:case 38:return this.readToken_pipe_amp(code);case 94:return this.readToken_caret();case 43:case 45:return this.readToken_plus_min(code);case 60:case 62:return this.readToken_lt_gt(code);case 61:case 33:return this.readToken_eq_excl(code);case 63:return this.readToken_question();case 126:return this.finishOp(types.prefix,1)}this.raise(this.pos,"Unexpected character '"+codePointToString$1(code)+"'")},pp$9.finishOp=function(type,size){var str=this.input.slice(this.pos,this.pos+size);return this.pos+=size,this.finishToken(type,str)},pp$9.readRegexp=function(){for(var escaped,inClass,start=this.pos;;){this.pos>=this.input.length&&this.raise(start,"Unterminated regular expression");var ch=this.input.charAt(this.pos);if(lineBreak.test(ch)&&this.raise(start,"Unterminated regular expression"),escaped)escaped=!1;else{if("["===ch)inClass=!0;else if("]"===ch&&inClass)inClass=!1;else if("/"===ch&&!inClass)break;escaped="\\"===ch}++this.pos}var pattern=this.input.slice(start,this.pos);++this.pos;var flagsStart=this.pos,flags=this.readWord1();this.containsEsc&&this.unexpected(flagsStart);var state=this.regexpState||(this.regexpState=new RegExpValidationState(this));state.reset(start,pattern,flags),this.validateRegExpFlags(state),this.validateRegExpPattern(state);var value=null;try{value=new RegExp(pattern,flags)}catch{}return this.finishToken(types.regexp,{pattern,flags,value})},pp$9.readInt=function(radix,len,maybeLegacyOctalNumericLiteral){for(var allowSeparators=this.options.ecmaVersion>=12&&void 0===len,isLegacyOctalNumericLiteral=maybeLegacyOctalNumericLiteral&&48===this.input.charCodeAt(this.pos),start=this.pos,total=0,lastCode=0,i=0,e=len??1/0;i<e;++i,++this.pos){var code=this.input.charCodeAt(this.pos),val=void 0;if(allowSeparators&&95===code)isLegacyOctalNumericLiteral&&this.raiseRecoverable(this.pos,"Numeric separator is not allowed in legacy octal numeric literals"),95===lastCode&&this.raiseRecoverable(this.pos,"Numeric separator must be exactly one underscore"),0===i&&this.raiseRecoverable(this.pos,"Numeric separator is not allowed at the first of digits"),lastCode=code;else{if((val=code>=97?code-97+10:code>=65?code-65+10:code>=48&&code<=57?code-48:1/0)>=radix)break;lastCode=code,total=total*radix+val}}return allowSeparators&&95===lastCode&&this.raiseRecoverable(this.pos-1,"Numeric separator is not allowed at the last of digits"),this.pos===start||null!=len&&this.pos-start!==len?null:total},pp$9.readRadixNumber=function(radix){var start=this.pos;this.pos+=2;var val=this.readInt(radix);return null==val&&this.raise(this.start+2,"Expected number in radix "+radix),this.options.ecmaVersion>=11&&110===this.input.charCodeAt(this.pos)?(val=stringToBigInt(this.input.slice(start,this.pos)),++this.pos):isIdentifierStart(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(types.num,val)},pp$9.readNumber=function(startsWithDot){var start=this.pos;!startsWithDot&&null===this.readInt(10,void 0,!0)&&this.raise(start,"Invalid number");var octal=this.pos-start>=2&&48===this.input.charCodeAt(start);octal&&this.strict&&this.raise(start,"Invalid number");var next=this.input.charCodeAt(this.pos);if(!octal&&!startsWithDot&&this.options.ecmaVersion>=11&&110===next){var val$1=stringToBigInt(this.input.slice(start,this.pos));return++this.pos,isIdentifierStart(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(types.num,val$1)}octal&&/[89]/.test(this.input.slice(start,this.pos))&&(octal=!1),46===next&&!octal&&(++this.pos,this.readInt(10),next=this.input.charCodeAt(this.pos)),(69===next||101===next)&&!octal&&((43===(next=this.input.charCodeAt(++this.pos))||45===next)&&++this.pos,null===this.readInt(10)&&this.raise(start,"Invalid number")),isIdentifierStart(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number");var val=function stringToNumber(str,isLegacyOctalNumericLiteral){return isLegacyOctalNumericLiteral?parseInt(str,8):parseFloat(str.replace(/_/g,""))}(this.input.slice(start,this.pos),octal);return this.finishToken(types.num,val)},pp$9.readCodePoint=function(){var code;if(123===this.input.charCodeAt(this.pos)){this.options.ecmaVersion<6&&this.unexpected();var codePos=++this.pos;code=this.readHexChar(this.input.indexOf("}",this.pos)-this.pos),++this.pos,code>1114111&&this.invalidStringToken(codePos,"Code point out of bounds")}else code=this.readHexChar(4);return code},pp$9.readString=function(quote){for(var out="",chunkStart=++this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated string constant");var ch=this.input.charCodeAt(this.pos);if(ch===quote)break;92===ch?(out+=this.input.slice(chunkStart,this.pos),out+=this.readEscapedChar(!1),chunkStart=this.pos):(isNewLine(ch,this.options.ecmaVersion>=10)&&this.raise(this.start,"Unterminated string constant"),++this.pos)}return out+=this.input.slice(chunkStart,this.pos++),this.finishToken(types.string,out)},INVALID_TEMPLATE_ESCAPE_ERROR={},pp$9.tryReadTemplateToken=function(){this.inTemplateElement=!0;try{this.readTmplToken()}catch(err){if(err!==INVALID_TEMPLATE_ESCAPE_ERROR)throw err;this.readInvalidTemplateToken()}this.inTemplateElement=!1},pp$9.invalidStringToken=function(position,message){if(this.inTemplateElement&&this.options.ecmaVersion>=9)throw INVALID_TEMPLATE_ESCAPE_ERROR;this.raise(position,message)},pp$9.readTmplToken=function(){for(var out="",chunkStart=this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated template");var ch=this.input.charCodeAt(this.pos);if(96===ch||36===ch&&123===this.input.charCodeAt(this.pos+1))return this.pos!==this.start||this.type!==types.template&&this.type!==types.invalidTemplate?(out+=this.input.slice(chunkStart,this.pos),this.finishToken(types.template,out)):36===ch?(this.pos+=2,this.finishToken(types.dollarBraceL)):(++this.pos,this.finishToken(types.backQuote));if(92===ch)out+=this.input.slice(chunkStart,this.pos),out+=this.readEscapedChar(!0),chunkStart=this.pos;else if(isNewLine(ch)){switch(out+=this.input.slice(chunkStart,this.pos),++this.pos,ch){case 13:10===this.input.charCodeAt(this.pos)&&++this.pos;case 10:out+="\n";break;default:out+=String.fromCharCode(ch)}this.options.locations&&(++this.curLine,this.lineStart=this.pos),chunkStart=this.pos}else++this.pos}},pp$9.readInvalidTemplateToken=function(){for(;this.pos<this.input.length;this.pos++)switch(this.input[this.pos]){case"\\":++this.pos;break;case"$":if("{"!==this.input[this.pos+1])break;case"`":return this.finishToken(types.invalidTemplate,this.input.slice(this.start,this.pos))}this.raise(this.start,"Unterminated template")},pp$9.readEscapedChar=function(inTemplate){var ch=this.input.charCodeAt(++this.pos);switch(++this.pos,ch){case 110:return"\n";case 114:return"\r";case 120:return String.fromCharCode(this.readHexChar(2));case 117:return codePointToString$1(this.readCodePoint());case 116:return"\t";case 98:return"\b";case 118:return"\v";case 102:return"\f";case 13:10===this.input.charCodeAt(this.pos)&&++this.pos;case 10:return this.options.locations&&(this.lineStart=this.pos,++this.curLine),"";case 56:case 57:if(inTemplate){var codePos=this.pos-1;return this.invalidStringToken(codePos,"Invalid escape sequence in template string"),null}default:if(ch>=48&&ch<=55){var octalStr=this.input.substr(this.pos-1,3).match(/^[0-7]+/)[0],octal=parseInt(octalStr,8);return octal>255&&(octalStr=octalStr.slice(0,-1),octal=parseInt(octalStr,8)),this.pos+=octalStr.length-1,ch=this.input.charCodeAt(this.pos),("0"!==octalStr||56===ch||57===ch)&&(this.strict||inTemplate)&&this.invalidStringToken(this.pos-1-octalStr.length,inTemplate?"Octal literal in template string":"Octal literal in strict mode"),String.fromCharCode(octal)}return isNewLine(ch)?"":String.fromCharCode(ch)}},pp$9.readHexChar=function(len){var codePos=this.pos,n=this.readInt(16,len);return null===n&&this.invalidStringToken(codePos,"Bad character escape sequence"),n},pp$9.readWord1=function(){this.containsEsc=!1;for(var word="",first=!0,chunkStart=this.pos,astral=this.options.ecmaVersion>=6;this.pos<this.input.length;){var ch=this.fullCharCodeAtPos();if(isIdentifierChar(ch,astral))this.pos+=ch<=65535?1:2;else{if(92!==ch)break;this.containsEsc=!0,word+=this.input.slice(chunkStart,this.pos);var escStart=this.pos;117!==this.input.charCodeAt(++this.pos)&&this.invalidStringToken(this.pos,"Expecting Unicode escape sequence \\uXXXX"),++this.pos;var esc=this.readCodePoint();(first?isIdentifierStart:isIdentifierChar)(esc,astral)||this.invalidStringToken(escStart,"Invalid Unicode escape"),word+=codePointToString$1(esc),chunkStart=this.pos}first=!1}return word+this.input.slice(chunkStart,this.pos)},pp$9.readWord=function(){var word=this.readWord1(),type=types.name;return this.keywords.test(word)&&(type=keywords$1[word]),this.finishToken(type,word)},version="7.4.1",Parser.acorn={Parser,version,defaultOptions,Position,SourceLocation,getLineInfo,Node,TokenType,tokTypes:types,keywordTypes:keywords$1,TokContext,tokContexts:types$1,isIdentifierChar,isIdentifierStart,Token,isNewLine,lineBreak,lineBreakG,nonASCIIwhitespace}}}),require_xhtml=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/acorn-jsx/xhtml.js"(exports,module){module.exports={quot:'"',amp:"&",apos:"'",lt:"<",gt:">",nbsp:" ",iexcl:"¡",cent:"¢",pound:"£",curren:"¤",yen:"¥",brvbar:"¦",sect:"§",uml:"¨",copy:"©",ordf:"ª",laquo:"«",not:"¬",shy:"­",reg:"®",macr:"¯",deg:"°",plusmn:"±",sup2:"²",sup3:"³",acute:"´",micro:"µ",para:"¶",middot:"·",cedil:"¸",sup1:"¹",ordm:"º",raquo:"»",frac14:"¼",frac12:"½",frac34:"¾",iquest:"¿",Agrave:"À",Aacute:"Á",Acirc:"Â",Atilde:"Ã",Auml:"Ä",Aring:"Å",AElig:"Æ",Ccedil:"Ç",Egrave:"È",Eacute:"É",Ecirc:"Ê",Euml:"Ë",Igrave:"Ì",Iacute:"Í",Icirc:"Î",Iuml:"Ï",ETH:"Ð",Ntilde:"Ñ",Ograve:"Ò",Oacute:"Ó",Ocirc:"Ô",Otilde:"Õ",Ouml:"Ö",times:"×",Oslash:"Ø",Ugrave:"Ù",Uacute:"Ú",Ucirc:"Û",Uuml:"Ü",Yacute:"Ý",THORN:"Þ",szlig:"ß",agrave:"à",aacute:"á",acirc:"â",atilde:"ã",auml:"ä",aring:"å",aelig:"æ",ccedil:"ç",egrave:"è",eacute:"é",ecirc:"ê",euml:"ë",igrave:"ì",iacute:"í",icirc:"î",iuml:"ï",eth:"ð",ntilde:"ñ",ograve:"ò",oacute:"ó",ocirc:"ô",otilde:"õ",ouml:"ö",divide:"÷",oslash:"ø",ugrave:"ù",uacute:"ú",ucirc:"û",uuml:"ü",yacute:"ý",thorn:"þ",yuml:"ÿ",OElig:"Œ",oelig:"œ",Scaron:"Š",scaron:"š",Yuml:"Ÿ",fnof:"ƒ",circ:"ˆ",tilde:"˜",Alpha:"Α",Beta:"Β",Gamma:"Γ",Delta:"Δ",Epsilon:"Ε",Zeta:"Ζ",Eta:"Η",Theta:"Θ",Iota:"Ι",Kappa:"Κ",Lambda:"Λ",Mu:"Μ",Nu:"Ν",Xi:"Ξ",Omicron:"Ο",Pi:"Π",Rho:"Ρ",Sigma:"Σ",Tau:"Τ",Upsilon:"Υ",Phi:"Φ",Chi:"Χ",Psi:"Ψ",Omega:"Ω",alpha:"α",beta:"β",gamma:"γ",delta:"δ",epsilon:"ε",zeta:"ζ",eta:"η",theta:"θ",iota:"ι",kappa:"κ",lambda:"λ",mu:"μ",nu:"ν",xi:"ξ",omicron:"ο",pi:"π",rho:"ρ",sigmaf:"ς",sigma:"σ",tau:"τ",upsilon:"υ",phi:"φ",chi:"χ",psi:"ψ",omega:"ω",thetasym:"ϑ",upsih:"ϒ",piv:"ϖ",ensp:" ",emsp:" ",thinsp:" ",zwnj:"‌",zwj:"‍",lrm:"‎",rlm:"‏",ndash:"–",mdash:"—",lsquo:"‘",rsquo:"’",sbquo:"‚",ldquo:"“",rdquo:"”",bdquo:"„",dagger:"†",Dagger:"‡",bull:"•",hellip:"…",permil:"‰",prime:"′",Prime:"″",lsaquo:"‹",rsaquo:"›",oline:"‾",frasl:"⁄",euro:"€",image:"ℑ",weierp:"℘",real:"ℜ",trade:"™",alefsym:"ℵ",larr:"←",uarr:"↑",rarr:"→",darr:"↓",harr:"↔",crarr:"↵",lArr:"⇐",uArr:"⇑",rArr:"⇒",dArr:"⇓",hArr:"⇔",forall:"∀",part:"∂",exist:"∃",empty:"∅",nabla:"∇",isin:"∈",notin:"∉",ni:"∋",prod:"∏",sum:"∑",minus:"−",lowast:"∗",radic:"√",prop:"∝",infin:"∞",ang:"∠",and:"∧",or:"∨",cap:"∩",cup:"∪",int:"∫",there4:"∴",sim:"∼",cong:"≅",asymp:"≈",ne:"≠",equiv:"≡",le:"≤",ge:"≥",sub:"⊂",sup:"⊃",nsub:"⊄",sube:"⊆",supe:"⊇",oplus:"⊕",otimes:"⊗",perp:"⊥",sdot:"⋅",lceil:"⌈",rceil:"⌉",lfloor:"⌊",rfloor:"⌋",lang:"〈",rang:"〉",loz:"◊",spades:"♠",clubs:"♣",hearts:"♥",diams:"♦"}}}),require_acorn_jsx=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/acorn-jsx/index.js"(exports,module){var XHTMLEntities=require_xhtml(),hexNumber=/^[\da-fA-F]+$/,decimalNumber=/^\d+$/,acornJsxMap=new WeakMap;function getJsxTokens(acorn){acorn=acorn.Parser.acorn||acorn;let acornJsx=acornJsxMap.get(acorn);if(!acornJsx){let tt=acorn.tokTypes,TokContext3=acorn.TokContext,TokenType3=acorn.TokenType,tc_oTag=new TokContext3("<tag",!1),tc_cTag=new TokContext3("</tag",!1),tc_expr=new TokContext3("<tag>...</tag>",!0,!0),tokContexts={tc_oTag,tc_cTag,tc_expr},tokTypes={jsxName:new TokenType3("jsxName"),jsxText:new TokenType3("jsxText",{beforeExpr:!0}),jsxTagStart:new TokenType3("jsxTagStart",{startsExpr:!0}),jsxTagEnd:new TokenType3("jsxTagEnd")};tokTypes.jsxTagStart.updateContext=function(){this.context.push(tc_expr),this.context.push(tc_oTag),this.exprAllowed=!1},tokTypes.jsxTagEnd.updateContext=function(prevType){let out=this.context.pop();out===tc_oTag&&prevType===tt.slash||out===tc_cTag?(this.context.pop(),this.exprAllowed=this.curContext()===tc_expr):this.exprAllowed=!0},acornJsx={tokContexts,tokTypes},acornJsxMap.set(acorn,acornJsx)}return acornJsx}function getQualifiedJSXName(object){return object?"JSXIdentifier"===object.type?object.name:"JSXNamespacedName"===object.type?object.namespace.name+":"+object.name.name:"JSXMemberExpression"===object.type?getQualifiedJSXName(object.object)+"."+getQualifiedJSXName(object.property):void 0:object}module.exports=function(options){return options=options||{},function(Parser3){return function plugin(options,Parser3){let acorn=Parser3.acorn||(init_acorn(),(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.Yp)(acorn_exports)),acornJsx=getJsxTokens(acorn),tt=acorn.tokTypes,tok=acornJsx.tokTypes,tokContexts=acorn.tokContexts,tc_oTag=acornJsx.tokContexts.tc_oTag,tc_cTag=acornJsx.tokContexts.tc_cTag,tc_expr=acornJsx.tokContexts.tc_expr,isNewLine2=acorn.isNewLine,isIdentifierStart2=acorn.isIdentifierStart,isIdentifierChar2=acorn.isIdentifierChar;return class extends Parser3{static get acornJsx(){return acornJsx}jsx_readToken(){let out="",chunkStart=this.pos;for(;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated JSX contents");let ch=this.input.charCodeAt(this.pos);switch(ch){case 60:case 123:return this.pos===this.start?60===ch&&this.exprAllowed?(++this.pos,this.finishToken(tok.jsxTagStart)):this.getTokenFromCode(ch):(out+=this.input.slice(chunkStart,this.pos),this.finishToken(tok.jsxText,out));case 38:out+=this.input.slice(chunkStart,this.pos),out+=this.jsx_readEntity(),chunkStart=this.pos;break;case 62:case 125:this.raise(this.pos,"Unexpected token `"+this.input[this.pos]+"`. Did you mean `"+(62===ch?"&gt;":"&rbrace;")+'` or `{"'+this.input[this.pos]+'"}`?');default:isNewLine2(ch)?(out+=this.input.slice(chunkStart,this.pos),out+=this.jsx_readNewLine(!0),chunkStart=this.pos):++this.pos}}}jsx_readNewLine(normalizeCRLF){let out,ch=this.input.charCodeAt(this.pos);return++this.pos,13===ch&&10===this.input.charCodeAt(this.pos)?(++this.pos,out=normalizeCRLF?"\n":"\r\n"):out=String.fromCharCode(ch),this.options.locations&&(++this.curLine,this.lineStart=this.pos),out}jsx_readString(quote){let out="",chunkStart=++this.pos;for(;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated string constant");let ch=this.input.charCodeAt(this.pos);if(ch===quote)break;38===ch?(out+=this.input.slice(chunkStart,this.pos),out+=this.jsx_readEntity(),chunkStart=this.pos):isNewLine2(ch)?(out+=this.input.slice(chunkStart,this.pos),out+=this.jsx_readNewLine(!1),chunkStart=this.pos):++this.pos}return out+=this.input.slice(chunkStart,this.pos++),this.finishToken(tt.string,out)}jsx_readEntity(){let entity,str="",count=0,ch=this.input[this.pos];"&"!==ch&&this.raise(this.pos,"Entity must start with an ampersand");let startPos=++this.pos;for(;this.pos<this.input.length&&count++<10;){if(ch=this.input[this.pos++],";"===ch){"#"===str[0]?"x"===str[1]?(str=str.substr(2),hexNumber.test(str)&&(entity=String.fromCharCode(parseInt(str,16)))):(str=str.substr(1),decimalNumber.test(str)&&(entity=String.fromCharCode(parseInt(str,10)))):entity=XHTMLEntities[str];break}str+=ch}return entity||(this.pos=startPos,"&")}jsx_readWord(){let ch,start=this.pos;do{ch=this.input.charCodeAt(++this.pos)}while(isIdentifierChar2(ch)||45===ch);return this.finishToken(tok.jsxName,this.input.slice(start,this.pos))}jsx_parseIdentifier(){let node=this.startNode();return this.type===tok.jsxName?node.name=this.value:this.type.keyword?node.name=this.type.keyword:this.unexpected(),this.next(),this.finishNode(node,"JSXIdentifier")}jsx_parseNamespacedName(){let startPos=this.start,startLoc=this.startLoc,name=this.jsx_parseIdentifier();if(!options.allowNamespaces||!this.eat(tt.colon))return name;var node=this.startNodeAt(startPos,startLoc);return node.namespace=name,node.name=this.jsx_parseIdentifier(),this.finishNode(node,"JSXNamespacedName")}jsx_parseElementName(){if(this.type===tok.jsxTagEnd)return"";let startPos=this.start,startLoc=this.startLoc,node=this.jsx_parseNamespacedName();for(this.type===tt.dot&&"JSXNamespacedName"===node.type&&!options.allowNamespacedObjects&&this.unexpected();this.eat(tt.dot);){let newNode=this.startNodeAt(startPos,startLoc);newNode.object=node,newNode.property=this.jsx_parseIdentifier(),node=this.finishNode(newNode,"JSXMemberExpression")}return node}jsx_parseAttributeValue(){switch(this.type){case tt.braceL:let node=this.jsx_parseExpressionContainer();return"JSXEmptyExpression"===node.expression.type&&this.raise(node.start,"JSX attributes must only be assigned a non-empty expression"),node;case tok.jsxTagStart:case tt.string:return this.parseExprAtom();default:this.raise(this.start,"JSX value should be either an expression or a quoted JSX text")}}jsx_parseEmptyExpression(){let node=this.startNodeAt(this.lastTokEnd,this.lastTokEndLoc);return this.finishNodeAt(node,"JSXEmptyExpression",this.start,this.startLoc)}jsx_parseExpressionContainer(){let node=this.startNode();return this.next(),node.expression=this.type===tt.braceR?this.jsx_parseEmptyExpression():this.parseExpression(),this.expect(tt.braceR),this.finishNode(node,"JSXExpressionContainer")}jsx_parseAttribute(){let node=this.startNode();return this.eat(tt.braceL)?(this.expect(tt.ellipsis),node.argument=this.parseMaybeAssign(),this.expect(tt.braceR),this.finishNode(node,"JSXSpreadAttribute")):(node.name=this.jsx_parseNamespacedName(),node.value=this.eat(tt.eq)?this.jsx_parseAttributeValue():null,this.finishNode(node,"JSXAttribute"))}jsx_parseOpeningElementAt(startPos,startLoc){let node=this.startNodeAt(startPos,startLoc);node.attributes=[];let nodeName=this.jsx_parseElementName();for(nodeName&&(node.name=nodeName);this.type!==tt.slash&&this.type!==tok.jsxTagEnd;)node.attributes.push(this.jsx_parseAttribute());return node.selfClosing=this.eat(tt.slash),this.expect(tok.jsxTagEnd),this.finishNode(node,nodeName?"JSXOpeningElement":"JSXOpeningFragment")}jsx_parseClosingElementAt(startPos,startLoc){let node=this.startNodeAt(startPos,startLoc),nodeName=this.jsx_parseElementName();return nodeName&&(node.name=nodeName),this.expect(tok.jsxTagEnd),this.finishNode(node,nodeName?"JSXClosingElement":"JSXClosingFragment")}jsx_parseElementAt(startPos,startLoc){let node=this.startNodeAt(startPos,startLoc),children=[],openingElement=this.jsx_parseOpeningElementAt(startPos,startLoc),closingElement=null;if(!openingElement.selfClosing){contents:for(;;)switch(this.type){case tok.jsxTagStart:if(startPos=this.start,startLoc=this.startLoc,this.next(),this.eat(tt.slash)){closingElement=this.jsx_parseClosingElementAt(startPos,startLoc);break contents}children.push(this.jsx_parseElementAt(startPos,startLoc));break;case tok.jsxText:children.push(this.parseExprAtom());break;case tt.braceL:children.push(this.jsx_parseExpressionContainer());break;default:this.unexpected()}getQualifiedJSXName(closingElement.name)!==getQualifiedJSXName(openingElement.name)&&this.raise(closingElement.start,"Expected corresponding JSX closing tag for <"+getQualifiedJSXName(openingElement.name)+">")}let fragmentOrElement=openingElement.name?"Element":"Fragment";return node["opening"+fragmentOrElement]=openingElement,node["closing"+fragmentOrElement]=closingElement,node.children=children,this.type===tt.relational&&"<"===this.value&&this.raise(this.start,"Adjacent JSX elements must be wrapped in an enclosing tag"),this.finishNode(node,"JSX"+fragmentOrElement)}jsx_parseText(){let node=this.parseLiteral(this.value);return node.type="JSXText",node}jsx_parseElement(){let startPos=this.start,startLoc=this.startLoc;return this.next(),this.jsx_parseElementAt(startPos,startLoc)}parseExprAtom(refShortHandDefaultPos){return this.type===tok.jsxText?this.jsx_parseText():this.type===tok.jsxTagStart?this.jsx_parseElement():super.parseExprAtom(refShortHandDefaultPos)}readToken(code){let context=this.curContext();if(context===tc_expr)return this.jsx_readToken();if(context===tc_oTag||context===tc_cTag){if(isIdentifierStart2(code))return this.jsx_readWord();if(62==code)return++this.pos,this.finishToken(tok.jsxTagEnd);if((34===code||39===code)&&context==tc_oTag)return this.jsx_readString(code)}return 60===code&&this.exprAllowed&&33!==this.input.charCodeAt(this.pos+1)?(++this.pos,this.finishToken(tok.jsxTagStart)):super.readToken(code)}updateContext(prevType){if(this.type==tt.braceL){var curContext=this.curContext();curContext==tc_oTag?this.context.push(tokContexts.b_expr):curContext==tc_expr?this.context.push(tokContexts.b_tmpl):super.updateContext(prevType),this.exprAllowed=!0}else{if(this.type!==tt.slash||prevType!==tok.jsxTagStart)return super.updateContext(prevType);this.context.length-=2,this.context.push(tc_cTag),this.exprAllowed=!1}}}}({allowNamespaces:!1!==options.allowNamespaces,allowNamespacedObjects:!!options.allowNamespacedObjects},Parser3)}},Object.defineProperty(module.exports,"tokTypes",{get:function(){return getJsxTokens((init_acorn(),(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.Yp)(acorn_exports))).tokTypes},configurable:!0,enumerable:!0})}}),require_dist=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/@base2/pretty-print-object/dist/index.js"(exports){var __assign=exports&&exports.__assign||function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__spreadArrays=exports&&exports.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;var r=Array(s),k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r};Object.defineProperty(exports,"__esModule",{value:!0});var seen=[];exports.prettyPrint=function prettyPrint2(input,options,pad){void 0===pad&&(pad="");var tokens,combinedOptions=__assign(__assign({},{indent:"\t",singleQuotes:!0}),options);tokens=void 0===combinedOptions.inlineCharacterLimit?{newLine:"\n",newLineOrSpace:"\n",pad,indent:pad+combinedOptions.indent}:{newLine:"@@__PRETTY_PRINT_NEW_LINE__@@",newLineOrSpace:"@@__PRETTY_PRINT_NEW_LINE_OR_SPACE__@@",pad:"@@__PRETTY_PRINT_PAD__@@",indent:"@@__PRETTY_PRINT_INDENT__@@"};var expandWhiteSpace=function(string){if(void 0===combinedOptions.inlineCharacterLimit)return string;var oneLined=string.replace(new RegExp(tokens.newLine,"g"),"").replace(new RegExp(tokens.newLineOrSpace,"g")," ").replace(new RegExp(tokens.pad+"|"+tokens.indent,"g"),"");return oneLined.length<=combinedOptions.inlineCharacterLimit?oneLined:string.replace(new RegExp(tokens.newLine+"|"+tokens.newLineOrSpace,"g"),"\n").replace(new RegExp(tokens.pad,"g"),pad).replace(new RegExp(tokens.indent,"g"),pad+combinedOptions.indent)};if(-1!==seen.indexOf(input))return'"[Circular]"';if(null==input||"number"==typeof input||"boolean"==typeof input||"function"==typeof input||"symbol"==typeof input||function isRegexp(value){return"[object RegExp]"===Object.prototype.toString.call(value)}(input))return String(input);if(input instanceof Date)return"new Date('"+input.toISOString()+"')";if(Array.isArray(input)){if(0===input.length)return"[]";seen.push(input);var ret="["+tokens.newLine+input.map((function(el,i){var eol=input.length-1===i?tokens.newLine:","+tokens.newLineOrSpace,value=prettyPrint2(el,combinedOptions,pad+combinedOptions.indent);return combinedOptions.transform&&(value=combinedOptions.transform(input,i,value)),tokens.indent+value+eol})).join("")+tokens.pad+"]";return seen.pop(),expandWhiteSpace(ret)}if(function isObj(value){var type=typeof value;return null!==value&&("object"===type||"function"===type)}(input)){var objKeys_1=__spreadArrays(Object.keys(input),function getOwnEnumPropSymbols(object){return Object.getOwnPropertySymbols(object).filter((function(keySymbol){return Object.prototype.propertyIsEnumerable.call(object,keySymbol)}))}(input));if(combinedOptions.filter&&(objKeys_1=objKeys_1.filter((function(el){return combinedOptions.filter&&combinedOptions.filter(input,el)}))),0===objKeys_1.length)return"{}";seen.push(input);ret="{"+tokens.newLine+objKeys_1.map((function(el,i){var eol=objKeys_1.length-1===i?tokens.newLine:","+tokens.newLineOrSpace,isSymbol="symbol"==typeof el,isClassic=!isSymbol&&/^[a-z$_][a-z$_0-9]*$/i.test(el.toString()),key=isSymbol||isClassic?el:prettyPrint2(el,combinedOptions),value=prettyPrint2(input[el],combinedOptions,pad+combinedOptions.indent);return combinedOptions.transform&&(value=combinedOptions.transform(input,el,value)),tokens.indent+String(key)+": "+value+eol})).join("")+tokens.pad+"}";return seen.pop(),expandWhiteSpace(ret)}return input=String(input).replace(/[\r\n]/g,(function(x){return"\n"===x?"\\n":"\\r"})),combinedOptions.singleQuotes?"'"+(input=input.replace(/\\?'/g,"\\'"))+"'":'"'+(input=input.replace(/"/g,'\\"'))+'"'}}}),require_react_is_development2=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/react-element-to-jsx-string/node_modules/react-is/cjs/react-is.development.js"(exports){!function(){var REACT_MODULE_REFERENCE,REACT_ELEMENT_TYPE=Symbol.for("react.element"),REACT_PORTAL_TYPE=Symbol.for("react.portal"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment"),REACT_STRICT_MODE_TYPE=Symbol.for("react.strict_mode"),REACT_PROFILER_TYPE=Symbol.for("react.profiler"),REACT_PROVIDER_TYPE=Symbol.for("react.provider"),REACT_CONTEXT_TYPE=Symbol.for("react.context"),REACT_SERVER_CONTEXT_TYPE=Symbol.for("react.server_context"),REACT_FORWARD_REF_TYPE=Symbol.for("react.forward_ref"),REACT_SUSPENSE_TYPE=Symbol.for("react.suspense"),REACT_SUSPENSE_LIST_TYPE=Symbol.for("react.suspense_list"),REACT_MEMO_TYPE=Symbol.for("react.memo"),REACT_LAZY_TYPE=Symbol.for("react.lazy"),REACT_OFFSCREEN_TYPE=Symbol.for("react.offscreen");function typeOf(object){if("object"==typeof object&&null!==object){var $$typeof=object.$$typeof;switch($$typeof){case REACT_ELEMENT_TYPE:var type=object.type;switch(type){case REACT_FRAGMENT_TYPE:case REACT_PROFILER_TYPE:case REACT_STRICT_MODE_TYPE:case REACT_SUSPENSE_TYPE:case REACT_SUSPENSE_LIST_TYPE:return type;default:var $$typeofType=type&&type.$$typeof;switch($$typeofType){case REACT_SERVER_CONTEXT_TYPE:case REACT_CONTEXT_TYPE:case REACT_FORWARD_REF_TYPE:case REACT_LAZY_TYPE:case REACT_MEMO_TYPE:case REACT_PROVIDER_TYPE:return $$typeofType;default:return $$typeof}}case REACT_PORTAL_TYPE:return $$typeof}}}REACT_MODULE_REFERENCE=Symbol.for("react.module.reference");var ContextConsumer=REACT_CONTEXT_TYPE,ContextProvider=REACT_PROVIDER_TYPE,Element=REACT_ELEMENT_TYPE,ForwardRef2=REACT_FORWARD_REF_TYPE,Fragment2=REACT_FRAGMENT_TYPE,Lazy=REACT_LAZY_TYPE,Memo2=REACT_MEMO_TYPE,Portal=REACT_PORTAL_TYPE,Profiler=REACT_PROFILER_TYPE,StrictMode=REACT_STRICT_MODE_TYPE,Suspense=REACT_SUSPENSE_TYPE,SuspenseList=REACT_SUSPENSE_LIST_TYPE,hasWarnedAboutDeprecatedIsAsyncMode=!1,hasWarnedAboutDeprecatedIsConcurrentMode=!1;exports.ContextConsumer=ContextConsumer,exports.ContextProvider=ContextProvider,exports.Element=Element,exports.ForwardRef=ForwardRef2,exports.Fragment=Fragment2,exports.Lazy=Lazy,exports.Memo=Memo2,exports.Portal=Portal,exports.Profiler=Profiler,exports.StrictMode=StrictMode,exports.Suspense=Suspense,exports.SuspenseList=SuspenseList,exports.isAsyncMode=function isAsyncMode(object){return hasWarnedAboutDeprecatedIsAsyncMode||(hasWarnedAboutDeprecatedIsAsyncMode=!0,console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")),!1},exports.isConcurrentMode=function isConcurrentMode(object){return hasWarnedAboutDeprecatedIsConcurrentMode||(hasWarnedAboutDeprecatedIsConcurrentMode=!0,console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")),!1},exports.isContextConsumer=function isContextConsumer2(object){return typeOf(object)===REACT_CONTEXT_TYPE},exports.isContextProvider=function isContextProvider2(object){return typeOf(object)===REACT_PROVIDER_TYPE},exports.isElement=function isElement(object){return"object"==typeof object&&null!==object&&object.$$typeof===REACT_ELEMENT_TYPE},exports.isForwardRef=function isForwardRef3(object){return typeOf(object)===REACT_FORWARD_REF_TYPE},exports.isFragment=function isFragment(object){return typeOf(object)===REACT_FRAGMENT_TYPE},exports.isLazy=function isLazy2(object){return typeOf(object)===REACT_LAZY_TYPE},exports.isMemo=function isMemo3(object){return typeOf(object)===REACT_MEMO_TYPE},exports.isPortal=function isPortal(object){return typeOf(object)===REACT_PORTAL_TYPE},exports.isProfiler=function isProfiler2(object){return typeOf(object)===REACT_PROFILER_TYPE},exports.isStrictMode=function isStrictMode2(object){return typeOf(object)===REACT_STRICT_MODE_TYPE},exports.isSuspense=function isSuspense2(object){return typeOf(object)===REACT_SUSPENSE_TYPE},exports.isSuspenseList=function isSuspenseList(object){return typeOf(object)===REACT_SUSPENSE_LIST_TYPE},exports.isValidElementType=function isValidElementType(type){return!("string"!=typeof type&&"function"!=typeof type&&type!==REACT_FRAGMENT_TYPE&&type!==REACT_PROFILER_TYPE&&type!==REACT_STRICT_MODE_TYPE&&type!==REACT_SUSPENSE_TYPE&&type!==REACT_SUSPENSE_LIST_TYPE&&type!==REACT_OFFSCREEN_TYPE&&("object"!=typeof type||null===type||type.$$typeof!==REACT_LAZY_TYPE&&type.$$typeof!==REACT_MEMO_TYPE&&type.$$typeof!==REACT_PROVIDER_TYPE&&type.$$typeof!==REACT_CONTEXT_TYPE&&type.$$typeof!==REACT_FORWARD_REF_TYPE&&type.$$typeof!==REACT_MODULE_REFERENCE&&void 0===type.getModuleId))},exports.typeOf=typeOf}()}}),require_react_is2=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.P$)({"../../node_modules/react-element-to-jsx-string/node_modules/react-is/index.js"(exports,module){module.exports=require_react_is_development2()}}),import_prop_types=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.f1)(require_prop_types()),import_html_tags=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.f1)(require_html_tags2());function isHtmlTag(tagName){return import_html_tags.default.includes(tagName.toLowerCase())}var import_escodegen=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.f1)(require_escodegen());var BASIC_OPTIONS={format:{indent:{style:"  "},semicolons:!1}},COMPACT_OPTIONS={...BASIC_OPTIONS,format:{newline:""}},PRETTY_OPTIONS={...BASIC_OPTIONS};function generateCode(ast,compact=!1){return(0,import_escodegen.generate)(ast,compact?COMPACT_OPTIONS:PRETTY_OPTIONS)}function generateObjectCode(ast,compact=!1){return compact?function generateCompactObjectCode(ast){let result=generateCode(ast,!0);return result.endsWith(" }")||(result=`${result.slice(0,-1)} }`),result}(ast):generateCode(ast)}function generateArrayCode(ast,compact=!1){return compact?function generateCompactArrayCode(ast){let result=generateCode(ast,!0);return result.startsWith("[    ")&&(result=result.replace("[    ","[")),result}(ast):function generateMultilineArrayCode(ast){let result=generateCode(ast);return result.endsWith("  }]")&&(result=function dedent(templ){for(var values=[],_i=1;_i<arguments.length;_i++)values[_i-1]=arguments[_i];var strings=Array.from("string"==typeof templ?[templ]:templ);strings[strings.length-1]=strings[strings.length-1].replace(/\r?\n([\t ]*)$/,"");var indentLengths=strings.reduce((function(arr,str){var matches=str.match(/\n([\t ]+|(?!\s).)/g);return matches?arr.concat(matches.map((function(match){var _a,_b;return null!==(_b=null===(_a=match.match(/[\t ]/g))||void 0===_a?void 0:_a.length)&&void 0!==_b?_b:0}))):arr}),[]);if(indentLengths.length){var pattern_1=new RegExp("\n[\t ]{"+Math.min.apply(Math,indentLengths)+"}","g");strings=strings.map((function(str){return str.replace(pattern_1,"\n")}))}strings[0]=strings[0].replace(/^\r?\n/,"");var string=strings[0];return values.forEach((function(value,i){var endentations=string.match(/(?:^|\n)( *)$/),endentation=endentations?endentations[1]:"",indentedValue=value;"string"==typeof value&&value.includes("\n")&&(indentedValue=String(value).split("\n").map((function(str,i2){return 0===i2?str:""+endentation+str})).join("\n")),string+=indentedValue+strings[i+1]})),string}(result)),result}(ast)}var isMemo=component=>component.$$typeof===Symbol.for("react.memo");init_acorn();var import_acorn_jsx=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.f1)(require_acorn_jsx());function simple(node,visitors,baseVisitor,state,override){baseVisitor||(baseVisitor=base),function c(node2,st,override2){var type=override2||node2.type,found=visitors[type];baseVisitor[type](node2,st,c),found&&found(node2,st)}(node,state,override)}function skipThrough(node,st,c){c(node,st)}function ignore(_node,_st,_c){}var base={};base.Program=base.BlockStatement=function(node,st,c){for(var i=0,list=node.body;i<list.length;i+=1){c(list[i],st,"Statement")}},base.Statement=skipThrough,base.EmptyStatement=ignore,base.ExpressionStatement=base.ParenthesizedExpression=base.ChainExpression=function(node,st,c){return c(node.expression,st,"Expression")},base.IfStatement=function(node,st,c){c(node.test,st,"Expression"),c(node.consequent,st,"Statement"),node.alternate&&c(node.alternate,st,"Statement")},base.LabeledStatement=function(node,st,c){return c(node.body,st,"Statement")},base.BreakStatement=base.ContinueStatement=ignore,base.WithStatement=function(node,st,c){c(node.object,st,"Expression"),c(node.body,st,"Statement")},base.SwitchStatement=function(node,st,c){c(node.discriminant,st,"Expression");for(var i$1=0,list$1=node.cases;i$1<list$1.length;i$1+=1){var cs=list$1[i$1];cs.test&&c(cs.test,st,"Expression");for(var i=0,list=cs.consequent;i<list.length;i+=1){c(list[i],st,"Statement")}}},base.SwitchCase=function(node,st,c){node.test&&c(node.test,st,"Expression");for(var i=0,list=node.consequent;i<list.length;i+=1){c(list[i],st,"Statement")}},base.ReturnStatement=base.YieldExpression=base.AwaitExpression=function(node,st,c){node.argument&&c(node.argument,st,"Expression")},base.ThrowStatement=base.SpreadElement=function(node,st,c){return c(node.argument,st,"Expression")},base.TryStatement=function(node,st,c){c(node.block,st,"Statement"),node.handler&&c(node.handler,st),node.finalizer&&c(node.finalizer,st,"Statement")},base.CatchClause=function(node,st,c){node.param&&c(node.param,st,"Pattern"),c(node.body,st,"Statement")},base.WhileStatement=base.DoWhileStatement=function(node,st,c){c(node.test,st,"Expression"),c(node.body,st,"Statement")},base.ForStatement=function(node,st,c){node.init&&c(node.init,st,"ForInit"),node.test&&c(node.test,st,"Expression"),node.update&&c(node.update,st,"Expression"),c(node.body,st,"Statement")},base.ForInStatement=base.ForOfStatement=function(node,st,c){c(node.left,st,"ForInit"),c(node.right,st,"Expression"),c(node.body,st,"Statement")},base.ForInit=function(node,st,c){"VariableDeclaration"===node.type?c(node,st):c(node,st,"Expression")},base.DebuggerStatement=ignore,base.FunctionDeclaration=function(node,st,c){return c(node,st,"Function")},base.VariableDeclaration=function(node,st,c){for(var i=0,list=node.declarations;i<list.length;i+=1){c(list[i],st)}},base.VariableDeclarator=function(node,st,c){c(node.id,st,"Pattern"),node.init&&c(node.init,st,"Expression")},base.Function=function(node,st,c){node.id&&c(node.id,st,"Pattern");for(var i=0,list=node.params;i<list.length;i+=1){c(list[i],st,"Pattern")}c(node.body,st,node.expression?"Expression":"Statement")},base.Pattern=function(node,st,c){"Identifier"===node.type?c(node,st,"VariablePattern"):"MemberExpression"===node.type?c(node,st,"MemberPattern"):c(node,st)},base.VariablePattern=ignore,base.MemberPattern=skipThrough,base.RestElement=function(node,st,c){return c(node.argument,st,"Pattern")},base.ArrayPattern=function(node,st,c){for(var i=0,list=node.elements;i<list.length;i+=1){var elt=list[i];elt&&c(elt,st,"Pattern")}},base.ObjectPattern=function(node,st,c){for(var i=0,list=node.properties;i<list.length;i+=1){var prop=list[i];"Property"===prop.type?(prop.computed&&c(prop.key,st,"Expression"),c(prop.value,st,"Pattern")):"RestElement"===prop.type&&c(prop.argument,st,"Pattern")}},base.Expression=skipThrough,base.ThisExpression=base.Super=base.MetaProperty=ignore,base.ArrayExpression=function(node,st,c){for(var i=0,list=node.elements;i<list.length;i+=1){var elt=list[i];elt&&c(elt,st,"Expression")}},base.ObjectExpression=function(node,st,c){for(var i=0,list=node.properties;i<list.length;i+=1){c(list[i],st)}},base.FunctionExpression=base.ArrowFunctionExpression=base.FunctionDeclaration,base.SequenceExpression=function(node,st,c){for(var i=0,list=node.expressions;i<list.length;i+=1){c(list[i],st,"Expression")}},base.TemplateLiteral=function(node,st,c){for(var i=0,list=node.quasis;i<list.length;i+=1){c(list[i],st)}for(var i$1=0,list$1=node.expressions;i$1<list$1.length;i$1+=1){c(list$1[i$1],st,"Expression")}},base.TemplateElement=ignore,base.UnaryExpression=base.UpdateExpression=function(node,st,c){c(node.argument,st,"Expression")},base.BinaryExpression=base.LogicalExpression=function(node,st,c){c(node.left,st,"Expression"),c(node.right,st,"Expression")},base.AssignmentExpression=base.AssignmentPattern=function(node,st,c){c(node.left,st,"Pattern"),c(node.right,st,"Expression")},base.ConditionalExpression=function(node,st,c){c(node.test,st,"Expression"),c(node.consequent,st,"Expression"),c(node.alternate,st,"Expression")},base.NewExpression=base.CallExpression=function(node,st,c){if(c(node.callee,st,"Expression"),node.arguments)for(var i=0,list=node.arguments;i<list.length;i+=1){c(list[i],st,"Expression")}},base.MemberExpression=function(node,st,c){c(node.object,st,"Expression"),node.computed&&c(node.property,st,"Expression")},base.ExportNamedDeclaration=base.ExportDefaultDeclaration=function(node,st,c){node.declaration&&c(node.declaration,st,"ExportNamedDeclaration"===node.type||node.declaration.id?"Statement":"Expression"),node.source&&c(node.source,st,"Expression")},base.ExportAllDeclaration=function(node,st,c){node.exported&&c(node.exported,st),c(node.source,st,"Expression")},base.ImportDeclaration=function(node,st,c){for(var i=0,list=node.specifiers;i<list.length;i+=1){c(list[i],st)}c(node.source,st,"Expression")},base.ImportExpression=function(node,st,c){c(node.source,st,"Expression")},base.ImportSpecifier=base.ImportDefaultSpecifier=base.ImportNamespaceSpecifier=base.Identifier=base.Literal=ignore,base.TaggedTemplateExpression=function(node,st,c){c(node.tag,st,"Expression"),c(node.quasi,st,"Expression")},base.ClassDeclaration=base.ClassExpression=function(node,st,c){return c(node,st,"Class")},base.Class=function(node,st,c){node.id&&c(node.id,st,"Pattern"),node.superClass&&c(node.superClass,st,"Expression"),c(node.body,st)},base.ClassBody=function(node,st,c){for(var i=0,list=node.body;i<list.length;i+=1){c(list[i],st)}},base.MethodDefinition=base.Property=function(node,st,c){node.computed&&c(node.key,st,"Expression"),c(node.value,st,"Expression")};var ACORN_WALK_VISITORS={...base,JSXElement:()=>{}},acornParser=Parser.extend((0,import_acorn_jsx.default)());function extractIdentifierName(identifierNode){return null!=identifierNode?identifierNode.name:null}function filterAncestors(ancestors){return ancestors.filter((x=>"ObjectExpression"===x.type||"ArrayExpression"===x.type))}function calculateNodeDepth(node){let depths=[];return function ancestor(node,visitors,baseVisitor,state,override){var ancestors=[];baseVisitor||(baseVisitor=base),function c(node2,st,override2){var type=override2||node2.type,found=visitors[type],isNew=node2!==ancestors[ancestors.length-1];isNew&&ancestors.push(node2),baseVisitor[type](node2,st,c),found&&found(node2,st||ancestors,ancestors),isNew&&ancestors.pop()}(node,state,override)}(node,{ObjectExpression(_,ancestors){depths.push(filterAncestors(ancestors).length)},ArrayExpression(_,ancestors){depths.push(filterAncestors(ancestors).length)}},ACORN_WALK_VISITORS),Math.max(...depths)}function parseObject(objectNode){return{inferredType:{type:"Object",depth:calculateNodeDepth(objectNode)},ast:objectNode}}function parseExpression(expression){switch(expression.type){case"Identifier":return function parseIdentifier(identifierNode){return{inferredType:{type:"Identifier",identifier:extractIdentifierName(identifierNode)},ast:identifierNode}}(expression);case"Literal":return function parseLiteral(literalNode){return{inferredType:{type:"Literal"},ast:literalNode}}(expression);case"FunctionExpression":case"ArrowFunctionExpression":return function parseFunction(funcNode){let innerJsxElementNode;simple(funcNode.body,{JSXElement(node){innerJsxElementNode=node}},ACORN_WALK_VISITORS);let inferredType={type:null!=innerJsxElementNode?"Element":"Function",params:funcNode.params,hasParams:0!==funcNode.params.length},identifierName=extractIdentifierName(funcNode.id);return null!=identifierName&&(inferredType.identifier=identifierName),{inferredType,ast:funcNode}}(expression);case"ClassExpression":return function parseClass(classNode){let innerJsxElementNode;return simple(classNode.body,{JSXElement(node){innerJsxElementNode=node}},ACORN_WALK_VISITORS),{inferredType:{type:null!=innerJsxElementNode?"Element":"Class",identifier:extractIdentifierName(classNode.id)},ast:classNode}}(expression);case"JSXElement":return function parseJsxElement(jsxElementNode){let inferredType={type:"Element"},identifierName=extractIdentifierName(jsxElementNode.openingElement.name);return null!=identifierName&&(inferredType.identifier=identifierName),{inferredType,ast:jsxElementNode}}(expression);case"CallExpression":return function parseCall(callNode){return"shape"===extractIdentifierName("MemberExpression"===callNode.callee.type?callNode.callee.property:callNode.callee)?parseObject(callNode.arguments[0]):null}(expression);case"ObjectExpression":return parseObject(expression);case"ArrayExpression":return function parseArray(arrayNode){return{inferredType:{type:"Array",depth:calculateNodeDepth(arrayNode)},ast:arrayNode}}(expression);default:return null}}function parse4(value){let ast=acornParser.parse(`(${value})`,{ecmaVersion:2020}),parsingResult={inferredType:{type:"Unknown"},ast};if(null!=ast.body[0]){let rootNode=ast.body[0];switch(rootNode.type){case"ExpressionStatement":{let expressionResult=parseExpression(rootNode.expression);null!=expressionResult&&(parsingResult=expressionResult);break}}}return parsingResult}function inspectValue(value){try{return{...parse4(value)}}catch{}return{inferredType:{type:"Unknown"}}}function generateArray({inferredType,ast}){let{depth}=inferredType;if(depth<=2){let compactArray=generateArrayCode(ast,!0);if(!(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Sy)(compactArray))return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(compactArray)}return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)("array",generateArrayCode(ast))}function generateObject({inferredType,ast}){let{depth}=inferredType;if(1===depth){let compactObject=generateObjectCode(ast,!0);if(!(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Sy)(compactObject))return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(compactObject)}return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)("object",generateObjectCode(ast))}function getPrettyFuncIdentifier(identifier,hasArguments){return hasArguments?`${identifier}( ... )`:`${identifier}()`}function getPrettyElementIdentifier(identifier){return`<${identifier} />`}function getPrettyIdentifier(inferredType){let{type,identifier}=inferredType;switch(type){case"Function":return getPrettyFuncIdentifier(identifier,inferredType.hasParams);case"Element":return getPrettyElementIdentifier(identifier);default:return identifier}}function createDefaultValue(defaultValue){try{let inspectionResult=inspectValue(defaultValue);switch(inspectionResult.inferredType.type){case"Object":return generateObject(inspectionResult);case"Function":return function generateFunc({inferredType,ast}){let{identifier}=inferredType;if(null!=identifier)return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(getPrettyIdentifier(inferredType),generateCode(ast));let prettyCaption=generateCode(ast,!0);return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Sy)(prettyCaption)?(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)("func",generateCode(ast)):(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(prettyCaption)}(inspectionResult);case"Element":return function generateElement(defaultValue,inspectionResult){let{inferredType}=inspectionResult,{identifier}=inferredType;if(null!=identifier&&!isHtmlTag(identifier)){let prettyIdentifier=getPrettyIdentifier(inferredType);return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(prettyIdentifier,defaultValue)}return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Sy)(defaultValue)?(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)("element",defaultValue):(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(defaultValue)}(defaultValue,inspectionResult);case"Array":return generateArray(inspectionResult);default:return null}}catch(e){console.error(e)}return null}function isFunction(value){return"function"==typeof value}function isObject(o){return"[object Object]"===Object.prototype.toString.call(o)}var import_pretty_print_object=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.f1)(require_dist()),import_react_is=(0,_chunk_XP5HYGXS_mjs__WEBPACK_IMPORTED_MODULE_0__.f1)(require_react_is2()),spacer=function(times,tabStop){return 0===times?"":new Array(times*tabStop).fill(" ").join("")};function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj2){return typeof obj2}:function(obj2){return obj2&&"function"==typeof Symbol&&obj2.constructor===Symbol&&obj2!==Symbol.prototype?"symbol":typeof obj2})(obj)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if(typeof Symbol<"u"&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function safeSortObject(value,seen){return null===value||"object"!==_typeof(value)||value instanceof Date||value instanceof RegExp||react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(value)?value:(seen.add(value),Array.isArray(value)?value.map((function(v){return safeSortObject(v,seen)})):Object.keys(value).sort().reduce((function(result,key){return"_owner"===key||("current"===key||seen.has(value[key])?result[key]="[Circular]":result[key]=safeSortObject(value[key],seen)),result}),{}))}function sortObject(value){return safeSortObject(value,new WeakSet)}var createStringTreeNode=function(value){return{type:"string",value}},supportFragment=!!react__WEBPACK_IMPORTED_MODULE_1__.Fragment,getFunctionTypeName=function(functionType){return functionType.name&&"_default"!==functionType.name?functionType.name:"No Display Name"},getWrappedComponentDisplayName=function getWrappedComponentDisplayName2(Component){switch(!0){case!!Component.displayName:return Component.displayName;case Component.$$typeof===import_react_is.Memo:return getWrappedComponentDisplayName2(Component.type);case Component.$$typeof===import_react_is.ForwardRef:return getWrappedComponentDisplayName2(Component.render);default:return getFunctionTypeName(Component)}},getReactElementDisplayName=function(element){switch(!0){case"string"==typeof element.type:return element.type;case"function"==typeof element.type:return element.type.displayName?element.type.displayName:getFunctionTypeName(element.type);case(0,import_react_is.isForwardRef)(element):case(0,import_react_is.isMemo)(element):return getWrappedComponentDisplayName(element.type);case(0,import_react_is.isContextConsumer)(element):return"".concat(element.type._context.displayName||"Context",".Consumer");case(0,import_react_is.isContextProvider)(element):return"".concat(element.type._context.displayName||"Context",".Provider");case(0,import_react_is.isLazy)(element):return"Lazy";case(0,import_react_is.isProfiler)(element):return"Profiler";case(0,import_react_is.isStrictMode)(element):return"StrictMode";case(0,import_react_is.isSuspense)(element):return"Suspense";default:return"UnknownElementType"}},noChildren=function(propsValue,propName){return"children"!==propName},onlyMeaningfulChildren=function(children){return!0!==children&&!1!==children&&null!==children&&""!==children},filterProps=function(originalProps,cb){var filteredProps={};return Object.keys(originalProps).filter((function(key){return cb(originalProps[key],key)})).forEach((function(key){return filteredProps[key]=originalProps[key]})),filteredProps},parseReactElement=function parseReactElement2(element,options){var _options$displayName=options.displayName,displayNameFn=void 0===_options$displayName?getReactElementDisplayName:_options$displayName;if("string"==typeof element)return createStringTreeNode(element);if("number"==typeof element)return{type:"number",value:element};if(!react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(element))throw new Error("react-element-to-jsx-string: Expected a React.Element, got `".concat(_typeof(element),"`"));var displayName=displayNameFn(element),props=filterProps(element.props,noChildren);null!==element.ref&&(props.ref=element.ref);var key=element.key;"string"==typeof key&&key.search(/^\./)&&(props.key=key);var defaultProps=filterProps(element.type.defaultProps||{},noChildren),childrens=react__WEBPACK_IMPORTED_MODULE_1__.Children.toArray(element.props.children).filter(onlyMeaningfulChildren).map((function(child){return parseReactElement2(child,options)}));return supportFragment&&element.type===react__WEBPACK_IMPORTED_MODULE_1__.Fragment?function(key,childrens){return{type:"ReactFragment",key,childrens}}(key,childrens):function(displayName,props,defaultProps,childrens){return{type:"ReactElement",displayName,props,defaultProps,childrens}}(displayName,props,defaultProps,childrens)};function noRefCheck(){}var defaultFunctionValue=function(fn){return fn.toString().split("\n").map((function(line){return line.trim()})).join("")},formatFunction=function(fn,options){var _options$functionValu=options.functionValue,functionValue=void 0===_options$functionValu?defaultFunctionValue:_options$functionValu;return functionValue(options.showFunctions||functionValue!==defaultFunctionValue?fn:noRefCheck)},formatPropValue=function(propValue,inline,lvl,options){if("number"==typeof propValue)return"{".concat(String(propValue),"}");if("string"==typeof propValue)return'"'.concat(propValue.replace(/"/g,"&quot;"),'"');if("symbol"===_typeof(propValue)){var symbolDescription=propValue.valueOf().toString().replace(/Symbol\((.*)\)/,"$1");return symbolDescription?"{Symbol('".concat(symbolDescription,"')}"):"{Symbol()}"}return"function"==typeof propValue?"{".concat(formatFunction(propValue,options),"}"):(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(propValue)?"{".concat(formatTreeNode(parseReactElement(propValue,options),!0,lvl,options),"}"):propValue instanceof Date?isNaN(propValue.valueOf())?"{new Date(NaN)}":'{new Date("'.concat(propValue.toISOString(),'")}'):function isPlainObject2(o){var ctor,prot;return!1!==isObject(o)&&(void 0===(ctor=o.constructor)||!(!1===isObject(prot=ctor.prototype)||!1===prot.hasOwnProperty("isPrototypeOf")))}(propValue)||Array.isArray(propValue)?"{".concat(function(value,inline,lvl,options){var normalizedValue=sortObject(value),stringifiedValue=(0,import_pretty_print_object.prettyPrint)(normalizedValue,{transform:function(currentObj,prop,originalResult){var currentValue=currentObj[prop];return currentValue&&(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(currentValue)?formatTreeNode(parseReactElement(currentValue,options),!0,lvl,options):"function"==typeof currentValue?formatFunction(currentValue,options):originalResult}});return inline?stringifiedValue.replace(/\s+/g," ").replace(/{ /g,"{").replace(/ }/g,"}").replace(/\[ /g,"[").replace(/ ]/g,"]"):stringifiedValue.replace(/\t/g,spacer(1,options.tabStop)).replace(/\n([^$])/g,"\n".concat(spacer(lvl+1,options.tabStop),"$1"))}(propValue,inline,lvl,options),"}"):"{".concat(String(propValue),"}")},mergeSiblingPlainStringChildrenReducer=function(previousNodes,currentNode){var nodes=previousNodes.slice(0,previousNodes.length>0?previousNodes.length-1:0),previousNode=previousNodes[previousNodes.length-1];return!previousNode||"string"!==currentNode.type&&"number"!==currentNode.type||"string"!==previousNode.type&&"number"!==previousNode.type?(previousNode&&nodes.push(previousNode),nodes.push(currentNode)):nodes.push(createStringTreeNode(String(previousNode.value)+String(currentNode.value))),nodes};var formatOneChildren=function(inline,lvl,options){return function(element){return function(element,formattedElement,inline,lvl,options){var tabStop=options.tabStop;return"string"===element.type?formattedElement.split("\n").map((function(line,offset2){return 0===offset2?line:"".concat(spacer(lvl,tabStop)).concat(line)})).join("\n"):formattedElement}(element,formatTreeNode(element,inline,lvl,options),0,lvl,options)}},isInlineAttributeTooLong=function(attributes,inlineAttributeString,lvl,tabStop,maxInlineAttributesLineLength){return maxInlineAttributesLineLength?spacer(lvl,tabStop).length+inlineAttributeString.length>maxInlineAttributesLineLength:attributes.length>1},formatReactElementNode=function(node,inline,lvl,options){var type=node.type,_node$displayName=node.displayName,displayName=void 0===_node$displayName?"":_node$displayName,childrens=node.childrens,_node$props=node.props,props=void 0===_node$props?{}:_node$props,_node$defaultProps=node.defaultProps,defaultProps=void 0===_node$defaultProps?{}:_node$defaultProps;if("ReactElement"!==type)throw new Error('The "formatReactElementNode" function could only format node of type "ReactElement". Given:  '.concat(type));var filterProps3=options.filterProps,maxInlineAttributesLineLength=options.maxInlineAttributesLineLength,showDefaultProps=options.showDefaultProps,sortProps=options.sortProps,tabStop=options.tabStop,out="<".concat(displayName),outInlineAttr=out,outMultilineAttr=out,containsMultilineAttr=!1,visibleAttributeNames=[],propFilter=function createPropFilter(props,filter){return Array.isArray(filter)?function(key){return-1===filter.indexOf(key)}:function(key){return filter(props[key],key)}}(props,filterProps3);Object.keys(props).filter(propFilter).filter(function(defaultProps,props){return function(propName){var haveDefaultValue=Object.keys(defaultProps).includes(propName);return!haveDefaultValue||haveDefaultValue&&defaultProps[propName]!==props[propName]}}(defaultProps,props)).forEach((function(propName){return visibleAttributeNames.push(propName)})),Object.keys(defaultProps).filter(propFilter).filter((function(){return showDefaultProps})).filter((function(defaultPropName){return!visibleAttributeNames.includes(defaultPropName)})).forEach((function(defaultPropName){return visibleAttributeNames.push(defaultPropName)}));var shouldSortUserProps,attributes=(shouldSortUserProps=sortProps,function(props){var haveKeyProp=props.includes("key"),haveRefProp=props.includes("ref"),userPropsOnly=props.filter((function(oneProp){return!["key","ref"].includes(oneProp)})),sortedProps=_toConsumableArray(shouldSortUserProps?userPropsOnly.sort():userPropsOnly);return haveRefProp&&sortedProps.unshift("ref"),haveKeyProp&&sortedProps.unshift("key"),sortedProps})(visibleAttributeNames);if(attributes.forEach((function(attributeName){var _formatProp=function(name,hasValue,value,hasDefaultValue,defaultValue,inline,lvl,options){if(!hasValue&&!hasDefaultValue)throw new Error('The prop "'.concat(name,'" has no value and no default: could not be formatted'));var usedValue=hasValue?value:defaultValue,useBooleanShorthandSyntax=options.useBooleanShorthandSyntax,tabStop=options.tabStop,formattedPropValue=formatPropValue(usedValue,inline,lvl,options),attributeFormattedInline=" ",attributeFormattedMultiline="\n".concat(spacer(lvl+1,tabStop)),isMultilineAttribute=formattedPropValue.includes("\n");return useBooleanShorthandSyntax&&"{false}"===formattedPropValue&&!hasDefaultValue?(attributeFormattedInline="",attributeFormattedMultiline=""):useBooleanShorthandSyntax&&"{true}"===formattedPropValue?(attributeFormattedInline+="".concat(name),attributeFormattedMultiline+="".concat(name)):(attributeFormattedInline+="".concat(name,"=").concat(formattedPropValue),attributeFormattedMultiline+="".concat(name,"=").concat(formattedPropValue)),{attributeFormattedInline,attributeFormattedMultiline,isMultilineAttribute}}(attributeName,Object.keys(props).includes(attributeName),props[attributeName],Object.keys(defaultProps).includes(attributeName),defaultProps[attributeName],inline,lvl,options),attributeFormattedInline=_formatProp.attributeFormattedInline,attributeFormattedMultiline=_formatProp.attributeFormattedMultiline;_formatProp.isMultilineAttribute&&(containsMultilineAttr=!0),outInlineAttr+=attributeFormattedInline,outMultilineAttr+=attributeFormattedMultiline})),outMultilineAttr+="\n".concat(spacer(lvl,tabStop)),out=function(attributes,inlineAttributeString,containsMultilineAttr,inline,lvl,tabStop,maxInlineAttributesLineLength){return(isInlineAttributeTooLong(attributes,inlineAttributeString,lvl,tabStop,maxInlineAttributesLineLength)||containsMultilineAttr)&&!inline}(attributes,outInlineAttr,containsMultilineAttr,inline,lvl,tabStop,maxInlineAttributesLineLength)?outMultilineAttr:outInlineAttr,childrens&&childrens.length>0){var newLvl=lvl+1;out+=">",inline||(out+="\n",out+=spacer(newLvl,tabStop)),out+=childrens.reduce(mergeSiblingPlainStringChildrenReducer,[]).map(formatOneChildren(inline,newLvl,options)).join(inline?"":"\n".concat(spacer(newLvl,tabStop))),inline||(out+="\n",out+=spacer(newLvl-1,tabStop)),out+="</".concat(displayName,">")}else isInlineAttributeTooLong(attributes,outInlineAttr,lvl,tabStop,maxInlineAttributesLineLength)||(out+=" "),out+="/>";return out},jsxStopChars=["<",">","{","}"],escape2=function(s){return function(s){return jsxStopChars.some((function(jsxStopChar){return s.includes(jsxStopChar)}))}(s)?"{`".concat(s,"`}"):s},formatTreeNode=function(node,inline,lvl,options){if("number"===node.type)return String(node.value);if("string"===node.type)return node.value?"".concat((s=escape2(String(node.value)),(result=s).endsWith(" ")&&(result=result.replace(/^(.*?)(\s+)$/,"$1{'$2'}")),result.startsWith(" ")&&(result=result.replace(/^(\s+)(.*)$/,"{'$1'}$2")),result)):"";var s,result;if("ReactElement"===node.type)return formatReactElementNode(node,inline,lvl,options);if("ReactFragment"===node.type)return function(node,inline,lvl,options){var displayName,type=node.type,key=node.key,childrens=node.childrens;if("ReactFragment"!==type)throw new Error('The "formatReactFragmentNode" function could only format node of type "ReactFragment". Given: '.concat(type));return displayName=options.useFragmentShortSyntax?0===node.childrens.length||node.key?"React.Fragment":"":"React.Fragment",formatReactElementNode(function(displayName,key,childrens){var props={};return key&&(props={key}),{type:"ReactElement",displayName,props,defaultProps:{},childrens}}(displayName,key,childrens),inline,lvl,options)}(node,inline,lvl,options);throw new TypeError('Unknow format type "'.concat(node.type,'"'))},reactElementToJsxString=function(element){var _ref=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_ref$filterProps=_ref.filterProps,filterProps3=void 0===_ref$filterProps?[]:_ref$filterProps,_ref$showDefaultProps=_ref.showDefaultProps,showDefaultProps=void 0===_ref$showDefaultProps||_ref$showDefaultProps,_ref$showFunctions=_ref.showFunctions,showFunctions=void 0!==_ref$showFunctions&&_ref$showFunctions,functionValue=_ref.functionValue,_ref$tabStop=_ref.tabStop,tabStop=void 0===_ref$tabStop?2:_ref$tabStop,_ref$useBooleanShorth=_ref.useBooleanShorthandSyntax,useBooleanShorthandSyntax=void 0===_ref$useBooleanShorth||_ref$useBooleanShorth,_ref$useFragmentShort=_ref.useFragmentShortSyntax,useFragmentShortSyntax=void 0===_ref$useFragmentShort||_ref$useFragmentShort,_ref$sortProps=_ref.sortProps,sortProps=void 0===_ref$sortProps||_ref$sortProps,maxInlineAttributesLineLength=_ref.maxInlineAttributesLineLength,displayName=_ref.displayName;if(!element)throw new Error("react-element-to-jsx-string: Expected a ReactElement");var options={filterProps:filterProps3,showDefaultProps,showFunctions,functionValue,tabStop,useBooleanShorthandSyntax,useFragmentShortSyntax,sortProps,maxInlineAttributesLineLength,displayName};return function(node,options){return formatTreeNode(node,!1,0,options)}(parseReactElement(element,options),options)},reactElementToJSXString=reactElementToJsxString;function isReactElement(element){return null!=element.$$typeof}function extractFunctionName(func,propName){let{name}=func;return""!==name&&"anonymous"!==name&&name!==propName?name:null}function generateReactObject(rawDefaultProp){let{type}=rawDefaultProp,{displayName}=type,jsx2=reactElementToJSXString(rawDefaultProp,{});if(null!=displayName){let prettyIdentifier=getPrettyElementIdentifier(displayName);return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(prettyIdentifier,jsx2)}if(function isString(value){return"string"==typeof value||value instanceof String}(type)&&isHtmlTag(type)){let jsxSummary=reactElementToJSXString(rawDefaultProp,{tabStop:0}).replace(/\r?\n|\r/g,"");if(!(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Sy)(jsxSummary))return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(jsxSummary)}return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)("element",jsx2)}var DEFAULT_TYPE_RESOLVERS={string:rawDefaultProp=>(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(JSON.stringify(rawDefaultProp)),object:rawDefaultProp=>{if(isReactElement(rawDefaultProp)&&null!=rawDefaultProp.type)return generateReactObject(rawDefaultProp);if(function isPlainObject(object){if("object"!=typeof object||null==object)return!1;if(null===Object.getPrototypeOf(object))return!0;if("[object Object]"!==Object.prototype.toString.call(object)){let tag=object[Symbol.toStringTag];return!(null==tag||!Object.getOwnPropertyDescriptor(object,Symbol.toStringTag)?.writable)&&object.toString()===`[object ${tag}]`}let proto=object;for(;null!==Object.getPrototypeOf(proto);)proto=Object.getPrototypeOf(proto);return Object.getPrototypeOf(object)===proto}(rawDefaultProp)){return generateObject(inspectValue(JSON.stringify(rawDefaultProp)))}if(Array.isArray(rawDefaultProp)){return generateArray(inspectValue(JSON.stringify(rawDefaultProp)))}return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)("object")},function:(rawDefaultProp,propDef)=>{let inspectionResult,isElement=!1;if(isFunction(rawDefaultProp.render))isElement=!0;else if(null!=rawDefaultProp.prototype&&isFunction(rawDefaultProp.prototype.render))isElement=!0;else{let innerElement;try{inspectionResult=inspectValue(rawDefaultProp.toString());let{hasParams,params}=inspectionResult.inferredType;hasParams?1===params.length&&"ObjectPattern"===params[0].type&&(innerElement=rawDefaultProp({})):innerElement=rawDefaultProp(),null!=innerElement&&isReactElement(innerElement)&&(isElement=!0)}catch{}}let funcName=extractFunctionName(rawDefaultProp,propDef.name);if(null!=funcName){if(isElement)return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(getPrettyElementIdentifier(funcName));null!=inspectionResult&&(inspectionResult=inspectValue(rawDefaultProp.toString()));let{hasParams}=inspectionResult.inferredType;return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(getPrettyFuncIdentifier(funcName,hasParams))}return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(isElement?"element":"func")},default:rawDefaultProp=>(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(rawDefaultProp.toString())};function createDefaultValueFromRawDefaultProp(rawDefaultProp,propDef,typeResolvers=DEFAULT_TYPE_RESOLVERS){try{switch(typeof rawDefaultProp){case"string":return typeResolvers.string(rawDefaultProp,propDef);case"object":return typeResolvers.object(rawDefaultProp,propDef);case"function":return typeResolvers.function(rawDefaultProp,propDef);default:return typeResolvers.default(rawDefaultProp,propDef)}}catch(e){console.error(e)}return null}function generateFuncSignature(params,returns){let hasParams=null!=params,hasReturns=null!=returns;if(!hasParams&&!hasReturns)return"";let funcParts=[];if(hasParams){let funcParams=params.map((x=>{let prettyName=x.getPrettyName(),typeName=x.getTypeName();return null!=typeName?`${prettyName}: ${typeName}`:prettyName}));funcParts.push(`(${funcParams.join(", ")})`)}else funcParts.push("()");return hasReturns&&funcParts.push(`=> ${returns.getTypeName()}`),funcParts.join(" ")}function generateShortFuncSignature(params,returns){let hasParams=null!=params,hasReturns=null!=returns;if(!hasParams&&!hasReturns)return"";let funcParts=[];return hasParams?funcParts.push("( ... )"):funcParts.push("()"),hasReturns&&funcParts.push(`=> ${returns.getTypeName()}`),funcParts.join(" ")}function createTypeDef({name,short,compact,full,inferredType}){return{name,short,compact,full:full??short,inferredType}}function cleanPropTypes(value){return value.replace(/PropTypes./g,"").replace(/.isRequired/g,"")}function splitIntoLines(value){return value.split(/\r?\n/)}function prettyObject(ast,compact=!1){return cleanPropTypes(generateObjectCode(ast,compact))}function prettyArray(ast,compact=!1){return cleanPropTypes(generateCode(ast,compact))}function generateTypeFromString(value,originalTypeName){let short,compact,full,{inferredType,ast}=inspectValue(value),{type}=inferredType;switch(type){case"Identifier":case"Literal":short=value,compact=value;break;case"Object":{let{depth}=inferredType;short="object",compact=1===depth?prettyObject(ast,!0):null,full=prettyObject(ast);break}case"Element":{let{identifier}=inferredType;short=null==identifier||isHtmlTag(identifier)?"element":identifier,compact=1===splitIntoLines(value).length?value:null,full=value;break}case"Array":{let{depth}=inferredType;short="array",compact=depth<=2?prettyArray(ast,!0):null,full=prettyArray(ast);break}default:short=function getCaptionForInspectionType(type){switch(type){case"Object":return"object";case"Array":return"array";case"Class":return"class";case"Function":return"func";case"Element":return"element";default:return"custom"}}(type),compact=1===splitIntoLines(value).length?value:null,full=value}return createTypeDef({name:originalTypeName,short,compact,full,inferredType:type})}function objectOf(of){return`objectOf(${of})`}function generateEnum(type){if(Array.isArray(type.value)){let values=type.value.reduce(((acc,v)=>{let{short,compact,full}=function generateEnumValue({value,computed}){return computed?generateTypeFromString(value,"enumvalue"):createTypeDef({name:"enumvalue",short:value,compact:value})}(v);return acc.short.push(short),acc.compact.push(compact),acc.full.push(full),acc}),{short:[],compact:[],full:[]});return createTypeDef({name:"enum",short:values.short.join(" | "),compact:values.compact.every((x=>null!=x))?values.compact.join(" | "):null,full:values.full.join(" | ")})}return createTypeDef({name:"enum",short:type.value,compact:type.value})}function braceAfter(of){return`${of}[]`}function braceAround(of){return`[${of}]`}function createArrayOfObjectTypeDef(short,compact,full){return createTypeDef({name:"arrayOf",short:braceAfter(short),compact:null!=compact?braceAround(compact):null,full:full&&braceAround(full)})}function generateType(type,extractedProp){try{switch(type.name){case"custom":return function generateCustom({raw}){return null!=raw?generateTypeFromString(raw,"custom"):createTypeDef({name:"custom",short:"custom",compact:"custom"})}(type);case"func":return function generateFunc2(extractedProp){let{jsDocTags}=extractedProp;return null==jsDocTags||null==jsDocTags.params&&null==jsDocTags.returns?createTypeDef({name:"func",short:"func",compact:"func"}):createTypeDef({name:"func",short:generateShortFuncSignature(jsDocTags.params,jsDocTags.returns),compact:null,full:generateFuncSignature(jsDocTags.params,jsDocTags.returns)})}(extractedProp);case"shape":return function generateShape(type,extractedProp){let fields=Object.keys(type.value).map((key=>`${key}: ${generateType(type.value[key],extractedProp).full}`)).join(", "),{inferredType,ast}=inspectValue(`{ ${fields} }`),{depth}=inferredType;return createTypeDef({name:"shape",short:"object",compact:1===depth&&ast?prettyObject(ast,!0):null,full:ast?prettyObject(ast):null})}(type,extractedProp);case"instanceOf":return createTypeDef({name:"instanceOf",short:type.value,compact:type.value});case"objectOf":return function generateObjectOf(type,extractedProp){let{short,compact,full}=generateType(type.value,extractedProp);return createTypeDef({name:"objectOf",short:objectOf(short),compact:null!=compact?objectOf(compact):null,full:full&&objectOf(full)})}(type,extractedProp);case"union":return function generateUnion(type,extractedProp){if(Array.isArray(type.value)){let values=type.value.reduce(((acc,v)=>{let{short,compact,full}=generateType(v,extractedProp);return acc.short.push(short),acc.compact.push(compact),acc.full.push(full),acc}),{short:[],compact:[],full:[]});return createTypeDef({name:"union",short:values.short.join(" | "),compact:values.compact.every((x=>null!=x))?values.compact.join(" | "):null,full:values.full.join(" | ")})}return createTypeDef({name:"union",short:type.value,compact:null})}(type,extractedProp);case"enum":return generateEnum(type);case"arrayOf":return function generateArray2(type,extractedProp){let{name,short,compact,full,inferredType}=generateType(type.value,extractedProp);if("custom"===name){if("Object"===inferredType)return createArrayOfObjectTypeDef(short,compact,full)}else if("shape"===name)return createArrayOfObjectTypeDef(short,compact,full);return createTypeDef({name:"arrayOf",short:braceAfter(short),compact:braceAfter(short)})}(type,extractedProp);default:return createTypeDef({name:type.name,short:type.name,compact:type.name})}}catch(e){console.error(e)}return createTypeDef({name:"unknown",short:"unknown",compact:"unknown"})}var rawDefaultPropTypeResolvers=function createTypeResolvers(customResolvers={}){return{...DEFAULT_TYPE_RESOLVERS,...customResolvers}}({function:(rawDefaultProp,{name,type})=>{let isElement="element"===type?.summary||"elementType"===type?.summary,funcName=extractFunctionName(rawDefaultProp,name);if(null!=funcName){if(isElement)return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(getPrettyElementIdentifier(funcName));let{hasParams}=inspectValue(rawDefaultProp.toString()).inferredType;return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(getPrettyFuncIdentifier(funcName,hasParams))}return(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(isElement?"element":"func")}});function enhancePropTypesProp(extractedProp,rawDefaultProp){let{propDef}=extractedProp,newtype=function createType(extractedProp){let{type}=extractedProp.docgenInfo;if(null==type)return null;try{switch(type.name){case"custom":case"shape":case"instanceOf":case"objectOf":case"union":case"enum":case"arrayOf":{let{short,compact,full}=generateType(type,extractedProp);return null==compact||(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.i3)(compact)?full?(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(short,full):(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(short):(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(compact)}case"func":{let detail,{short,full}=generateType(type,extractedProp),summary=short;return full&&full.length<150?summary=full:full&&(detail=function toMultilineSignature(signature){return signature.replace(/,/g,",\r\n")}(full)),(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Ux)(summary,detail)}default:return null}}catch(e){console.error(e)}return null}(extractedProp);null!=newtype&&(propDef.type=newtype);let{defaultValue}=extractedProp.docgenInfo;if(null!=defaultValue&&null!=defaultValue.value){let newDefaultValue=createDefaultValue(defaultValue.value);null!=newDefaultValue&&(propDef.defaultValue=newDefaultValue)}else if(null!=rawDefaultProp){let newDefaultValue=createDefaultValueFromRawDefaultProp(rawDefaultProp,propDef,rawDefaultPropTypeResolvers);null!=newDefaultValue&&(propDef.defaultValue=newDefaultValue)}return propDef}function enhancePropTypesProps(extractedProps,component){let rawDefaultProps=null!=component.defaultProps?component.defaultProps:{};return function keepOriginalDefinitionOrder(extractedProps,component){let{propTypes}=component;return null!=propTypes?Object.keys(propTypes).map((x=>extractedProps.find((y=>y.name===x)))).filter(Boolean):extractedProps}(extractedProps.map((x=>enhancePropTypesProp(x,rawDefaultProps[x.propDef.name]))),component)}function enhanceTypeScriptProps(extractedProps){return extractedProps.map((prop=>function enhanceTypeScriptProp(extractedProp,rawDefaultProp){let{propDef}=extractedProp,{defaultValue}=extractedProp.docgenInfo;if(null!=defaultValue&&null!=defaultValue.value){let newDefaultValue=createDefaultValue(defaultValue.value);null!=newDefaultValue&&(propDef.defaultValue=newDefaultValue)}else if(null!=rawDefaultProp){let newDefaultValue=createDefaultValueFromRawDefaultProp(rawDefaultProp,propDef);null!=newDefaultValue&&(propDef.defaultValue=newDefaultValue)}return propDef}(prop)))}var propTypesMap=new Map;function getPropDefs(component,section){let processedComponent=component;!(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.TQ)(component)&&!component.propTypes&&isMemo(component)&&(processedComponent=component.type);let extractedProps=(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.p6)(processedComponent,section);if(0===extractedProps.length)return[];switch(extractedProps[0].typeSystem){case storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.YF.JAVASCRIPT:return enhancePropTypesProps(extractedProps,component);case storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.YF.TYPESCRIPT:return enhanceTypeScriptProps(extractedProps);default:return extractedProps.map((x=>x.propDef))}}Object.keys(import_prop_types.default).forEach((typeName=>{let type=import_prop_types.default[typeName];propTypesMap.set(type,typeName),propTypesMap.set(type.isRequired,typeName)}));var reactElementToJSXString2=reactElementToJsxString,toPascalCase=str=>str.charAt(0).toUpperCase()+str.slice(1);function simplifyNodeForStringify(node){if((0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(node)){let props=Object.keys(node.props).reduce(((acc,cur)=>(acc[cur]=simplifyNodeForStringify(node.props[cur]),acc)),{});return{...node,props,_owner:null}}return Array.isArray(node)?node.map(simplifyNodeForStringify):node}var renderJsx=(code,options)=>{if(typeof code>"u")return storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_2__.logger.warn("Too many skip or undefined component"),null;let displayNameDefaults,renderedJSX=code,Type=renderedJSX.type;for(let i=0;i<options?.skip;i+=1){if(typeof renderedJSX>"u")return storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_2__.logger.warn("Cannot skip undefined element"),null;if(react__WEBPACK_IMPORTED_MODULE_1__.Children.count(renderedJSX)>1)return storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_2__.logger.warn("Trying to skip an array of elements"),null;typeof renderedJSX.props.children>"u"?(storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_2__.logger.warn("Not enough children to skip elements."),"function"==typeof renderedJSX.type&&""===renderedJSX.type.name&&(renderedJSX=react__WEBPACK_IMPORTED_MODULE_1__.createElement(Type,{...renderedJSX.props}))):renderedJSX="function"==typeof renderedJSX.props.children?renderedJSX.props.children():renderedJSX.props.children}displayNameDefaults="string"==typeof options?.displayName?{showFunctions:!0,displayName:()=>options.displayName}:{displayName:el=>{return el.type.displayName?el.type.displayName:(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.UO)(el.type,"displayName")?(0,storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.UO)(el.type,"displayName"):el.type.render?.displayName?el.type.render.displayName:"symbol"==typeof el.type||el.type.$$typeof&&"symbol"==typeof el.type.$$typeof?((elementType=el.type).$$typeof||elementType).toString().replace(/^Symbol\((.*)\)$/,"$1").split(".").map((segment=>segment.split("_").map(toPascalCase).join(""))).join("."):el.type.name&&"_default"!==el.type.name?el.type.name:"function"==typeof el.type?"No Display Name":el.type.$$typeof===Symbol.for("react.forward_ref")?el.type.render.name:isMemo(el.type)?el.type.type.name:el.type;var elementType}};let opts={...displayNameDefaults,filterProps:(value,key)=>void 0!==value,...options};return react__WEBPACK_IMPORTED_MODULE_1__.Children.map(code,(c=>{let child="number"==typeof c?c.toString():c,string=("function"==typeof reactElementToJSXString2?reactElementToJSXString2:reactElementToJSXString2.default)(simplifyNodeForStringify(child),opts);if(string.indexOf("&quot;")>-1){let matches=string.match(/\S+=\\"([^"]*)\\"/g);matches&&matches.forEach((match=>{string=string.replace(match,match.replace(/&quot;/g,"'"))}))}return string})).join("\n").replace(/function\s+noRefCheck\(\)\s*\{\}/g,"() => {}")},defaultOpts={skip:0,showFunctions:!1,enableBeautify:!0,showDefaultProps:!1},mdxToJsx=node=>{if(!(node=>"MDXCreateElement"===node.type?.displayName&&!!node.props?.mdxType)(node))return node;let{mdxType,originalType,children,...rest}=node.props,jsxChildren=[];return children&&(jsxChildren=(Array.isArray(children)?children:[children]).map(mdxToJsx)),(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(originalType,rest,...jsxChildren)},jsxDecorator=(storyFn,context)=>{let channel=storybook_internal_preview_api__WEBPACK_IMPORTED_MODULE_3__.addons.getChannel(),skip=(context=>{let sourceParams=context?.parameters.docs?.source,isArgsStory=context?.parameters.__isArgsStory;return sourceParams?.type!==storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Y1.DYNAMIC&&(!isArgsStory||sourceParams?.code||sourceParams?.type===storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Y1.CODE)})(context),jsx2="";(0,storybook_internal_preview_api__WEBPACK_IMPORTED_MODULE_3__.useEffect)((()=>{if(!skip){let{id,unmappedArgs}=context;channel.emit(storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.Op,{id,source:jsx2,args:unmappedArgs})}}));let story=storyFn();if(skip)return story;let options={...defaultOpts,...context?.parameters.jsx||{}},storyJsx=context?.parameters.docs?.source?.excludeDecorators?context.originalStoryFn(context.args,context):story,sourceJsx=mdxToJsx(storyJsx),rendered=renderJsx(sourceJsx,options);return rendered&&(jsx2=rendered),story},applyDecorators=(storyFn,decorators2)=>{let jsxIndex=decorators2.findIndex((d=>d.originalFn===jsxDecorator)),reorderedDecorators=-1===jsxIndex?decorators2:[...decorators2.splice(jsxIndex,1),...decorators2];return(0,storybook_internal_preview_api__WEBPACK_IMPORTED_MODULE_3__.defaultDecorateStory)(storyFn,reorderedDecorators)},parameters={docs:{story:{inline:!0},extractArgTypes:component=>{if(component){let{rows}=(component=>({rows:getPropDefs(component,"props")}))(component);if(rows)return rows.reduce(((acc,row)=>{let{name,description,type,sbType,defaultValue:defaultSummary,jsDocTags,required}=row;return acc[name]={name,description,type:{required,...sbType},table:{type:type??void 0,jsDocTags,defaultValue:defaultSummary??void 0}},acc}),{})}return null},extractComponentDescription:storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.rl}},decorators=[jsxDecorator],argTypesEnhancers=[storybook_internal_docs_tools__WEBPACK_IMPORTED_MODULE_4__.C2]},"../node_modules/.pnpm/@storybook+react@8.4.5_react-dom@18.3.1_react@18.3.1__react@18.3.1_storybook@8.4.5_prettier@3.4.1__typescript@5.7.2/node_modules/@storybook/react/dist/entry-preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{decorators:()=>decorators,mount:()=>mount,parameters:()=>parameters,render:()=>render,renderToCanvas:()=>renderToCanvas});var chunk_XP5HYGXS=__webpack_require__("../node_modules/.pnpm/@storybook+react@8.4.5_react-dom@18.3.1_react@18.3.1__react@18.3.1_storybook@8.4.5_prettier@3.4.1__typescript@5.7.2/node_modules/@storybook/react/dist/chunk-XP5HYGXS.mjs"),react=__webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),react_namespaceObject=__webpack_require__.t(react,2),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),test_utils=__webpack_require__("../node_modules/.pnpm/react-dom@18.3.1_react@18.3.1/node_modules/react-dom/test-utils.js"),process=__webpack_require__("../node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js"),require_constants=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/internal/constants.js"(exports,module){var MAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER||9007199254740991;module.exports={MAX_LENGTH:256,MAX_SAFE_COMPONENT_LENGTH:16,MAX_SAFE_BUILD_LENGTH:250,MAX_SAFE_INTEGER,RELEASE_TYPES:["major","premajor","minor","preminor","patch","prepatch","prerelease"],SEMVER_SPEC_VERSION:"2.0.0",FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2}}}),require_debug=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/internal/debug.js"(exports,module){var debug="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...args)=>console.error("SEMVER",...args):()=>{};module.exports=debug}}),require_re=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/internal/re.js"(exports,module){var{MAX_SAFE_COMPONENT_LENGTH,MAX_SAFE_BUILD_LENGTH,MAX_LENGTH}=require_constants(),debug=require_debug(),re=(exports=module.exports={}).re=[],safeRe=exports.safeRe=[],src=exports.src=[],t=exports.t={},R=0,safeRegexReplacements=[["\\s",1],["\\d",MAX_LENGTH],["[a-zA-Z0-9-]",MAX_SAFE_BUILD_LENGTH]],createToken=(name,value,isGlobal)=>{let safe=(value=>{for(let[token,max]of safeRegexReplacements)value=value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);return value})(value),index=R++;debug(name,index,value),t[name]=index,src[index]=value,re[index]=new RegExp(value,isGlobal?"g":void 0),safeRe[index]=new RegExp(safe,isGlobal?"g":void 0)};createToken("NUMERICIDENTIFIER","0|[1-9]\\d*"),createToken("NUMERICIDENTIFIERLOOSE","\\d+"),createToken("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),createToken("MAINVERSION",`(${src[t.NUMERICIDENTIFIER]})\\.(${src[t.NUMERICIDENTIFIER]})\\.(${src[t.NUMERICIDENTIFIER]})`),createToken("MAINVERSIONLOOSE",`(${src[t.NUMERICIDENTIFIERLOOSE]})\\.(${src[t.NUMERICIDENTIFIERLOOSE]})\\.(${src[t.NUMERICIDENTIFIERLOOSE]})`),createToken("PRERELEASEIDENTIFIER",`(?:${src[t.NUMERICIDENTIFIER]}|${src[t.NONNUMERICIDENTIFIER]})`),createToken("PRERELEASEIDENTIFIERLOOSE",`(?:${src[t.NUMERICIDENTIFIERLOOSE]}|${src[t.NONNUMERICIDENTIFIER]})`),createToken("PRERELEASE",`(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\.${src[t.PRERELEASEIDENTIFIER]})*))`),createToken("PRERELEASELOOSE",`(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`),createToken("BUILDIDENTIFIER","[a-zA-Z0-9-]+"),createToken("BUILD",`(?:\\+(${src[t.BUILDIDENTIFIER]}(?:\\.${src[t.BUILDIDENTIFIER]})*))`),createToken("FULLPLAIN",`v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`),createToken("FULL",`^${src[t.FULLPLAIN]}$`),createToken("LOOSEPLAIN",`[v=\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`),createToken("LOOSE",`^${src[t.LOOSEPLAIN]}$`),createToken("GTLT","((?:<|>)?=?)"),createToken("XRANGEIDENTIFIERLOOSE",`${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),createToken("XRANGEIDENTIFIER",`${src[t.NUMERICIDENTIFIER]}|x|X|\\*`),createToken("XRANGEPLAIN",`[v=\\s]*(${src[t.XRANGEIDENTIFIER]})(?:\\.(${src[t.XRANGEIDENTIFIER]})(?:\\.(${src[t.XRANGEIDENTIFIER]})(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?)?)?`),createToken("XRANGEPLAINLOOSE",`[v=\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?)?)?`),createToken("XRANGE",`^${src[t.GTLT]}\\s*${src[t.XRANGEPLAIN]}$`),createToken("XRANGELOOSE",`^${src[t.GTLT]}\\s*${src[t.XRANGEPLAINLOOSE]}$`),createToken("COERCEPLAIN",`(^|[^\\d])(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}})(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`),createToken("COERCE",`${src[t.COERCEPLAIN]}(?:$|[^\\d])`),createToken("COERCEFULL",src[t.COERCEPLAIN]+`(?:${src[t.PRERELEASE]})?(?:${src[t.BUILD]})?(?:$|[^\\d])`),createToken("COERCERTL",src[t.COERCE],!0),createToken("COERCERTLFULL",src[t.COERCEFULL],!0),createToken("LONETILDE","(?:~>?)"),createToken("TILDETRIM",`(\\s*)${src[t.LONETILDE]}\\s+`,!0),exports.tildeTrimReplace="$1~",createToken("TILDE",`^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`),createToken("TILDELOOSE",`^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`),createToken("LONECARET","(?:\\^)"),createToken("CARETTRIM",`(\\s*)${src[t.LONECARET]}\\s+`,!0),exports.caretTrimReplace="$1^",createToken("CARET",`^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`),createToken("CARETLOOSE",`^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`),createToken("COMPARATORLOOSE",`^${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]})$|^$`),createToken("COMPARATOR",`^${src[t.GTLT]}\\s*(${src[t.FULLPLAIN]})$|^$`),createToken("COMPARATORTRIM",`(\\s*)${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`,!0),exports.comparatorTrimReplace="$1$2$3",createToken("HYPHENRANGE",`^\\s*(${src[t.XRANGEPLAIN]})\\s+-\\s+(${src[t.XRANGEPLAIN]})\\s*$`),createToken("HYPHENRANGELOOSE",`^\\s*(${src[t.XRANGEPLAINLOOSE]})\\s+-\\s+(${src[t.XRANGEPLAINLOOSE]})\\s*$`),createToken("STAR","(<|>)?=?\\s*\\*"),createToken("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),createToken("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")}}),require_parse_options=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/internal/parse-options.js"(exports,module){var looseOption=Object.freeze({loose:!0}),emptyOpts=Object.freeze({});module.exports=options=>options?"object"!=typeof options?looseOption:options:emptyOpts}}),require_identifiers=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/internal/identifiers.js"(exports,module){var numeric=/^[0-9]+$/,compareIdentifiers=(a,b)=>{let anum=numeric.test(a),bnum=numeric.test(b);return anum&&bnum&&(a=+a,b=+b),a===b?0:anum&&!bnum?-1:bnum&&!anum?1:a<b?-1:1};module.exports={compareIdentifiers,rcompareIdentifiers:(a,b)=>compareIdentifiers(b,a)}}}),require_semver=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/classes/semver.js"(exports,module){var debug=require_debug(),{MAX_LENGTH,MAX_SAFE_INTEGER}=require_constants(),{safeRe:re,t}=require_re(),parseOptions=require_parse_options(),{compareIdentifiers}=require_identifiers();module.exports=class _SemVer{constructor(version2,options){if(options=parseOptions(options),version2 instanceof _SemVer){if(version2.loose===!!options.loose&&version2.includePrerelease===!!options.includePrerelease)return version2;version2=version2.version}else if("string"!=typeof version2)throw new TypeError(`Invalid version. Must be a string. Got type "${typeof version2}".`);if(version2.length>MAX_LENGTH)throw new TypeError(`version is longer than ${MAX_LENGTH} characters`);debug("SemVer",version2,options),this.options=options,this.loose=!!options.loose,this.includePrerelease=!!options.includePrerelease;let m=version2.trim().match(options.loose?re[t.LOOSE]:re[t.FULL]);if(!m)throw new TypeError(`Invalid Version: ${version2}`);if(this.raw=version2,this.major=+m[1],this.minor=+m[2],this.patch=+m[3],this.major>MAX_SAFE_INTEGER||this.major<0)throw new TypeError("Invalid major version");if(this.minor>MAX_SAFE_INTEGER||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>MAX_SAFE_INTEGER||this.patch<0)throw new TypeError("Invalid patch version");m[4]?this.prerelease=m[4].split(".").map((id=>{if(/^[0-9]+$/.test(id)){let num=+id;if(num>=0&&num<MAX_SAFE_INTEGER)return num}return id})):this.prerelease=[],this.build=m[5]?m[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(other){if(debug("SemVer.compare",this.version,this.options,other),!(other instanceof _SemVer)){if("string"==typeof other&&other===this.version)return 0;other=new _SemVer(other,this.options)}return other.version===this.version?0:this.compareMain(other)||this.comparePre(other)}compareMain(other){return other instanceof _SemVer||(other=new _SemVer(other,this.options)),compareIdentifiers(this.major,other.major)||compareIdentifiers(this.minor,other.minor)||compareIdentifiers(this.patch,other.patch)}comparePre(other){if(other instanceof _SemVer||(other=new _SemVer(other,this.options)),this.prerelease.length&&!other.prerelease.length)return-1;if(!this.prerelease.length&&other.prerelease.length)return 1;if(!this.prerelease.length&&!other.prerelease.length)return 0;let i=0;do{let a=this.prerelease[i],b=other.prerelease[i];if(debug("prerelease compare",i,a,b),void 0===a&&void 0===b)return 0;if(void 0===b)return 1;if(void 0===a)return-1;if(a!==b)return compareIdentifiers(a,b)}while(++i)}compareBuild(other){other instanceof _SemVer||(other=new _SemVer(other,this.options));let i=0;do{let a=this.build[i],b=other.build[i];if(debug("build compare",i,a,b),void 0===a&&void 0===b)return 0;if(void 0===b)return 1;if(void 0===a)return-1;if(a!==b)return compareIdentifiers(a,b)}while(++i)}inc(release,identifier,identifierBase){switch(release){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",identifier,identifierBase);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",identifier,identifierBase);break;case"prepatch":this.prerelease.length=0,this.inc("patch",identifier,identifierBase),this.inc("pre",identifier,identifierBase);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",identifier,identifierBase),this.inc("pre",identifier,identifierBase);break;case"major":(0!==this.minor||0!==this.patch||0===this.prerelease.length)&&this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":(0!==this.patch||0===this.prerelease.length)&&this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":{let base=Number(identifierBase)?1:0;if(!identifier&&!1===identifierBase)throw new Error("invalid increment argument: identifier is empty");if(0===this.prerelease.length)this.prerelease=[base];else{let i=this.prerelease.length;for(;--i>=0;)"number"==typeof this.prerelease[i]&&(this.prerelease[i]++,i=-2);if(-1===i){if(identifier===this.prerelease.join(".")&&!1===identifierBase)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(base)}}if(identifier){let prerelease=[identifier,base];!1===identifierBase&&(prerelease=[identifier]),0===compareIdentifiers(this.prerelease[0],identifier)?isNaN(this.prerelease[1])&&(this.prerelease=prerelease):this.prerelease=prerelease}break}default:throw new Error(`invalid increment argument: ${release}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}}}}),require_parse=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/parse.js"(exports,module){var SemVer=require_semver();module.exports=(version2,options,throwErrors=!1)=>{if(version2 instanceof SemVer)return version2;try{return new SemVer(version2,options)}catch(er){if(!throwErrors)return null;throw er}}}}),require_valid=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/valid.js"(exports,module){var parse=require_parse();module.exports=(version2,options)=>{let v=parse(version2,options);return v?v.version:null}}}),require_clean=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/clean.js"(exports,module){var parse=require_parse();module.exports=(version2,options)=>{let s=parse(version2.trim().replace(/^[=v]+/,""),options);return s?s.version:null}}}),require_inc=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/inc.js"(exports,module){var SemVer=require_semver();module.exports=(version2,release,options,identifier,identifierBase)=>{"string"==typeof options&&(identifierBase=identifier,identifier=options,options=void 0);try{return new SemVer(version2 instanceof SemVer?version2.version:version2,options).inc(release,identifier,identifierBase).version}catch{return null}}}}),require_diff=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/diff.js"(exports,module){var parse=require_parse();module.exports=(version1,version2)=>{let v1=parse(version1,null,!0),v2=parse(version2,null,!0),comparison=v1.compare(v2);if(0===comparison)return null;let v1Higher=comparison>0,highVersion=v1Higher?v1:v2,lowVersion=v1Higher?v2:v1,highHasPre=!!highVersion.prerelease.length;if(lowVersion.prerelease.length&&!highHasPre)return lowVersion.patch||lowVersion.minor?highVersion.patch?"patch":highVersion.minor?"minor":"major":"major";let prefix=highHasPre?"pre":"";return v1.major!==v2.major?prefix+"major":v1.minor!==v2.minor?prefix+"minor":v1.patch!==v2.patch?prefix+"patch":"prerelease"}}}),require_major=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/major.js"(exports,module){var SemVer=require_semver();module.exports=(a,loose)=>new SemVer(a,loose).major}}),require_minor=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/minor.js"(exports,module){var SemVer=require_semver();module.exports=(a,loose)=>new SemVer(a,loose).minor}}),require_patch=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/patch.js"(exports,module){var SemVer=require_semver();module.exports=(a,loose)=>new SemVer(a,loose).patch}}),require_prerelease=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/prerelease.js"(exports,module){var parse=require_parse();module.exports=(version2,options)=>{let parsed=parse(version2,options);return parsed&&parsed.prerelease.length?parsed.prerelease:null}}}),require_compare=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/compare.js"(exports,module){var SemVer=require_semver();module.exports=(a,b,loose)=>new SemVer(a,loose).compare(new SemVer(b,loose))}}),require_rcompare=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/rcompare.js"(exports,module){var compare=require_compare();module.exports=(a,b,loose)=>compare(b,a,loose)}}),require_compare_loose=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/compare-loose.js"(exports,module){var compare=require_compare();module.exports=(a,b)=>compare(a,b,!0)}}),require_compare_build=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/compare-build.js"(exports,module){var SemVer=require_semver();module.exports=(a,b,loose)=>{let versionA=new SemVer(a,loose),versionB=new SemVer(b,loose);return versionA.compare(versionB)||versionA.compareBuild(versionB)}}}),require_sort=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/sort.js"(exports,module){var compareBuild=require_compare_build();module.exports=(list,loose)=>list.sort(((a,b)=>compareBuild(a,b,loose)))}}),require_rsort=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/rsort.js"(exports,module){var compareBuild=require_compare_build();module.exports=(list,loose)=>list.sort(((a,b)=>compareBuild(b,a,loose)))}}),require_gt=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/gt.js"(exports,module){var compare=require_compare();module.exports=(a,b,loose)=>compare(a,b,loose)>0}}),require_lt=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/lt.js"(exports,module){var compare=require_compare();module.exports=(a,b,loose)=>compare(a,b,loose)<0}}),require_eq=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/eq.js"(exports,module){var compare=require_compare();module.exports=(a,b,loose)=>0===compare(a,b,loose)}}),require_neq=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/neq.js"(exports,module){var compare=require_compare();module.exports=(a,b,loose)=>0!==compare(a,b,loose)}}),require_gte=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/gte.js"(exports,module){var compare=require_compare();module.exports=(a,b,loose)=>compare(a,b,loose)>=0}}),require_lte=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/lte.js"(exports,module){var compare=require_compare();module.exports=(a,b,loose)=>compare(a,b,loose)<=0}}),require_cmp=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/cmp.js"(exports,module){var eq=require_eq(),neq=require_neq(),gt=require_gt(),gte=require_gte(),lt=require_lt(),lte=require_lte();module.exports=(a,op,b,loose)=>{switch(op){case"===":return"object"==typeof a&&(a=a.version),"object"==typeof b&&(b=b.version),a===b;case"!==":return"object"==typeof a&&(a=a.version),"object"==typeof b&&(b=b.version),a!==b;case"":case"=":case"==":return eq(a,b,loose);case"!=":return neq(a,b,loose);case">":return gt(a,b,loose);case">=":return gte(a,b,loose);case"<":return lt(a,b,loose);case"<=":return lte(a,b,loose);default:throw new TypeError(`Invalid operator: ${op}`)}}}}),require_coerce=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/coerce.js"(exports,module){var SemVer=require_semver(),parse=require_parse(),{safeRe:re,t}=require_re();module.exports=(version2,options)=>{if(version2 instanceof SemVer)return version2;if("number"==typeof version2&&(version2=String(version2)),"string"!=typeof version2)return null;let match=null;if((options=options||{}).rtl){let next,coerceRtlRegex=options.includePrerelease?re[t.COERCERTLFULL]:re[t.COERCERTL];for(;(next=coerceRtlRegex.exec(version2))&&(!match||match.index+match[0].length!==version2.length);)(!match||next.index+next[0].length!==match.index+match[0].length)&&(match=next),coerceRtlRegex.lastIndex=next.index+next[1].length+next[2].length;coerceRtlRegex.lastIndex=-1}else match=version2.match(options.includePrerelease?re[t.COERCEFULL]:re[t.COERCE]);if(null===match)return null;let major=match[2],minor=match[3]||"0",patch=match[4]||"0",prerelease=options.includePrerelease&&match[5]?`-${match[5]}`:"",build=options.includePrerelease&&match[6]?`+${match[6]}`:"";return parse(`${major}.${minor}.${patch}${prerelease}${build}`,options)}}}),require_lrucache=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/internal/lrucache.js"(exports,module){module.exports=class{constructor(){this.max=1e3,this.map=new Map}get(key){let value=this.map.get(key);if(void 0!==value)return this.map.delete(key),this.map.set(key,value),value}delete(key){return this.map.delete(key)}set(key,value){if(!this.delete(key)&&void 0!==value){if(this.map.size>=this.max){let firstKey=this.map.keys().next().value;this.delete(firstKey)}this.map.set(key,value)}return this}}}}),require_range=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/classes/range.js"(exports,module){var SPACE_CHARACTERS=/\s+/g;module.exports=class _Range{constructor(range,options){if(options=parseOptions(options),range instanceof _Range)return range.loose===!!options.loose&&range.includePrerelease===!!options.includePrerelease?range:new _Range(range.raw,options);if(range instanceof Comparator)return this.raw=range.value,this.set=[[range]],this.formatted=void 0,this;if(this.options=options,this.loose=!!options.loose,this.includePrerelease=!!options.includePrerelease,this.raw=range.trim().replace(SPACE_CHARACTERS," "),this.set=this.raw.split("||").map((r=>this.parseRange(r.trim()))).filter((c=>c.length)),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){let first=this.set[0];if(this.set=this.set.filter((c=>!isNullSet(c[0]))),0===this.set.length)this.set=[first];else if(this.set.length>1)for(let c of this.set)if(1===c.length&&isAny(c[0])){this.set=[c];break}}this.formatted=void 0}get range(){if(void 0===this.formatted){this.formatted="";for(let i=0;i<this.set.length;i++){i>0&&(this.formatted+="||");let comps=this.set[i];for(let k=0;k<comps.length;k++)k>0&&(this.formatted+=" "),this.formatted+=comps[k].toString().trim()}}return this.formatted}format(){return this.range}toString(){return this.range}parseRange(range){let memoKey=((this.options.includePrerelease&&FLAG_INCLUDE_PRERELEASE)|(this.options.loose&&FLAG_LOOSE))+":"+range,cached=cache.get(memoKey);if(cached)return cached;let loose=this.options.loose,hr=loose?re[t.HYPHENRANGELOOSE]:re[t.HYPHENRANGE];range=range.replace(hr,hyphenReplace(this.options.includePrerelease)),debug("hyphen replace",range),range=range.replace(re[t.COMPARATORTRIM],comparatorTrimReplace),debug("comparator trim",range),range=range.replace(re[t.TILDETRIM],tildeTrimReplace),debug("tilde trim",range),range=range.replace(re[t.CARETTRIM],caretTrimReplace),debug("caret trim",range);let rangeList=range.split(" ").map((comp=>parseComparator(comp,this.options))).join(" ").split(/\s+/).map((comp=>replaceGTE0(comp,this.options)));loose&&(rangeList=rangeList.filter((comp=>(debug("loose invalid filter",comp,this.options),!!comp.match(re[t.COMPARATORLOOSE]))))),debug("range list",rangeList);let rangeMap=new Map,comparators=rangeList.map((comp=>new Comparator(comp,this.options)));for(let comp of comparators){if(isNullSet(comp))return[comp];rangeMap.set(comp.value,comp)}rangeMap.size>1&&rangeMap.has("")&&rangeMap.delete("");let result=[...rangeMap.values()];return cache.set(memoKey,result),result}intersects(range,options){if(!(range instanceof _Range))throw new TypeError("a Range is required");return this.set.some((thisComparators=>isSatisfiable(thisComparators,options)&&range.set.some((rangeComparators=>isSatisfiable(rangeComparators,options)&&thisComparators.every((thisComparator=>rangeComparators.every((rangeComparator=>thisComparator.intersects(rangeComparator,options)))))))))}test(version2){if(!version2)return!1;if("string"==typeof version2)try{version2=new SemVer(version2,this.options)}catch{return!1}for(let i=0;i<this.set.length;i++)if(testSet(this.set[i],version2,this.options))return!0;return!1}};var cache=new(require_lrucache()),parseOptions=require_parse_options(),Comparator=require_comparator(),debug=require_debug(),SemVer=require_semver(),{safeRe:re,t,comparatorTrimReplace,tildeTrimReplace,caretTrimReplace}=require_re(),{FLAG_INCLUDE_PRERELEASE,FLAG_LOOSE}=require_constants(),isNullSet=c=>"<0.0.0-0"===c.value,isAny=c=>""===c.value,isSatisfiable=(comparators,options)=>{let result=!0,remainingComparators=comparators.slice(),testComparator=remainingComparators.pop();for(;result&&remainingComparators.length;)result=remainingComparators.every((otherComparator=>testComparator.intersects(otherComparator,options))),testComparator=remainingComparators.pop();return result},parseComparator=(comp,options)=>(debug("comp",comp,options),comp=replaceCarets(comp,options),debug("caret",comp),comp=replaceTildes(comp,options),debug("tildes",comp),comp=replaceXRanges(comp,options),debug("xrange",comp),comp=replaceStars(comp,options),debug("stars",comp),comp),isX=id=>!id||"x"===id.toLowerCase()||"*"===id,replaceTildes=(comp,options)=>comp.trim().split(/\s+/).map((c=>replaceTilde(c,options))).join(" "),replaceTilde=(comp,options)=>{let r=options.loose?re[t.TILDELOOSE]:re[t.TILDE];return comp.replace(r,((_,M,m,p,pr)=>{let ret;return debug("tilde",comp,_,M,m,p,pr),isX(M)?ret="":isX(m)?ret=`>=${M}.0.0 <${+M+1}.0.0-0`:isX(p)?ret=`>=${M}.${m}.0 <${M}.${+m+1}.0-0`:pr?(debug("replaceTilde pr",pr),ret=`>=${M}.${m}.${p}-${pr} <${M}.${+m+1}.0-0`):ret=`>=${M}.${m}.${p} <${M}.${+m+1}.0-0`,debug("tilde return",ret),ret}))},replaceCarets=(comp,options)=>comp.trim().split(/\s+/).map((c=>replaceCaret(c,options))).join(" "),replaceCaret=(comp,options)=>{debug("caret",comp,options);let r=options.loose?re[t.CARETLOOSE]:re[t.CARET],z=options.includePrerelease?"-0":"";return comp.replace(r,((_,M,m,p,pr)=>{let ret;return debug("caret",comp,_,M,m,p,pr),isX(M)?ret="":isX(m)?ret=`>=${M}.0.0${z} <${+M+1}.0.0-0`:isX(p)?ret="0"===M?`>=${M}.${m}.0${z} <${M}.${+m+1}.0-0`:`>=${M}.${m}.0${z} <${+M+1}.0.0-0`:pr?(debug("replaceCaret pr",pr),ret="0"===M?"0"===m?`>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p+1}-0`:`>=${M}.${m}.${p}-${pr} <${M}.${+m+1}.0-0`:`>=${M}.${m}.${p}-${pr} <${+M+1}.0.0-0`):(debug("no pr"),ret="0"===M?"0"===m?`>=${M}.${m}.${p}${z} <${M}.${m}.${+p+1}-0`:`>=${M}.${m}.${p}${z} <${M}.${+m+1}.0-0`:`>=${M}.${m}.${p} <${+M+1}.0.0-0`),debug("caret return",ret),ret}))},replaceXRanges=(comp,options)=>(debug("replaceXRanges",comp,options),comp.split(/\s+/).map((c=>replaceXRange(c,options))).join(" ")),replaceXRange=(comp,options)=>{comp=comp.trim();let r=options.loose?re[t.XRANGELOOSE]:re[t.XRANGE];return comp.replace(r,((ret,gtlt,M,m,p,pr)=>{debug("xRange",comp,ret,gtlt,M,m,p,pr);let xM=isX(M),xm=xM||isX(m),xp=xm||isX(p),anyX=xp;return"="===gtlt&&anyX&&(gtlt=""),pr=options.includePrerelease?"-0":"",xM?ret=">"===gtlt||"<"===gtlt?"<0.0.0-0":"*":gtlt&&anyX?(xm&&(m=0),p=0,">"===gtlt?(gtlt=">=",xm?(M=+M+1,m=0,p=0):(m=+m+1,p=0)):"<="===gtlt&&(gtlt="<",xm?M=+M+1:m=+m+1),"<"===gtlt&&(pr="-0"),ret=`${gtlt+M}.${m}.${p}${pr}`):xm?ret=`>=${M}.0.0${pr} <${+M+1}.0.0-0`:xp&&(ret=`>=${M}.${m}.0${pr} <${M}.${+m+1}.0-0`),debug("xRange return",ret),ret}))},replaceStars=(comp,options)=>(debug("replaceStars",comp,options),comp.trim().replace(re[t.STAR],"")),replaceGTE0=(comp,options)=>(debug("replaceGTE0",comp,options),comp.trim().replace(re[options.includePrerelease?t.GTE0PRE:t.GTE0],"")),hyphenReplace=incPr=>($0,from,fM,fm,fp,fpr,fb,to,tM,tm,tp,tpr)=>`${from=isX(fM)?"":isX(fm)?`>=${fM}.0.0${incPr?"-0":""}`:isX(fp)?`>=${fM}.${fm}.0${incPr?"-0":""}`:fpr?`>=${from}`:`>=${from}${incPr?"-0":""}`} ${to=isX(tM)?"":isX(tm)?`<${+tM+1}.0.0-0`:isX(tp)?`<${tM}.${+tm+1}.0-0`:tpr?`<=${tM}.${tm}.${tp}-${tpr}`:incPr?`<${tM}.${tm}.${+tp+1}-0`:`<=${to}`}`.trim(),testSet=(set,version2,options)=>{for(let i=0;i<set.length;i++)if(!set[i].test(version2))return!1;if(version2.prerelease.length&&!options.includePrerelease){for(let i=0;i<set.length;i++)if(debug(set[i].semver),set[i].semver!==Comparator.ANY&&set[i].semver.prerelease.length>0){let allowed=set[i].semver;if(allowed.major===version2.major&&allowed.minor===version2.minor&&allowed.patch===version2.patch)return!0}return!1}return!0}}}),require_comparator=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/classes/comparator.js"(exports,module){var ANY=Symbol("SemVer ANY");module.exports=class _Comparator{static get ANY(){return ANY}constructor(comp,options){if(options=parseOptions(options),comp instanceof _Comparator){if(comp.loose===!!options.loose)return comp;comp=comp.value}comp=comp.trim().split(/\s+/).join(" "),debug("comparator",comp,options),this.options=options,this.loose=!!options.loose,this.parse(comp),this.semver===ANY?this.value="":this.value=this.operator+this.semver.version,debug("comp",this)}parse(comp){let r=this.options.loose?re[t.COMPARATORLOOSE]:re[t.COMPARATOR],m=comp.match(r);if(!m)throw new TypeError(`Invalid comparator: ${comp}`);this.operator=void 0!==m[1]?m[1]:"","="===this.operator&&(this.operator=""),m[2]?this.semver=new SemVer(m[2],this.options.loose):this.semver=ANY}toString(){return this.value}test(version2){if(debug("Comparator.test",version2,this.options.loose),this.semver===ANY||version2===ANY)return!0;if("string"==typeof version2)try{version2=new SemVer(version2,this.options)}catch{return!1}return cmp(version2,this.operator,this.semver,this.options)}intersects(comp,options){if(!(comp instanceof _Comparator))throw new TypeError("a Comparator is required");return""===this.operator?""===this.value||new Range(comp.value,options).test(this.value):""===comp.operator?""===comp.value||new Range(this.value,options).test(comp.semver):!((options=parseOptions(options)).includePrerelease&&("<0.0.0-0"===this.value||"<0.0.0-0"===comp.value)||!options.includePrerelease&&(this.value.startsWith("<0.0.0")||comp.value.startsWith("<0.0.0")))&&!!(this.operator.startsWith(">")&&comp.operator.startsWith(">")||this.operator.startsWith("<")&&comp.operator.startsWith("<")||this.semver.version===comp.semver.version&&this.operator.includes("=")&&comp.operator.includes("=")||cmp(this.semver,"<",comp.semver,options)&&this.operator.startsWith(">")&&comp.operator.startsWith("<")||cmp(this.semver,">",comp.semver,options)&&this.operator.startsWith("<")&&comp.operator.startsWith(">"))}};var parseOptions=require_parse_options(),{safeRe:re,t}=require_re(),cmp=require_cmp(),debug=require_debug(),SemVer=require_semver(),Range=require_range()}}),require_satisfies=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/functions/satisfies.js"(exports,module){var Range=require_range();module.exports=(version2,range,options)=>{try{range=new Range(range,options)}catch{return!1}return range.test(version2)}}}),require_to_comparators=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/ranges/to-comparators.js"(exports,module){var Range=require_range();module.exports=(range,options)=>new Range(range,options).set.map((comp=>comp.map((c=>c.value)).join(" ").trim().split(" ")))}}),require_max_satisfying=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/ranges/max-satisfying.js"(exports,module){var SemVer=require_semver(),Range=require_range();module.exports=(versions,range,options)=>{let max=null,maxSV=null,rangeObj=null;try{rangeObj=new Range(range,options)}catch{return null}return versions.forEach((v=>{rangeObj.test(v)&&(!max||-1===maxSV.compare(v))&&(max=v,maxSV=new SemVer(max,options))})),max}}}),require_min_satisfying=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/ranges/min-satisfying.js"(exports,module){var SemVer=require_semver(),Range=require_range();module.exports=(versions,range,options)=>{let min=null,minSV=null,rangeObj=null;try{rangeObj=new Range(range,options)}catch{return null}return versions.forEach((v=>{rangeObj.test(v)&&(!min||1===minSV.compare(v))&&(min=v,minSV=new SemVer(min,options))})),min}}}),require_min_version=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/ranges/min-version.js"(exports,module){var SemVer=require_semver(),Range=require_range(),gt=require_gt();module.exports=(range,loose)=>{range=new Range(range,loose);let minver=new SemVer("0.0.0");if(range.test(minver)||(minver=new SemVer("0.0.0-0"),range.test(minver)))return minver;minver=null;for(let i=0;i<range.set.length;++i){let comparators=range.set[i],setMin=null;comparators.forEach((comparator=>{let compver=new SemVer(comparator.semver.version);switch(comparator.operator){case">":0===compver.prerelease.length?compver.patch++:compver.prerelease.push(0),compver.raw=compver.format();case"":case">=":(!setMin||gt(compver,setMin))&&(setMin=compver);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${comparator.operator}`)}})),setMin&&(!minver||gt(minver,setMin))&&(minver=setMin)}return minver&&range.test(minver)?minver:null}}}),require_valid2=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/ranges/valid.js"(exports,module){var Range=require_range();module.exports=(range,options)=>{try{return new Range(range,options).range||"*"}catch{return null}}}}),require_outside=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/ranges/outside.js"(exports,module){var SemVer=require_semver(),Comparator=require_comparator(),{ANY}=Comparator,Range=require_range(),satisfies=require_satisfies(),gt=require_gt(),lt=require_lt(),lte=require_lte(),gte=require_gte();module.exports=(version2,range,hilo,options)=>{let gtfn,ltefn,ltfn,comp,ecomp;switch(version2=new SemVer(version2,options),range=new Range(range,options),hilo){case">":gtfn=gt,ltefn=lte,ltfn=lt,comp=">",ecomp=">=";break;case"<":gtfn=lt,ltefn=gte,ltfn=gt,comp="<",ecomp="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(satisfies(version2,range,options))return!1;for(let i=0;i<range.set.length;++i){let comparators=range.set[i],high=null,low=null;if(comparators.forEach((comparator=>{comparator.semver===ANY&&(comparator=new Comparator(">=0.0.0")),high=high||comparator,low=low||comparator,gtfn(comparator.semver,high.semver,options)?high=comparator:ltfn(comparator.semver,low.semver,options)&&(low=comparator)})),high.operator===comp||high.operator===ecomp||(!low.operator||low.operator===comp)&&ltefn(version2,low.semver))return!1;if(low.operator===ecomp&&ltfn(version2,low.semver))return!1}return!0}}}),require_gtr=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/ranges/gtr.js"(exports,module){var outside=require_outside();module.exports=(version2,range,options)=>outside(version2,range,">",options)}}),require_ltr=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/ranges/ltr.js"(exports,module){var outside=require_outside();module.exports=(version2,range,options)=>outside(version2,range,"<",options)}}),require_intersects=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/ranges/intersects.js"(exports,module){var Range=require_range();module.exports=(r1,r2,options)=>(r1=new Range(r1,options),r2=new Range(r2,options),r1.intersects(r2,options))}}),require_simplify=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/ranges/simplify.js"(exports,module){var satisfies=require_satisfies(),compare=require_compare();module.exports=(versions,range,options)=>{let set=[],first=null,prev=null,v=versions.sort(((a,b)=>compare(a,b,options)));for(let version2 of v)satisfies(version2,range,options)?(prev=version2,first||(first=version2)):(prev&&set.push([first,prev]),prev=null,first=null);first&&set.push([first,null]);let ranges=[];for(let[min,max]of set)min===max?ranges.push(min):max||min!==v[0]?max?min===v[0]?ranges.push(`<=${max}`):ranges.push(`${min} - ${max}`):ranges.push(`>=${min}`):ranges.push("*");let simplified=ranges.join(" || "),original="string"==typeof range.raw?range.raw:String(range);return simplified.length<original.length?simplified:range}}}),require_subset=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/ranges/subset.js"(exports,module){var Range=require_range(),Comparator=require_comparator(),{ANY}=Comparator,satisfies=require_satisfies(),compare=require_compare(),minimumVersionWithPreRelease=[new Comparator(">=0.0.0-0")],minimumVersion=[new Comparator(">=0.0.0")],simpleSubset=(sub,dom,options)=>{if(sub===dom)return!0;if(1===sub.length&&sub[0].semver===ANY){if(1===dom.length&&dom[0].semver===ANY)return!0;sub=options.includePrerelease?minimumVersionWithPreRelease:minimumVersion}if(1===dom.length&&dom[0].semver===ANY){if(options.includePrerelease)return!0;dom=minimumVersion}let gt,lt,gtltComp,eqSet=new Set;for(let c of sub)">"===c.operator||">="===c.operator?gt=higherGT(gt,c,options):"<"===c.operator||"<="===c.operator?lt=lowerLT(lt,c,options):eqSet.add(c.semver);if(eqSet.size>1)return null;if(gt&&lt){if(gtltComp=compare(gt.semver,lt.semver,options),gtltComp>0)return null;if(0===gtltComp&&(">="!==gt.operator||"<="!==lt.operator))return null}for(let eq of eqSet){if(gt&&!satisfies(eq,String(gt),options)||lt&&!satisfies(eq,String(lt),options))return null;for(let c of dom)if(!satisfies(eq,String(c),options))return!1;return!0}let higher,lower,hasDomLT,hasDomGT,needDomLTPre=!(!lt||options.includePrerelease||!lt.semver.prerelease.length)&&lt.semver,needDomGTPre=!(!gt||options.includePrerelease||!gt.semver.prerelease.length)&&gt.semver;needDomLTPre&&1===needDomLTPre.prerelease.length&&"<"===lt.operator&&0===needDomLTPre.prerelease[0]&&(needDomLTPre=!1);for(let c of dom){if(hasDomGT=hasDomGT||">"===c.operator||">="===c.operator,hasDomLT=hasDomLT||"<"===c.operator||"<="===c.operator,gt)if(needDomGTPre&&c.semver.prerelease&&c.semver.prerelease.length&&c.semver.major===needDomGTPre.major&&c.semver.minor===needDomGTPre.minor&&c.semver.patch===needDomGTPre.patch&&(needDomGTPre=!1),">"===c.operator||">="===c.operator){if(higher=higherGT(gt,c,options),higher===c&&higher!==gt)return!1}else if(">="===gt.operator&&!satisfies(gt.semver,String(c),options))return!1;if(lt)if(needDomLTPre&&c.semver.prerelease&&c.semver.prerelease.length&&c.semver.major===needDomLTPre.major&&c.semver.minor===needDomLTPre.minor&&c.semver.patch===needDomLTPre.patch&&(needDomLTPre=!1),"<"===c.operator||"<="===c.operator){if(lower=lowerLT(lt,c,options),lower===c&&lower!==lt)return!1}else if("<="===lt.operator&&!satisfies(lt.semver,String(c),options))return!1;if(!c.operator&&(lt||gt)&&0!==gtltComp)return!1}return!(gt&&hasDomLT&&!lt&&0!==gtltComp||lt&&hasDomGT&&!gt&&0!==gtltComp||needDomGTPre||needDomLTPre)},higherGT=(a,b,options)=>{if(!a)return b;let comp=compare(a.semver,b.semver,options);return comp>0?a:comp<0||">"===b.operator&&">="===a.operator?b:a},lowerLT=(a,b,options)=>{if(!a)return b;let comp=compare(a.semver,b.semver,options);return comp<0?a:comp>0||"<"===b.operator&&"<="===a.operator?b:a};module.exports=(sub,dom,options={})=>{if(sub===dom)return!0;sub=new Range(sub,options),dom=new Range(dom,options);let sawNonNull=!1;OUTER:for(let simpleSub of sub.set){for(let simpleDom of dom.set){let isSub=simpleSubset(simpleSub,simpleDom,options);if(sawNonNull=sawNonNull||null!==isSub,isSub)continue OUTER}if(sawNonNull)return!1}return!0}}}),require_semver2=(0,chunk_XP5HYGXS.P$)({"../../node_modules/semver/index.js"(exports,module){var internalRe=require_re(),constants=require_constants(),SemVer=require_semver(),identifiers=require_identifiers(),parse=require_parse(),valid=require_valid(),clean=require_clean(),inc=require_inc(),diff=require_diff(),major=require_major(),minor=require_minor(),patch=require_patch(),prerelease=require_prerelease(),compare=require_compare(),rcompare=require_rcompare(),compareLoose=require_compare_loose(),compareBuild=require_compare_build(),sort=require_sort(),rsort=require_rsort(),gt=require_gt(),lt=require_lt(),eq=require_eq(),neq=require_neq(),gte=require_gte(),lte=require_lte(),cmp=require_cmp(),coerce=require_coerce(),Comparator=require_comparator(),Range=require_range(),satisfies=require_satisfies(),toComparators=require_to_comparators(),maxSatisfying=require_max_satisfying(),minSatisfying=require_min_satisfying(),minVersion=require_min_version(),validRange=require_valid2(),outside=require_outside(),gtr=require_gtr(),ltr=require_ltr(),intersects=require_intersects(),simplifyRange=require_simplify(),subset=require_subset();module.exports={parse,valid,clean,inc,diff,major,minor,patch,prerelease,compare,rcompare,compareLoose,compareBuild,sort,rsort,gt,lt,eq,neq,gte,lte,cmp,coerce,Comparator,Range,satisfies,toComparators,maxSatisfying,minSatisfying,minVersion,validRange,outside,gtr,ltr,intersects,simplifyRange,subset,SemVer,re:internalRe.re,src:internalRe.src,tokens:internalRe.t,SEMVER_SPEC_VERSION:constants.SEMVER_SPEC_VERSION,RELEASE_TYPES:constants.RELEASE_TYPES,compareIdentifiers:identifiers.compareIdentifiers,rcompareIdentifiers:identifiers.rcompareIdentifiers}}});(0,chunk_XP5HYGXS.VA)({},{decorators:()=>decorators,mount:()=>mount,parameters:()=>parameters,render:()=>render,renderToCanvas:()=>renderToCanvas});var import_semver=(0,chunk_XP5HYGXS.f1)(require_semver2()),render=(args,context)=>{let{id,component:Component}=context;if(!Component)throw new Error(`Unable to render story ${id} as the component annotation is missing from the default export`);return react.createElement(Component,{...args})},clonedReact={...react_namespaceObject};function setReactActEnvironment(isReactActEnvironment){globalThis.IS_REACT_ACT_ENVIRONMENT=isReactActEnvironment}function getReactActEnvironment(){return globalThis.IS_REACT_ACT_ENVIRONMENT}(function withGlobalActEnvironment(actImplementation){return callback=>{let previousActEnvironment=getReactActEnvironment();setReactActEnvironment(!0);try{let callbackNeedsToBeAwaited=!1,actResult=actImplementation((()=>{let result=callback();return null!==result&&"object"==typeof result&&"function"==typeof result.then&&(callbackNeedsToBeAwaited=!0),result}));if(callbackNeedsToBeAwaited){let thenable=actResult;return{then:(resolve,reject)=>{thenable.then((returnValue=>{setReactActEnvironment(previousActEnvironment),resolve(returnValue)}),(error=>{setReactActEnvironment(previousActEnvironment),reject(error)}))}}}return setReactActEnvironment(previousActEnvironment),actResult}catch(error){throw setReactActEnvironment(previousActEnvironment),error}}})("function"==typeof clonedReact.act?clonedReact.act:test_utils.act);var{FRAMEWORK_OPTIONS}=external_STORYBOOK_MODULE_GLOBAL_.global,ErrorBoundary=class extends react.Component{constructor(){super(...arguments),this.state={hasError:!1}}static getDerivedStateFromError(){return{hasError:!0}}componentDidMount(){let{hasError}=this.state,{showMain}=this.props;hasError||showMain()}componentDidCatch(err){let{showException}=this.props;showException(err)}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},Wrapper=FRAMEWORK_OPTIONS?.strictMode?react.StrictMode:react.Fragment;async function renderToCanvas({storyContext,unboundStoryFn,showMain,showException,forceRemount},canvasElement){let{renderElement,unmountElement}=await __webpack_require__.e(97).then(__webpack_require__.bind(__webpack_require__,"../node_modules/.pnpm/@storybook+react-dom-shim@8.4.5_react-dom@18.3.1_react@18.3.1__react@18.3.1_storybook@8.4.5_prettier@3.4.1_/node_modules/@storybook/react-dom-shim/dist/react-18.mjs")),Story=unboundStoryFn,content=getReactActEnvironment()?react.createElement(Story,{...storyContext}):react.createElement(ErrorBoundary,{showMain,showException},react.createElement(Story,{...storyContext})),element=Wrapper?react.createElement(Wrapper,null,content):content;return forceRemount&&unmountElement(canvasElement),await renderElement(element,canvasElement,storyContext?.parameters?.react?.rootOptions),()=>unmountElement(canvasElement)}var mount=context=>async ui=>(null!=ui&&(context.originalStoryFn=()=>ui),await context.renderToCanvas(),context.canvas),parameters={renderer:"react"},decorators=[(Story,context)=>{if(!context.parameters?.react?.rsc)return react.createElement(Story,null);let major=import_semver.default.major(react.version),minor=import_semver.default.minor(react.version);if(major<18||18===major&&minor<3)throw new Error("React Server Components require React >= 18.3");return react.createElement(react.Suspense,null,react.createElement(Story,null))}]},"../node_modules/.pnpm/@storybook+core@8.4.5_prettier@3.4.1/node_modules/@storybook/core/dist/docs-tools/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{C2:()=>cn,Op:()=>yn,Sy:()=>oe,TQ:()=>z,UO:()=>Y,Ux:()=>l,Y1:()=>gt,YF:()=>je,i3:()=>B,p6:()=>on,rl:()=>nn});var _storybook_core_preview_errors__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("storybook/internal/preview-errors"),jsdoc_type_pratt_parser__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../node_modules/.pnpm/jsdoc-type-pratt-parser@4.1.0/node_modules/jsdoc-type-pratt-parser/dist/index.js"),_storybook_core_preview_api__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("storybook/internal/preview-api"),De=Object.defineProperty,o=(e,t)=>De(e,"name",{value:t,configurable:!0}),he=o((e=>"literal"===e.name),"isLiteral"),be=o((e=>e.value.replace(/['|"]/g,"")),"toEnumOption"),Pe=o((e=>{switch(e.type){case"function":return{name:"function"};case"object":let t={};return e.signature.properties.forEach((r=>{t[r.key]=d(r.value)})),{name:"object",value:t};default:throw new _storybook_core_preview_errors__WEBPACK_IMPORTED_MODULE_0__.UnknownArgTypesError({type:e,language:"Flow"})}}),"convertSig"),d=o((e=>{let{name:t,raw:r}=e,n={};switch(typeof r<"u"&&(n.raw=r),e.name){case"literal":return{...n,name:"other",value:e.value};case"string":case"number":case"symbol":case"boolean":return{...n,name:t};case"Array":return{...n,name:"array",value:e.elements.map(d)};case"signature":return{...n,...Pe(e)};case"union":return e.elements?.every(he)?{...n,name:"enum",value:e.elements?.map(be)}:{...n,name:t,value:e.elements?.map(d)};case"intersection":return{...n,name:t,value:e.elements?.map(d)};default:return{...n,name:"other",value:t}}}),"convert");function j(e,t){let r={},n=Object.keys(e);for(let s=0;s<n.length;s++){let i=n[s],p=e[i];r[i]=t(p,i,e)}return r}o(j,"mapValues");var W=/^['"]|['"]$/g,Se=o((e=>e.replace(W,"")),"trimQuotes"),Oe=o((e=>W.test(e)),"includesQuotes"),h=o((e=>{let t=Se(e);return Oe(e)||Number.isNaN(Number(t))?t:Number(t)}),"parseLiteral"),ve=/^\(.*\) => /,x=o((e=>{let{name:t,raw:r,computed:n,value:s}=e,i={};switch(typeof r<"u"&&(i.raw=r),t){case"enum":{let a=n?s:s.map((c=>h(c.value)));return{...i,name:t,value:a}}case"string":case"number":case"symbol":case"object":return{...i,name:t};case"func":return{...i,name:"function"};case"bool":case"boolean":return{...i,name:"boolean"};case"arrayOf":case"array":return{...i,name:"array",value:s&&x(s)};case"objectOf":return{...i,name:t,value:x(s)};case"shape":case"exact":let p=j(s,(a=>x(a)));return{...i,name:"object",value:p};case"union":return{...i,name:"union",value:s.map((a=>x(a)))};default:{if(t?.indexOf("|")>0)try{let u=t.split("|").map((m=>JSON.parse(m)));return{...i,name:"enum",value:u}}catch{}let a=s?`${t}(${s})`:t,c=ve.test(t)?"function":"other";return{...i,name:c,value:a}}}}),"convert"),Ee=o((e=>{switch(e.type){case"function":return{name:"function"};case"object":let t={};return e.signature.properties.forEach((r=>{t[r.key]=D(r.value)})),{name:"object",value:t};default:throw new _storybook_core_preview_errors__WEBPACK_IMPORTED_MODULE_0__.UnknownArgTypesError({type:e,language:"Typescript"})}}),"convertSig"),D=o((e=>{let{name:t,raw:r}=e,n={};switch(typeof r<"u"&&(n.raw=r),e.name){case"string":case"number":case"symbol":case"boolean":return{...n,name:t};case"Array":return{...n,name:"array",value:e.elements.map(D)};case"signature":return{...n,...Ee(e)};case"union":let s;return s=e.elements?.every((i=>"literal"===i.name))?{...n,name:"enum",value:e.elements?.map((i=>h(i.value)))}:{...n,name:t,value:e.elements?.map(D)},s;case"intersection":return{...n,name:t,value:e.elements?.map(D)};default:return{...n,name:"other",value:t}}}),"convert"),b=o((e=>{let{type:t,tsType:r,flowType:n}=e;try{if(null!=t)return x(t);if(null!=r)return D(r);if(null!=n)return d(n)}catch(s){console.error(s)}return null}),"convert"),je=(s=>(s.JAVASCRIPT="JavaScript",s.FLOW="Flow",s.TYPESCRIPT="TypeScript",s.UNKNOWN="Unknown",s))(je||{}),ke=["null","undefined"];function T(e){return ke.some((t=>t===e))}o(T,"isDefaultValueBlacklisted");var f,e,M=o((e=>{if(!e)return"";if("string"==typeof e)return e;throw new Error(`Description: expected string, got: ${JSON.stringify(e)}`)}),"str");function z(e){return!!e.__docgenInfo}function $(e){return null!=e&&Object.keys(e).length>0}function Y(e,t){return z(e)?e.__docgenInfo[t]:null}function q(e){return z(e)?M(e.__docgenInfo.description):""}function k(e){return/^\s+$/.test(e)}function G(e){let t=e.match(/\r+$/);return null==t?["",e]:[e.slice(-t[0].length),e.slice(0,-t[0].length)]}function y(e){let t=e.match(/^\s+/);return null==t?["",e]:[e.slice(0,t[0].length),e.slice(t[0].length)]}function K(e){return e.split(/\n/)}function X(e={}){return Object.assign({tag:"",name:"",type:"",optional:!1,description:"",problems:[],source:[]},e)}function F(e={}){return Object.assign({start:"",delimiter:"",postDelimiter:"",tag:"",postTag:"",name:"",postName:"",type:"",postType:"",description:"",end:"",lineEnd:""},e)}o(z,"hasDocgen"),o($,"isValidDocgenSection"),o(Y,"getDocgenSection"),o(q,"getDocgenDescription"),(e=f=f||(f={})).start="/**",e.nostart="/***",e.delim="*",e.end="*/",o(k,"isSpace"),o(G,"splitCR"),o(y,"splitSpace"),o(K,"splitLines"),o(X,"seedSpec"),o(F,"seedTokens");var Fe=/^@\S+/;function J({fence:e="```"}={}){let t=Je(e),r=o(((n,s)=>t(n)?!s:s),"toggleFence");return o((function(s){let i=[[]],p=!1;for(let a of s)Fe.test(a.tokens.description)&&!p?i.push([a]):i[i.length-1].push(a),p=r(a.tokens.description,p);return i}),"parseBlock")}function Je(e){return"string"==typeof e?t=>t.split(e).length%2==0:e}function N({startLine:e=0,markers:t=f}={}){let r=null,n=e;return o((function(i){let p=i,a=F();if([a.lineEnd,p]=G(p),[a.start,p]=y(p),null===r&&p.startsWith(t.start)&&!p.startsWith(t.nostart)&&(r=[],a.delimiter=p.slice(0,t.start.length),p=p.slice(t.start.length),[a.postDelimiter,p]=y(p)),null===r)return n++,null;let c=p.trimRight().endsWith(t.end);if(""===a.delimiter&&p.startsWith(t.delim)&&!p.startsWith(t.end)&&(a.delimiter=t.delim,p=p.slice(t.delim.length),[a.postDelimiter,p]=y(p)),c){let u=p.trimRight();a.end=p.slice(u.length-t.end.length),p=u.slice(0,-t.end.length)}if(a.description=p,r.push({number:n,source:i,tokens:a}),n++,c){let u=r.slice();return r=null,u}return null}),"parseSource")}function R({tokenizers:e}){return o((function(r){var n;let s=X({source:r});for(let i of e)if(s=i(s),null!==(n=s.problems[s.problems.length-1])&&void 0!==n&&n.critical)break;return s}),"parseSpec")}function P(){return e=>{let{tokens:t}=e.source[0],r=t.description.match(/\s*(@(\S+))(\s*)/);return null===r?(e.problems.push({code:"spec:tag:prefix",message:'tag should start with "@" symbol',line:e.source[0].number,critical:!0}),e):(t.tag=r[1],t.postTag=r[3],t.description=t.description.slice(r[0].length),e.tag=r[2],e)}}function S(e="compact"){let t=Re(e);return r=>{let n=0,s=[];for(let[a,{tokens:c}]of r.source.entries()){let u="";if(0===a&&"{"!==c.description[0])return r;for(let m of c.description)if("{"===m&&n++,"}"===m&&n--,u+=m,0===n)break;if(s.push([c,u]),0===n)break}if(0!==n)return r.problems.push({code:"spec:type:unpaired-curlies",message:"unpaired curlies",line:r.source[0].number,critical:!0}),r;let i=[],p=s[0][0].postDelimiter.length;for(let[a,[c,u]]of s.entries())c.type=u,a>0&&(c.type=c.postDelimiter.slice(p)+u,c.postDelimiter=c.postDelimiter.slice(0,p)),[c.postType,c.description]=y(c.description.slice(u.length)),i.push(c.type);return i[0]=i[0].slice(1),i[i.length-1]=i[i.length-1].slice(0,-1),r.type=t(i),r}}o(J,"getParser"),o(Je,"getFencer"),o(N,"getParser"),o(R,"getParser"),o(P,"tagTokenizer"),o(S,"typeTokenizer");var Ne=o((e=>e.trim()),"trim");function Re(e){return"compact"===e?t=>t.map(Ne).join(""):"preserve"===e?t=>t.join("\n"):e}o(Re,"getJoiner");var Ae=o((e=>e&&e.startsWith('"')&&e.endsWith('"')),"isQuoted");function O(){let e=o(((t,{tokens:r},n)=>""===r.type?t:n),"typeEnd");return t=>{let{tokens:r}=t.source[t.source.reduce(e,0)],n=r.description.trimLeft(),s=n.split('"');if(s.length>1&&""===s[0]&&s.length%2==1)return t.name=s[1],r.name=`"${s[1]}"`,[r.postName,r.description]=y(n.slice(r.name.length)),t;let c,i=0,p="",a=!1;for(let m of n){if(0===i&&k(m))break;"["===m&&i++,"]"===m&&i--,p+=m}if(0!==i)return t.problems.push({code:"spec:name:unpaired-brackets",message:"unpaired brackets",line:t.source[0].number,critical:!0}),t;let u=p;if("["===p[0]&&"]"===p[p.length-1]){a=!0,p=p.slice(1,-1);let m=p.split("=");if(p=m[0].trim(),void 0!==m[1]&&(c=m.slice(1).join("=").trim()),""===p)return t.problems.push({code:"spec:name:empty-name",message:"empty name",line:t.source[0].number,critical:!0}),t;if(""===c)return t.problems.push({code:"spec:name:empty-default",message:"empty default value",line:t.source[0].number,critical:!0}),t;if(!Ae(c)&&/=(?!>)/.test(c))return t.problems.push({code:"spec:name:invalid-default",message:"invalid default value syntax",line:t.source[0].number,critical:!0}),t}return t.optional=a,t.name=p,r.name=u,void 0!==c&&(t.default=c),[r.postName,r.description]=y(n.slice(r.name.length)),t}}function v(e="compact",t=f){let r=A(e);return n=>(n.description=r(n.source,t),n)}function A(e){return"compact"===e?Ve:"preserve"===e?Be:e}function Ve(e,t=f){return e.map((({tokens:{description:r}})=>r.trim())).filter((r=>""!==r)).join(" ")}o(O,"nameTokenizer"),o(v,"descriptionTokenizer"),o(A,"getJoiner"),o(Ve,"compactJoiner");var Ce=o(((e,{tokens:t},r)=>""===t.type?e:r),"lineNo"),_e=o((({tokens:e})=>(""===e.delimiter?e.start:e.postDelimiter.slice(1))+e.description),"getDescription");function Be(e,t=f){if(0===e.length)return"";""===e[0].tokens.description&&e[0].tokens.delimiter===t.start&&(e=e.slice(1));let r=e[e.length-1];return void 0!==r&&""===r.tokens.description&&r.tokens.end.endsWith(t.end)&&(e=e.slice(0,-1)),(e=e.slice(e.reduce(Ce,0))).map(_e).join("\n")}function V({startLine:e=0,fence:t="```",spacing:r="compact",markers:n=f,tokenizers:s=[e=>{let{tokens:t}=e.source[0],r=t.description.match(/\s*(@(\S+))(\s*)/);return null===r?(e.problems.push({code:"spec:tag:prefix",message:'tag should start with "@" symbol',line:e.source[0].number,critical:!0}),e):(t.tag=r[1],t.postTag=r[3],t.description=t.description.slice(r[0].length),e.tag=r[2],e)},S(r),O(),v(r)]}={}){if(e<0||e%1>0)throw new Error("Invalid startLine");let i=N({startLine:e,markers:n}),p=J({fence:t}),a=R({tokenizers:s}),c=A(r);return function(u){let m=[];for(let ge of K(u)){let E=i(ge);if(null===E)continue;let L=p(E),U=L.slice(1).map(a);m.push({description:c(L[0],n),tags:U,source:E,problems:U.reduce(((de,xe)=>de.concat(xe.problems)),[])})}return m}}function Ie(e){return e.start+e.delimiter+e.postDelimiter+e.tag+e.postTag+e.type+e.postType+e.name+e.postName+e.description+e.end+e.lineEnd}function C(){return e=>e.source.map((({tokens:t})=>Ie(t))).join("\n")}o(Be,"preserveJoiner"),o(V,"getParser"),o(Ie,"join"),o(C,"getStringifier");Object.keys({line:0,start:0,delimiter:0,postDelimiter:0,tag:0,postTag:0,name:0,postName:0,type:0,postType:0,description:0,end:0,lineEnd:0});function H(e,t={}){return V(t)(e)}o(H,"parse");C();function ze(e){return null!=e&&e.includes("@")}function $e(e){let s=H("/**\n"+(e??"").split("\n").map((i=>` * ${i}`)).join("\n")+"\n*/",{spacing:"preserve"});if(!s||0===s.length)throw new Error("Cannot parse JSDoc tags.");return s[0]}o(ze,"containsJsDoc"),o($e,"parse");var Ye={tags:["param","arg","argument","returns","ignore","deprecated"]},Q=o(((e,t=Ye)=>{if(!ze(e))return{includesJsDoc:!1,ignore:!1};let r=$e(e),n=qe(r,t.tags);return n.ignore?{includesJsDoc:!0,ignore:!0}:{includesJsDoc:!0,ignore:!1,description:r.description.trim(),extractedTags:n}}),"parseJsDoc");function qe(e,t){let r={params:null,deprecated:null,returns:null,ignore:!1};for(let n of e.tags)if(void 0===t||t.includes(n.tag)){if("ignore"===n.tag){r.ignore=!0;break}switch(n.tag){case"param":case"arg":case"argument":{let s=Ke(n);null!=s&&(null==r.params&&(r.params=[]),r.params.push(s));break}case"deprecated":{let s=Xe(n);null!=s&&(r.deprecated=s);break}case"returns":{let s=He(n);null!=s&&(r.returns=s);break}}}return r}function Ge(e){return e.replace(/[\.-]$/,"")}function Ke(e){if(!e.name||"-"===e.name)return null;let t=te(e.type);return{name:e.name,type:t,description:ee(e.description),getPrettyName:o((()=>Ge(e.name)),"getPrettyName"),getTypeName:o((()=>t?re(t):null),"getTypeName")}}function Xe(e){return e.name?Z(e.name,e.description):null}function Z(e,t){return ee(""===e?t:`${e} ${t}`)}function ee(e){let t=e.replace(/^- /g,"").trim();return""===t?null:t}function He(e){let t=te(e.type);return t?{type:t,description:Z(e.name,e.description),getTypeName:o((()=>re(t)),"getTypeName")}:null}o(qe,"extractJsDocTags"),o(Ge,"normaliseParamName"),o(Ke,"extractParam"),o(Xe,"extractDeprecated"),o(Z,"joinNameAndDescription"),o(ee,"normaliseDescription"),o(He,"extractReturns");var g=(0,jsdoc_type_pratt_parser__WEBPACK_IMPORTED_MODULE_1__.stringifyRules)(),Qe=g.JsdocTypeObject;function te(e){try{return(0,jsdoc_type_pratt_parser__WEBPACK_IMPORTED_MODULE_1__.parse)(e,"typescript")}catch{return null}}function re(e){return(0,jsdoc_type_pratt_parser__WEBPACK_IMPORTED_MODULE_1__.transform)(g,e)}g.JsdocTypeAny=()=>"any",g.JsdocTypeObject=(e,t)=>`(${Qe(e,t)})`,g.JsdocTypeOptional=(e,t)=>t(e.element),g.JsdocTypeNullable=(e,t)=>t(e.element),g.JsdocTypeNotNullable=(e,t)=>t(e.element),g.JsdocTypeUnion=(e,t)=>e.elements.map(t).join("|"),o(te,"extractType"),o(re,"extractTypeName");function B(e){return e.length>90}function oe(e){return e.length>50}function l(e,t){return e===t?{summary:e}:{summary:e,detail:t}}o(B,"isTooLongForTypeSummary"),o(oe,"isTooLongForDefaultValueSummary"),o(l,"createSummaryValue");function ne(e,t){if(null!=e){let{value:r}=e;if(!T(r))return oe(r)?l(t?.name,r):l(r)}return null}function se({name:e,value:t,elements:r,raw:n}){return t??(null!=r?r.map(se).join(" | "):n??e)}function Ze({name:e,raw:t,elements:r}){return l(null!=r?r.map(se).join(" | "):null!=t?t.replace(/^\|\s*/,""):e)}function et({type:e,raw:t}){return l(null!=t?t:e)}function tt({type:e,raw:t}){return null!=t?B(t)?l(e,t):l(t):l(e)}function rt(e){let{type:t}=e;return"object"===t?tt(e):et(e)}function ot({name:e,raw:t}){return null!=t?B(t)?l(e,t):l(t):l(e)}function ie(e){if(null==e)return null;switch(e.name){case"union":return Ze(e);case"signature":return rt(e);default:return ot(e)}}o(ne,"createDefaultValue"),o(se,"generateUnionElement"),o(Ze,"generateUnion"),o(et,"generateFuncSignature"),o(tt,"generateObjectSignature"),o(rt,"generateSignature"),o(ot,"generateDefault"),o(ie,"createType");var pe=o(((e,t)=>{let{flowType:r,description:n,required:s,defaultValue:i}=t;return{name:e,type:ie(r),required:s,description:n,defaultValue:ne(i??null,r??null)}}),"createFlowPropDef");function ae({defaultValue:e}){if(null!=e){let{value:t}=e;if(!T(t))return l(t)}return null}function ce({tsType:e,required:t}){if(null==e)return null;let r=e.name;return t||(r=r.replace(" | undefined","")),l(["Array","Record","signature"].includes(e.name)?e.raw:r)}o(ae,"createDefaultValue"),o(ce,"createType");var le=o(((e,t)=>{let{description:r,required:n}=t;return{name:e,type:ce(t),required:n,description:r,defaultValue:ae(t)}}),"createTsPropDef");function nt(e){return null!=e?l(e.name):null}function st(e){let{computed:t,func:r}=e;return typeof t>"u"&&typeof r>"u"}function it(e){return!!e&&("string"===e.name||"enum"===e.name&&(Array.isArray(e.value)&&e.value.every((({value:t})=>"string"==typeof t&&'"'===t[0]&&'"'===t[t.length-1]))))}function pt(e,t){if(null!=e){let{value:r}=e;if(!T(r))return st(e)&&it(t)?l(JSON.stringify(r)):l(r)}return null}function ue(e,t,r){let{description:n,required:s,defaultValue:i}=r;return{name:e,type:nt(t),required:s,description:n,defaultValue:pt(i,t)}}function w(e,t){if(t?.includesJsDoc){let{description:r,extractedTags:n}=t;null!=r&&(e.description=t.description);let s={...n,params:n?.params?.map((i=>({name:i.getPrettyName(),description:i.description})))};Object.values(s).filter(Boolean).length>0&&(e.jsDocTags=s)}return e}o(nt,"createType"),o(st,"isReactDocgenTypescript"),o(it,"isStringValued"),o(pt,"createDefaultValue"),o(ue,"createBasicPropDef"),o(w,"applyJsDocResult");var at=o(((e,t,r)=>{let n=ue(e,t.type,t);return n.sbType=b(t),w(n,r)}),"javaScriptFactory"),ct=o(((e,t,r)=>{let n=le(e,t);return n.sbType=b(t),w(n,r)}),"tsFactory"),lt=o(((e,t,r)=>{let n=pe(e,t);return n.sbType=b(t),w(n,r)}),"flowFactory"),ut=o(((e,t,r)=>w(ue(e,{name:"unknown"},t),r)),"unknownFactory"),I=o((e=>{switch(e){case"JavaScript":return at;case"TypeScript":return ct;case"Flow":return lt;default:return ut}}),"getPropDefFactory"),me=o((e=>null!=e.type?"JavaScript":null!=e.flowType?"Flow":null!=e.tsType?"TypeScript":"Unknown"),"getTypeSystem"),mt=o((e=>{let t=me(e[0]),r=I(t);return e.map((n=>{let s=n;return n.type?.elements&&(s={...n,type:{...n.type,value:n.type.elements}}),fe(s.name,s,t,r)}))}),"extractComponentSectionArray"),ft=o((e=>{let t=Object.keys(e),r=me(e[t[0]]),n=I(r);return t.map((s=>{let i=e[s];return null!=i?fe(s,i,r,n):null})).filter(Boolean)}),"extractComponentSectionObject"),on=o(((e,t)=>{let r=Y(e,t);return $(r)?Array.isArray(r)?mt(r):ft(r):[]}),"extractComponentProps");function fe(e,t,r,n){let s=Q(t.description);return s.includesJsDoc&&s.ignore?null:{propDef:n(e,t,s),jsDocTags:s.extractedTags,docgenInfo:t,typeSystem:r}}function nn(e){return null!=e?q(e):""}o(fe,"extractProp"),o(nn,"extractComponentDescription");var cn=o((e=>{let{component:t,argTypes:r,parameters:{docs:n={}}}=e,{extractArgTypes:s}=n,i=s&&t?s(t):{};return i?(0,_storybook_core_preview_api__WEBPACK_IMPORTED_MODULE_2__.combineParameters)(i,r):r}),"enhanceArgTypes"),ye="storybook/docs",yn=`${ye}/snippet-rendered`,gt=(n=>(n.AUTO="auto",n.CODE="code",n.DYNAMIC="dynamic",n))(gt||{})},"../node_modules/.pnpm/jsdoc-type-pratt-parser@4.1.0/node_modules/jsdoc-type-pratt-parser/dist/index.js":function(__unused_webpack_module,exports){!function(exports){"use strict";function tokenToString(token){return void 0!==token.text&&""!==token.text?`'${token.type}' with value '${token.text}'`:`'${token.type}'`}class NoParsletFoundError extends Error{constructor(token){super(`No parslet found for token: ${tokenToString(token)}`),this.token=token,Object.setPrototypeOf(this,NoParsletFoundError.prototype)}getToken(){return this.token}}class EarlyEndOfParseError extends Error{constructor(token){super(`The parsing ended early. The next token was: ${tokenToString(token)}`),this.token=token,Object.setPrototypeOf(this,EarlyEndOfParseError.prototype)}getToken(){return this.token}}class UnexpectedTypeError extends Error{constructor(result,message){let error=`Unexpected type: '${result.type}'.`;void 0!==message&&(error+=` Message: ${message}`),super(error),Object.setPrototypeOf(this,UnexpectedTypeError.prototype)}}function makePunctuationRule(type){return text=>text.startsWith(type)?{type,text:type}:null}function getQuoted(text){let char,position=0;const mark=text[0];let escaped=!1;if("'"!==mark&&'"'!==mark)return null;for(;position<text.length;){if(position++,char=text[position],!escaped&&char===mark){position++;break}escaped=!escaped&&"\\"===char}if(char!==mark)throw new Error("Unterminated String");return text.slice(0,position)}const identifierStartRegex=/[$_\p{ID_Start}]|\\u\p{Hex_Digit}{4}|\\u\{0*(?:\p{Hex_Digit}{1,5}|10\p{Hex_Digit}{4})\}/u,identifierContinueRegex=/[$\-\p{ID_Continue}\u200C\u200D]|\\u\p{Hex_Digit}{4}|\\u\{0*(?:\p{Hex_Digit}{1,5}|10\p{Hex_Digit}{4})\}/u;function getIdentifier(text){let char=text[0];if(!identifierStartRegex.test(char))return null;let position=1;do{if(char=text[position],!identifierContinueRegex.test(char))break;position++}while(position<text.length);return text.slice(0,position)}const numberRegex=/^(NaN|-?((\d*\.\d+|\d+)([Ee][+-]?\d+)?|Infinity))/;function getNumber(text){var _a,_b;return null!==(_b=null===(_a=numberRegex.exec(text))||void 0===_a?void 0:_a[0])&&void 0!==_b?_b:null}const identifierRule=text=>{const value=getIdentifier(text);return null==value?null:{type:"Identifier",text:value}};function makeKeyWordRule(type){return text=>{if(!text.startsWith(type))return null;const prepends=text[type.length];return void 0!==prepends&&identifierContinueRegex.test(prepends)?null:{type,text:type}}}const stringValueRule=text=>{const value=getQuoted(text);return null==value?null:{type:"StringValue",text:value}},numberRule=text=>{const value=getNumber(text);return null===value?null:{type:"Number",text:value}},rules=[text=>text.length>0?null:{type:"EOF",text:""},makePunctuationRule("=>"),makePunctuationRule("("),makePunctuationRule(")"),makePunctuationRule("{"),makePunctuationRule("}"),makePunctuationRule("["),makePunctuationRule("]"),makePunctuationRule("|"),makePunctuationRule("&"),makePunctuationRule("<"),makePunctuationRule(">"),makePunctuationRule(","),makePunctuationRule(";"),makePunctuationRule("*"),makePunctuationRule("?"),makePunctuationRule("!"),makePunctuationRule("="),makePunctuationRule(":"),makePunctuationRule("..."),makePunctuationRule("."),makePunctuationRule("#"),makePunctuationRule("~"),makePunctuationRule("/"),makePunctuationRule("@"),makeKeyWordRule("undefined"),makeKeyWordRule("null"),makeKeyWordRule("function"),makeKeyWordRule("this"),makeKeyWordRule("new"),makeKeyWordRule("module"),makeKeyWordRule("event"),makeKeyWordRule("external"),makeKeyWordRule("typeof"),makeKeyWordRule("keyof"),makeKeyWordRule("readonly"),makeKeyWordRule("import"),makeKeyWordRule("is"),makeKeyWordRule("in"),makeKeyWordRule("asserts"),numberRule,identifierRule,stringValueRule],breakingWhitespaceRegex=/^\s*\n\s*/;class Lexer{static create(text){const current=this.read(text);text=current.text;const next=this.read(text);return text=next.text,new Lexer(text,void 0,current.token,next.token)}constructor(text,previous,current,next){this.text="",this.text=text,this.previous=previous,this.current=current,this.next=next}static read(text,startOfLine=!1){startOfLine=startOfLine||breakingWhitespaceRegex.test(text),text=text.trim();for(const rule of rules){const partial=rule(text);if(null!==partial){const token=Object.assign(Object.assign({},partial),{startOfLine});return{text:text=text.slice(token.text.length),token}}}throw new Error("Unexpected Token "+text)}advance(){const next=Lexer.read(this.text);return new Lexer(next.text,this.current,this.next,next.token)}}function assertRootResult(result){if(void 0===result)throw new Error("Unexpected undefined");if("JsdocTypeKeyValue"===result.type||"JsdocTypeParameterList"===result.type||"JsdocTypeProperty"===result.type||"JsdocTypeReadonlyProperty"===result.type||"JsdocTypeObjectField"===result.type||"JsdocTypeJsdocObjectField"===result.type||"JsdocTypeIndexSignature"===result.type||"JsdocTypeMappedType"===result.type)throw new UnexpectedTypeError(result);return result}function assertPlainKeyValueOrRootResult(result){return"JsdocTypeKeyValue"===result.type?assertPlainKeyValueResult(result):assertRootResult(result)}function assertPlainKeyValueOrNameResult(result){return"JsdocTypeName"===result.type?result:assertPlainKeyValueResult(result)}function assertPlainKeyValueResult(result){if("JsdocTypeKeyValue"!==result.type)throw new UnexpectedTypeError(result);return result}function assertNumberOrVariadicNameResult(result){var _a;if("JsdocTypeVariadic"===result.type){if("JsdocTypeName"===(null===(_a=result.element)||void 0===_a?void 0:_a.type))return result;throw new UnexpectedTypeError(result)}if("JsdocTypeNumber"!==result.type&&"JsdocTypeName"!==result.type)throw new UnexpectedTypeError(result);return result}function isSquaredProperty(result){return"JsdocTypeIndexSignature"===result.type||"JsdocTypeMappedType"===result.type}var Precedence;!function(Precedence){Precedence[Precedence.ALL=0]="ALL",Precedence[Precedence.PARAMETER_LIST=1]="PARAMETER_LIST",Precedence[Precedence.OBJECT=2]="OBJECT",Precedence[Precedence.KEY_VALUE=3]="KEY_VALUE",Precedence[Precedence.INDEX_BRACKETS=4]="INDEX_BRACKETS",Precedence[Precedence.UNION=5]="UNION",Precedence[Precedence.INTERSECTION=6]="INTERSECTION",Precedence[Precedence.PREFIX=7]="PREFIX",Precedence[Precedence.INFIX=8]="INFIX",Precedence[Precedence.TUPLE=9]="TUPLE",Precedence[Precedence.SYMBOL=10]="SYMBOL",Precedence[Precedence.OPTIONAL=11]="OPTIONAL",Precedence[Precedence.NULLABLE=12]="NULLABLE",Precedence[Precedence.KEY_OF_TYPE_OF=13]="KEY_OF_TYPE_OF",Precedence[Precedence.FUNCTION=14]="FUNCTION",Precedence[Precedence.ARROW=15]="ARROW",Precedence[Precedence.ARRAY_BRACKETS=16]="ARRAY_BRACKETS",Precedence[Precedence.GENERIC=17]="GENERIC",Precedence[Precedence.NAME_PATH=18]="NAME_PATH",Precedence[Precedence.PARENTHESIS=19]="PARENTHESIS",Precedence[Precedence.SPECIAL_TYPES=20]="SPECIAL_TYPES"}(Precedence||(Precedence={}));class Parser{constructor(grammar,textOrLexer,baseParser){this.grammar=grammar,this._lexer="string"==typeof textOrLexer?Lexer.create(textOrLexer):textOrLexer,this.baseParser=baseParser}get lexer(){return this._lexer}parse(){const result=this.parseType(Precedence.ALL);if("EOF"!==this.lexer.current.type)throw new EarlyEndOfParseError(this.lexer.current);return result}parseType(precedence){return assertRootResult(this.parseIntermediateType(precedence))}parseIntermediateType(precedence){const result=this.tryParslets(null,precedence);if(null===result)throw new NoParsletFoundError(this.lexer.current);return this.parseInfixIntermediateType(result,precedence)}parseInfixIntermediateType(left,precedence){let result=this.tryParslets(left,precedence);for(;null!==result;)left=result,result=this.tryParslets(left,precedence);return left}tryParslets(left,precedence){for(const parslet of this.grammar){const result=parslet(this,precedence,left);if(null!==result)return result}return null}consume(types){return Array.isArray(types)||(types=[types]),!!types.includes(this.lexer.current.type)&&(this._lexer=this.lexer.advance(),!0)}acceptLexerState(parser){this._lexer=parser.lexer}}function isQuestionMarkUnknownType(next){return"EOF"===next||"|"===next||","===next||")"===next||">"===next}const nullableParslet=(parser,precedence,left)=>{const type=parser.lexer.current.type,next=parser.lexer.next.type;return null==left&&"?"===type&&!isQuestionMarkUnknownType(next)||null!=left&&"?"===type?(parser.consume("?"),null==left?{type:"JsdocTypeNullable",element:parser.parseType(Precedence.NULLABLE),meta:{position:"prefix"}}:{type:"JsdocTypeNullable",element:assertRootResult(left),meta:{position:"suffix"}}):null};function composeParslet(options){const parslet=(parser,curPrecedence,left)=>{const type=parser.lexer.current.type,next=parser.lexer.next.type;if(null===left){if("parsePrefix"in options&&options.accept(type,next))return options.parsePrefix(parser)}else if("parseInfix"in options&&options.precedence>curPrecedence&&options.accept(type,next))return options.parseInfix(parser,left);return null};return Object.defineProperty(parslet,"name",{value:options.name}),parslet}const optionalParslet=composeParslet({name:"optionalParslet",accept:type=>"="===type,precedence:Precedence.OPTIONAL,parsePrefix:parser=>(parser.consume("="),{type:"JsdocTypeOptional",element:parser.parseType(Precedence.OPTIONAL),meta:{position:"prefix"}}),parseInfix:(parser,left)=>(parser.consume("="),{type:"JsdocTypeOptional",element:assertRootResult(left),meta:{position:"suffix"}})}),numberParslet=composeParslet({name:"numberParslet",accept:type=>"Number"===type,parsePrefix:parser=>{const value=parseFloat(parser.lexer.current.text);return parser.consume("Number"),{type:"JsdocTypeNumber",value}}}),parenthesisParslet=composeParslet({name:"parenthesisParslet",accept:type=>"("===type,parsePrefix:parser=>{if(parser.consume("("),parser.consume(")"))return{type:"JsdocTypeParameterList",elements:[]};const result=parser.parseIntermediateType(Precedence.ALL);if(!parser.consume(")"))throw new Error("Unterminated parenthesis");return"JsdocTypeParameterList"===result.type?result:"JsdocTypeKeyValue"===result.type?{type:"JsdocTypeParameterList",elements:[result]}:{type:"JsdocTypeParenthesis",element:assertRootResult(result)}}}),specialTypesParslet=composeParslet({name:"specialTypesParslet",accept:(type,next)=>"?"===type&&isQuestionMarkUnknownType(next)||"null"===type||"undefined"===type||"*"===type,parsePrefix:parser=>{if(parser.consume("null"))return{type:"JsdocTypeNull"};if(parser.consume("undefined"))return{type:"JsdocTypeUndefined"};if(parser.consume("*"))return{type:"JsdocTypeAny"};if(parser.consume("?"))return{type:"JsdocTypeUnknown"};throw new Error("Unacceptable token: "+parser.lexer.current.text)}}),notNullableParslet=composeParslet({name:"notNullableParslet",accept:type=>"!"===type,precedence:Precedence.NULLABLE,parsePrefix:parser=>(parser.consume("!"),{type:"JsdocTypeNotNullable",element:parser.parseType(Precedence.NULLABLE),meta:{position:"prefix"}}),parseInfix:(parser,left)=>(parser.consume("!"),{type:"JsdocTypeNotNullable",element:assertRootResult(left),meta:{position:"suffix"}})});function createParameterListParslet({allowTrailingComma}){return composeParslet({name:"parameterListParslet",accept:type=>","===type,precedence:Precedence.PARAMETER_LIST,parseInfix:(parser,left)=>{const elements=[assertPlainKeyValueOrRootResult(left)];parser.consume(",");do{try{const next=parser.parseIntermediateType(Precedence.PARAMETER_LIST);elements.push(assertPlainKeyValueOrRootResult(next))}catch(e){if(allowTrailingComma&&e instanceof NoParsletFoundError)break;throw e}}while(parser.consume(","));if(elements.length>0&&elements.slice(0,-1).some((e=>"JsdocTypeVariadic"===e.type)))throw new Error("Only the last parameter may be a rest parameter");return{type:"JsdocTypeParameterList",elements}}})}const genericParslet=composeParslet({name:"genericParslet",accept:(type,next)=>"<"===type||"."===type&&"<"===next,precedence:Precedence.GENERIC,parseInfix:(parser,left)=>{const dot=parser.consume(".");parser.consume("<");const objects=[];do{objects.push(parser.parseType(Precedence.PARAMETER_LIST))}while(parser.consume(","));if(!parser.consume(">"))throw new Error("Unterminated generic parameter list");return{type:"JsdocTypeGeneric",left:assertRootResult(left),elements:objects,meta:{brackets:"angle",dot}}}}),unionParslet=composeParslet({name:"unionParslet",accept:type=>"|"===type,precedence:Precedence.UNION,parseInfix:(parser,left)=>{parser.consume("|");const elements=[];do{elements.push(parser.parseType(Precedence.UNION))}while(parser.consume("|"));return{type:"JsdocTypeUnion",elements:[assertRootResult(left),...elements]}}}),baseGrammar=[nullableParslet,optionalParslet,numberParslet,parenthesisParslet,specialTypesParslet,notNullableParslet,createParameterListParslet({allowTrailingComma:!0}),genericParslet,unionParslet,optionalParslet];function createNamePathParslet({allowSquareBracketsOnAnyType,allowJsdocNamePaths,pathGrammar}){return function namePathParslet(parser,precedence,left){if(null==left||precedence>=Precedence.NAME_PATH)return null;const type=parser.lexer.current.type,next=parser.lexer.next.type;if(!("."===type&&"<"!==next||"["===type&&(allowSquareBracketsOnAnyType||"JsdocTypeName"===left.type)||allowJsdocNamePaths&&("~"===type||"#"===type)))return null;let pathType,brackets=!1;parser.consume(".")?pathType="property":parser.consume("[")?(pathType="property-brackets",brackets=!0):parser.consume("~")?pathType="inner":(parser.consume("#"),pathType="instance");const pathParser=null!==pathGrammar?new Parser(pathGrammar,parser.lexer,parser):parser,parsed=pathParser.parseIntermediateType(Precedence.NAME_PATH);let right;switch(parser.acceptLexerState(pathParser),parsed.type){case"JsdocTypeName":right={type:"JsdocTypeProperty",value:parsed.value,meta:{quote:void 0}};break;case"JsdocTypeNumber":right={type:"JsdocTypeProperty",value:parsed.value.toString(10),meta:{quote:void 0}};break;case"JsdocTypeStringValue":right={type:"JsdocTypeProperty",value:parsed.value,meta:{quote:parsed.meta.quote}};break;case"JsdocTypeSpecialNamePath":if("event"!==parsed.specialType)throw new UnexpectedTypeError(parsed,"Type 'JsdocTypeSpecialNamePath' is only allowed with specialType 'event'");right=parsed;break;default:throw new UnexpectedTypeError(parsed,"Expecting 'JsdocTypeName', 'JsdocTypeNumber', 'JsdocStringValue' or 'JsdocTypeSpecialNamePath'")}if(brackets&&!parser.consume("]")){const token=parser.lexer.current;throw new Error(`Unterminated square brackets. Next token is '${token.type}' with text '${token.text}'`)}return{type:"JsdocTypeNamePath",left:assertRootResult(left),right,pathType}}}function createNameParslet({allowedAdditionalTokens}){return composeParslet({name:"nameParslet",accept:type=>"Identifier"===type||"this"===type||"new"===type||allowedAdditionalTokens.includes(type),parsePrefix:parser=>{const{type,text}=parser.lexer.current;return parser.consume(type),{type:"JsdocTypeName",value:text}}})}const stringValueParslet=composeParslet({name:"stringValueParslet",accept:type=>"StringValue"===type,parsePrefix:parser=>{const text=parser.lexer.current.text;return parser.consume("StringValue"),{type:"JsdocTypeStringValue",value:text.slice(1,-1),meta:{quote:"'"===text[0]?"single":"double"}}}});function createSpecialNamePathParslet({pathGrammar,allowedTypes}){return composeParslet({name:"specialNamePathParslet",accept:type=>allowedTypes.includes(type),parsePrefix:parser=>{const type=parser.lexer.current.type;if(parser.consume(type),!parser.consume(":"))return{type:"JsdocTypeName",value:type};let result,token=parser.lexer.current;if(parser.consume("StringValue"))result={type:"JsdocTypeSpecialNamePath",value:token.text.slice(1,-1),specialType:type,meta:{quote:"'"===token.text[0]?"single":"double"}};else{let value="";const allowed=["Identifier","@","/"];for(;allowed.some((type=>parser.consume(type)));)value+=token.text,token=parser.lexer.current;result={type:"JsdocTypeSpecialNamePath",value,specialType:type,meta:{quote:void 0}}}const moduleParser=new Parser(pathGrammar,parser.lexer,parser),moduleResult=moduleParser.parseInfixIntermediateType(result,Precedence.ALL);return parser.acceptLexerState(moduleParser),assertRootResult(moduleResult)}})}const basePathGrammar=[createNameParslet({allowedAdditionalTokens:["external","module"]}),stringValueParslet,numberParslet,createNamePathParslet({allowSquareBracketsOnAnyType:!1,allowJsdocNamePaths:!0,pathGrammar:null})],pathGrammar=[...basePathGrammar,createSpecialNamePathParslet({allowedTypes:["event"],pathGrammar:basePathGrammar})];function getParameters(value){let parameters;if("JsdocTypeParameterList"===value.type)parameters=value.elements;else{if("JsdocTypeParenthesis"!==value.type)throw new UnexpectedTypeError(value);parameters=[value.element]}return parameters.map((p=>assertPlainKeyValueOrRootResult(p)))}function getUnnamedParameters(value){const parameters=getParameters(value);if(parameters.some((p=>"JsdocTypeKeyValue"===p.type)))throw new Error("No parameter should be named");return parameters}function createFunctionParslet({allowNamedParameters,allowNoReturnType,allowWithoutParenthesis,allowNewAsFunctionKeyword}){return composeParslet({name:"functionParslet",accept:(type,next)=>"function"===type||allowNewAsFunctionKeyword&&"new"===type&&"("===next,parsePrefix:parser=>{const newKeyword=parser.consume("new");parser.consume("function");const hasParenthesis="("===parser.lexer.current.type;if(!hasParenthesis){if(!allowWithoutParenthesis)throw new Error("function is missing parameter list");return{type:"JsdocTypeName",value:"function"}}let result={type:"JsdocTypeFunction",parameters:[],arrow:!1,constructor:newKeyword,parenthesis:hasParenthesis};const value=parser.parseIntermediateType(Precedence.FUNCTION);if(void 0===allowNamedParameters)result.parameters=getUnnamedParameters(value);else{if(newKeyword&&"JsdocTypeFunction"===value.type&&value.arrow)return result=value,result.constructor=!0,result;result.parameters=getParameters(value);for(const p of result.parameters)if("JsdocTypeKeyValue"===p.type&&!allowNamedParameters.includes(p.key))throw new Error(`only allowed named parameters are ${allowNamedParameters.join(", ")} but got ${p.type}`)}if(parser.consume(":"))result.returnType=parser.parseType(Precedence.PREFIX);else if(!allowNoReturnType)throw new Error("function is missing return type");return result}})}function createVariadicParslet({allowPostfix,allowEnclosingBrackets}){return composeParslet({name:"variadicParslet",accept:type=>"..."===type,precedence:Precedence.PREFIX,parsePrefix:parser=>{parser.consume("...");const brackets=allowEnclosingBrackets&&parser.consume("[");try{const element=parser.parseType(Precedence.PREFIX);if(brackets&&!parser.consume("]"))throw new Error("Unterminated variadic type. Missing ']'");return{type:"JsdocTypeVariadic",element:assertRootResult(element),meta:{position:"prefix",squareBrackets:brackets}}}catch(e){if(e instanceof NoParsletFoundError){if(brackets)throw new Error("Empty square brackets for variadic are not allowed.");return{type:"JsdocTypeVariadic",meta:{position:void 0,squareBrackets:!1}}}throw e}},parseInfix:allowPostfix?(parser,left)=>(parser.consume("..."),{type:"JsdocTypeVariadic",element:assertRootResult(left),meta:{position:"suffix",squareBrackets:!1}}):void 0})}const symbolParslet=composeParslet({name:"symbolParslet",accept:type=>"("===type,precedence:Precedence.SYMBOL,parseInfix:(parser,left)=>{if("JsdocTypeName"!==left.type)throw new Error("Symbol expects a name on the left side. (Reacting on '(')");parser.consume("(");const result={type:"JsdocTypeSymbol",value:left.value};if(!parser.consume(")")){const next=parser.parseIntermediateType(Precedence.SYMBOL);if(result.element=assertNumberOrVariadicNameResult(next),!parser.consume(")"))throw new Error("Symbol does not end after value")}return result}}),arrayBracketsParslet=composeParslet({name:"arrayBracketsParslet",precedence:Precedence.ARRAY_BRACKETS,accept:(type,next)=>"["===type&&"]"===next,parseInfix:(parser,left)=>(parser.consume("["),parser.consume("]"),{type:"JsdocTypeGeneric",left:{type:"JsdocTypeName",value:"Array"},elements:[assertRootResult(left)],meta:{brackets:"square",dot:!1}})});function createObjectParslet({objectFieldGrammar,allowKeyTypes}){return composeParslet({name:"objectParslet",accept:type=>"{"===type,parsePrefix:parser=>{parser.consume("{");const result={type:"JsdocTypeObject",meta:{separator:"comma"},elements:[]};if(!parser.consume("}")){let separator;const fieldParser=new Parser(objectFieldGrammar,parser.lexer,parser);for(;;){fieldParser.acceptLexerState(parser);let field=fieldParser.parseIntermediateType(Precedence.OBJECT);parser.acceptLexerState(fieldParser),void 0===field&&allowKeyTypes&&(field=parser.parseIntermediateType(Precedence.OBJECT));let optional=!1;if("JsdocTypeNullable"===field.type&&(optional=!0,field=field.element),"JsdocTypeNumber"===field.type||"JsdocTypeName"===field.type||"JsdocTypeStringValue"===field.type){let quote;"JsdocTypeStringValue"===field.type&&(quote=field.meta.quote),result.elements.push({type:"JsdocTypeObjectField",key:field.value.toString(),right:void 0,optional,readonly:!1,meta:{quote}})}else{if("JsdocTypeObjectField"!==field.type&&"JsdocTypeJsdocObjectField"!==field.type)throw new UnexpectedTypeError(field);result.elements.push(field)}if(parser.lexer.current.startOfLine)separator="linebreak";else if(parser.consume(","))separator="comma";else{if(!parser.consume(";"))break;separator="semicolon"}if("}"===parser.lexer.current.type)break}if(result.meta.separator=null!=separator?separator:"comma",!parser.consume("}"))throw new Error("Unterminated record type. Missing '}'")}return result}})}function createObjectFieldParslet({allowSquaredProperties,allowKeyTypes,allowReadonly,allowOptional}){return composeParslet({name:"objectFieldParslet",precedence:Precedence.KEY_VALUE,accept:type=>":"===type,parseInfix:(parser,left)=>{var _a;let optional=!1,readonlyProperty=!1;allowOptional&&"JsdocTypeNullable"===left.type&&(optional=!0,left=left.element),allowReadonly&&"JsdocTypeReadonlyProperty"===left.type&&(readonlyProperty=!0,left=left.element);const parentParser=null!==(_a=parser.baseParser)&&void 0!==_a?_a:parser;if(parentParser.acceptLexerState(parser),"JsdocTypeNumber"===left.type||"JsdocTypeName"===left.type||"JsdocTypeStringValue"===left.type||isSquaredProperty(left)){if(isSquaredProperty(left)&&!allowSquaredProperties)throw new UnexpectedTypeError(left);let quote;parentParser.consume(":"),"JsdocTypeStringValue"===left.type&&(quote=left.meta.quote);const right=parentParser.parseType(Precedence.KEY_VALUE);return parser.acceptLexerState(parentParser),{type:"JsdocTypeObjectField",key:isSquaredProperty(left)?left:left.value.toString(),right,optional,readonly:readonlyProperty,meta:{quote}}}{if(!allowKeyTypes)throw new UnexpectedTypeError(left);parentParser.consume(":");const right=parentParser.parseType(Precedence.KEY_VALUE);return parser.acceptLexerState(parentParser),{type:"JsdocTypeJsdocObjectField",left:assertRootResult(left),right}}}})}function createKeyValueParslet({allowOptional,allowVariadic}){return composeParslet({name:"keyValueParslet",precedence:Precedence.KEY_VALUE,accept:type=>":"===type,parseInfix:(parser,left)=>{let optional=!1,variadic=!1;if(allowOptional&&"JsdocTypeNullable"===left.type&&(optional=!0,left=left.element),allowVariadic&&"JsdocTypeVariadic"===left.type&&void 0!==left.element&&(variadic=!0,left=left.element),"JsdocTypeName"!==left.type)throw new UnexpectedTypeError(left);parser.consume(":");const right=parser.parseType(Precedence.KEY_VALUE);return{type:"JsdocTypeKeyValue",key:left.value,right,optional,variadic}}})}const jsdocBaseGrammar=[...baseGrammar,createFunctionParslet({allowWithoutParenthesis:!0,allowNamedParameters:["this","new"],allowNoReturnType:!0,allowNewAsFunctionKeyword:!1}),stringValueParslet,createSpecialNamePathParslet({allowedTypes:["module","external","event"],pathGrammar}),createVariadicParslet({allowEnclosingBrackets:!0,allowPostfix:!0}),createNameParslet({allowedAdditionalTokens:["keyof"]}),symbolParslet,arrayBracketsParslet,createNamePathParslet({allowSquareBracketsOnAnyType:!1,allowJsdocNamePaths:!0,pathGrammar})],jsdocGrammar=[...jsdocBaseGrammar,createObjectParslet({objectFieldGrammar:[createNameParslet({allowedAdditionalTokens:["module","in"]}),createObjectFieldParslet({allowSquaredProperties:!1,allowKeyTypes:!0,allowOptional:!1,allowReadonly:!1}),...jsdocBaseGrammar],allowKeyTypes:!0}),createKeyValueParslet({allowOptional:!0,allowVariadic:!0})],typeOfParslet=composeParslet({name:"typeOfParslet",accept:type=>"typeof"===type,parsePrefix:parser=>(parser.consume("typeof"),{type:"JsdocTypeTypeof",element:assertRootResult(parser.parseType(Precedence.KEY_OF_TYPE_OF))})}),objectFieldGrammar$1=[createNameParslet({allowedAdditionalTokens:["module","keyof","event","external","in"]}),nullableParslet,optionalParslet,stringValueParslet,numberParslet,createObjectFieldParslet({allowSquaredProperties:!1,allowKeyTypes:!1,allowOptional:!1,allowReadonly:!1})],closureGrammar=[...baseGrammar,createObjectParslet({allowKeyTypes:!1,objectFieldGrammar:objectFieldGrammar$1}),createNameParslet({allowedAdditionalTokens:["event","external","in"]}),typeOfParslet,createFunctionParslet({allowWithoutParenthesis:!1,allowNamedParameters:["this","new"],allowNoReturnType:!0,allowNewAsFunctionKeyword:!1}),createVariadicParslet({allowEnclosingBrackets:!1,allowPostfix:!1}),createNameParslet({allowedAdditionalTokens:["keyof"]}),createSpecialNamePathParslet({allowedTypes:["module"],pathGrammar}),createNamePathParslet({allowSquareBracketsOnAnyType:!1,allowJsdocNamePaths:!0,pathGrammar}),createKeyValueParslet({allowOptional:!1,allowVariadic:!1}),symbolParslet],assertsParslet=composeParslet({name:"assertsParslet",accept:type=>"asserts"===type,parsePrefix:parser=>{parser.consume("asserts");const left=parser.parseIntermediateType(Precedence.SYMBOL);if("JsdocTypeName"!==left.type)throw new UnexpectedTypeError(left,"A typescript asserts always has to have a name on the left side.");return parser.consume("is"),{type:"JsdocTypeAsserts",left,right:assertRootResult(parser.parseIntermediateType(Precedence.INFIX))}}});function createTupleParslet({allowQuestionMark}){return composeParslet({name:"tupleParslet",accept:type=>"["===type,parsePrefix:parser=>{parser.consume("[");const result={type:"JsdocTypeTuple",elements:[]};if(parser.consume("]"))return result;const typeList=parser.parseIntermediateType(Precedence.ALL);if("JsdocTypeParameterList"===typeList.type?"JsdocTypeKeyValue"===typeList.elements[0].type?result.elements=typeList.elements.map(assertPlainKeyValueResult):result.elements=typeList.elements.map(assertRootResult):"JsdocTypeKeyValue"===typeList.type?result.elements=[assertPlainKeyValueResult(typeList)]:result.elements=[assertRootResult(typeList)],!parser.consume("]"))throw new Error("Unterminated '['");if(!allowQuestionMark&&result.elements.some((e=>"JsdocTypeUnknown"===e.type)))throw new Error("Question mark in tuple not allowed");return result}})}const keyOfParslet=composeParslet({name:"keyOfParslet",accept:type=>"keyof"===type,parsePrefix:parser=>(parser.consume("keyof"),{type:"JsdocTypeKeyof",element:assertRootResult(parser.parseType(Precedence.KEY_OF_TYPE_OF))})}),importParslet=composeParslet({name:"importParslet",accept:type=>"import"===type,parsePrefix:parser=>{if(parser.consume("import"),!parser.consume("("))throw new Error("Missing parenthesis after import keyword");const path=parser.parseType(Precedence.PREFIX);if("JsdocTypeStringValue"!==path.type)throw new Error("Only string values are allowed as paths for imports");if(!parser.consume(")"))throw new Error("Missing closing parenthesis after import keyword");return{type:"JsdocTypeImport",element:path}}}),readonlyPropertyParslet=composeParslet({name:"readonlyPropertyParslet",accept:type=>"readonly"===type,parsePrefix:parser=>(parser.consume("readonly"),{type:"JsdocTypeReadonlyProperty",element:parser.parseType(Precedence.KEY_VALUE)})}),arrowFunctionParslet=composeParslet({name:"arrowFunctionParslet",precedence:Precedence.ARROW,accept:type=>"=>"===type,parseInfix:(parser,left)=>(parser.consume("=>"),{type:"JsdocTypeFunction",parameters:getParameters(left).map(assertPlainKeyValueOrNameResult),arrow:!0,constructor:!1,parenthesis:!0,returnType:parser.parseType(Precedence.OBJECT)})}),intersectionParslet=composeParslet({name:"intersectionParslet",accept:type=>"&"===type,precedence:Precedence.INTERSECTION,parseInfix:(parser,left)=>{parser.consume("&");const elements=[];do{elements.push(parser.parseType(Precedence.INTERSECTION))}while(parser.consume("&"));return{type:"JsdocTypeIntersection",elements:[assertRootResult(left),...elements]}}}),predicateParslet=composeParslet({name:"predicateParslet",precedence:Precedence.INFIX,accept:type=>"is"===type,parseInfix:(parser,left)=>{if("JsdocTypeName"!==left.type)throw new UnexpectedTypeError(left,"A typescript predicate always has to have a name on the left side.");return parser.consume("is"),{type:"JsdocTypePredicate",left,right:assertRootResult(parser.parseIntermediateType(Precedence.INFIX))}}}),objectSquaredPropertyParslet=composeParslet({name:"objectSquareBracketPropertyParslet",accept:type=>"["===type,parsePrefix:parser=>{if(void 0===parser.baseParser)throw new Error("Only allowed inside object grammar");parser.consume("[");const key=parser.lexer.current.text;let result;if(parser.consume("Identifier"),parser.consume(":")){const parentParser=parser.baseParser;parentParser.acceptLexerState(parser),result={type:"JsdocTypeIndexSignature",key,right:parentParser.parseType(Precedence.INDEX_BRACKETS)},parser.acceptLexerState(parentParser)}else{if(!parser.consume("in"))throw new Error("Missing ':' or 'in' inside square bracketed property.");{const parentParser=parser.baseParser;parentParser.acceptLexerState(parser),result={type:"JsdocTypeMappedType",key,right:parentParser.parseType(Precedence.ARRAY_BRACKETS)},parser.acceptLexerState(parentParser)}}if(!parser.consume("]"))throw new Error("Unterminated square brackets");return result}}),objectFieldGrammar=[readonlyPropertyParslet,createNameParslet({allowedAdditionalTokens:["module","event","keyof","event","external","in"]}),nullableParslet,optionalParslet,stringValueParslet,numberParslet,createObjectFieldParslet({allowSquaredProperties:!0,allowKeyTypes:!1,allowOptional:!0,allowReadonly:!0}),objectSquaredPropertyParslet],typescriptGrammar=[...baseGrammar,createObjectParslet({allowKeyTypes:!1,objectFieldGrammar}),typeOfParslet,keyOfParslet,importParslet,stringValueParslet,createFunctionParslet({allowWithoutParenthesis:!0,allowNoReturnType:!1,allowNamedParameters:["this","new","args"],allowNewAsFunctionKeyword:!0}),createTupleParslet({allowQuestionMark:!1}),createVariadicParslet({allowEnclosingBrackets:!1,allowPostfix:!1}),assertsParslet,createNameParslet({allowedAdditionalTokens:["event","external","in"]}),createSpecialNamePathParslet({allowedTypes:["module"],pathGrammar}),arrayBracketsParslet,arrowFunctionParslet,createNamePathParslet({allowSquareBracketsOnAnyType:!0,allowJsdocNamePaths:!1,pathGrammar}),intersectionParslet,predicateParslet,createKeyValueParslet({allowVariadic:!0,allowOptional:!0})];function parse(expression,mode){switch(mode){case"closure":return new Parser(closureGrammar,expression).parse();case"jsdoc":return new Parser(jsdocGrammar,expression).parse();case"typescript":return new Parser(typescriptGrammar,expression).parse()}}function tryParse(expression,modes=["typescript","closure","jsdoc"]){let error;for(const mode of modes)try{return parse(expression,mode)}catch(e){error=e}throw error}function transform(rules,parseResult){const rule=rules[parseResult.type];if(void 0===rule)throw new Error(`In this set of transform rules exists no rule for type ${parseResult.type}.`);return rule(parseResult,(aParseResult=>transform(rules,aParseResult)))}function notAvailableTransform(parseResult){throw new Error("This transform is not available. Are you trying the correct parsing mode?")}function extractSpecialParams(source){const result={params:[]};for(const param of source.parameters)"JsdocTypeKeyValue"===param.type?"this"===param.key?result.this=param.right:"new"===param.key?result.new=param.right:result.params.push(param):result.params.push(param);return result}function applyPosition(position,target,value){return"prefix"===position?value+target:target+value}function quote(value,quote){switch(quote){case"double":return`"${value}"`;case"single":return`'${value}'`;case void 0:return value}}function stringifyRules(){return{JsdocTypeParenthesis:(result,transform)=>`(${void 0!==result.element?transform(result.element):""})`,JsdocTypeKeyof:(result,transform)=>`keyof ${transform(result.element)}`,JsdocTypeFunction:(result,transform)=>{if(result.arrow){if(void 0===result.returnType)throw new Error("Arrow function needs a return type.");let stringified=`(${result.parameters.map(transform).join(", ")}) => ${transform(result.returnType)}`;return result.constructor&&(stringified="new "+stringified),stringified}{let stringified=result.constructor?"new":"function";return result.parenthesis?(stringified+=`(${result.parameters.map(transform).join(", ")})`,void 0!==result.returnType&&(stringified+=`: ${transform(result.returnType)}`),stringified):stringified}},JsdocTypeName:result=>result.value,JsdocTypeTuple:(result,transform)=>`[${result.elements.map(transform).join(", ")}]`,JsdocTypeVariadic:(result,transform)=>void 0===result.meta.position?"...":applyPosition(result.meta.position,transform(result.element),"..."),JsdocTypeNamePath:(result,transform)=>{const left=transform(result.left),right=transform(result.right);switch(result.pathType){case"inner":return`${left}~${right}`;case"instance":return`${left}#${right}`;case"property":return`${left}.${right}`;case"property-brackets":return`${left}[${right}]`}},JsdocTypeStringValue:result=>quote(result.value,result.meta.quote),JsdocTypeAny:()=>"*",JsdocTypeGeneric:(result,transform)=>{if("square"===result.meta.brackets){const element=result.elements[0],transformed=transform(element);return"JsdocTypeUnion"===element.type||"JsdocTypeIntersection"===element.type?`(${transformed})[]`:`${transformed}[]`}return`${transform(result.left)}${result.meta.dot?".":""}<${result.elements.map(transform).join(", ")}>`},JsdocTypeImport:(result,transform)=>`import(${transform(result.element)})`,JsdocTypeObjectField:(result,transform)=>{let text="";return result.readonly&&(text+="readonly "),"string"==typeof result.key?text+=quote(result.key,result.meta.quote):text+=transform(result.key),result.optional&&(text+="?"),void 0===result.right?text:text+`: ${transform(result.right)}`},JsdocTypeJsdocObjectField:(result,transform)=>`${transform(result.left)}: ${transform(result.right)}`,JsdocTypeKeyValue:(result,transform)=>{let text=result.key;return result.optional&&(text+="?"),result.variadic&&(text="..."+text),void 0===result.right?text:text+`: ${transform(result.right)}`},JsdocTypeSpecialNamePath:result=>`${result.specialType}:${quote(result.value,result.meta.quote)}`,JsdocTypeNotNullable:(result,transform)=>applyPosition(result.meta.position,transform(result.element),"!"),JsdocTypeNull:()=>"null",JsdocTypeNullable:(result,transform)=>applyPosition(result.meta.position,transform(result.element),"?"),JsdocTypeNumber:result=>result.value.toString(),JsdocTypeObject:(result,transform)=>`{${result.elements.map(transform).join(("comma"===result.meta.separator?",":";")+" ")}}`,JsdocTypeOptional:(result,transform)=>applyPosition(result.meta.position,transform(result.element),"="),JsdocTypeSymbol:(result,transform)=>`${result.value}(${void 0!==result.element?transform(result.element):""})`,JsdocTypeTypeof:(result,transform)=>`typeof ${transform(result.element)}`,JsdocTypeUndefined:()=>"undefined",JsdocTypeUnion:(result,transform)=>result.elements.map(transform).join(" | "),JsdocTypeUnknown:()=>"?",JsdocTypeIntersection:(result,transform)=>result.elements.map(transform).join(" & "),JsdocTypeProperty:result=>quote(result.value,result.meta.quote),JsdocTypePredicate:(result,transform)=>`${transform(result.left)} is ${transform(result.right)}`,JsdocTypeIndexSignature:(result,transform)=>`[${result.key}: ${transform(result.right)}]`,JsdocTypeMappedType:(result,transform)=>`[${result.key} in ${transform(result.right)}]`,JsdocTypeAsserts:(result,transform)=>`asserts ${transform(result.left)} is ${transform(result.right)}`}}const storedStringifyRules=stringifyRules();function stringify(result){return transform(storedStringifyRules,result)}const reservedWords=["null","true","false","break","case","catch","class","const","continue","debugger","default","delete","do","else","export","extends","finally","for","function","if","import","in","instanceof","new","return","super","switch","this","throw","try","typeof","var","void","while","with","yield"];function makeName(value){const result={type:"NameExpression",name:value};return reservedWords.includes(value)&&(result.reservedWord=!0),result}const catharsisTransformRules={JsdocTypeOptional:(result,transform)=>{const transformed=transform(result.element);return transformed.optional=!0,transformed},JsdocTypeNullable:(result,transform)=>{const transformed=transform(result.element);return transformed.nullable=!0,transformed},JsdocTypeNotNullable:(result,transform)=>{const transformed=transform(result.element);return transformed.nullable=!1,transformed},JsdocTypeVariadic:(result,transform)=>{if(void 0===result.element)throw new Error("dots without value are not allowed in catharsis mode");const transformed=transform(result.element);return transformed.repeatable=!0,transformed},JsdocTypeAny:()=>({type:"AllLiteral"}),JsdocTypeNull:()=>({type:"NullLiteral"}),JsdocTypeStringValue:result=>makeName(quote(result.value,result.meta.quote)),JsdocTypeUndefined:()=>({type:"UndefinedLiteral"}),JsdocTypeUnknown:()=>({type:"UnknownLiteral"}),JsdocTypeFunction:(result,transform)=>{const params=extractSpecialParams(result),transformed={type:"FunctionType",params:params.params.map(transform)};return void 0!==params.this&&(transformed.this=transform(params.this)),void 0!==params.new&&(transformed.new=transform(params.new)),void 0!==result.returnType&&(transformed.result=transform(result.returnType)),transformed},JsdocTypeGeneric:(result,transform)=>({type:"TypeApplication",applications:result.elements.map((o=>transform(o))),expression:transform(result.left)}),JsdocTypeSpecialNamePath:result=>makeName(result.specialType+":"+quote(result.value,result.meta.quote)),JsdocTypeName:result=>"function"!==result.value?makeName(result.value):{type:"FunctionType",params:[]},JsdocTypeNumber:result=>makeName(result.value.toString()),JsdocTypeObject:(result,transform)=>{const transformed={type:"RecordType",fields:[]};for(const field of result.elements)"JsdocTypeObjectField"!==field.type&&"JsdocTypeJsdocObjectField"!==field.type?transformed.fields.push({type:"FieldType",key:transform(field),value:void 0}):transformed.fields.push(transform(field));return transformed},JsdocTypeObjectField:(result,transform)=>{if("string"!=typeof result.key)throw new Error("Index signatures and mapped types are not supported");return{type:"FieldType",key:makeName(quote(result.key,result.meta.quote)),value:void 0===result.right?void 0:transform(result.right)}},JsdocTypeJsdocObjectField:(result,transform)=>({type:"FieldType",key:transform(result.left),value:transform(result.right)}),JsdocTypeUnion:(result,transform)=>({type:"TypeUnion",elements:result.elements.map((e=>transform(e)))}),JsdocTypeKeyValue:(result,transform)=>({type:"FieldType",key:makeName(result.key),value:void 0===result.right?void 0:transform(result.right)}),JsdocTypeNamePath:(result,transform)=>{const leftResult=transform(result.left);let rightValue;rightValue="JsdocTypeSpecialNamePath"===result.right.type?transform(result.right).name:quote(result.right.value,result.right.meta.quote);const joiner="inner"===result.pathType?"~":"instance"===result.pathType?"#":".";return makeName(`${leftResult.name}${joiner}${rightValue}`)},JsdocTypeSymbol:result=>{let value="",element=result.element,trailingDots=!1;return"JsdocTypeVariadic"===(null==element?void 0:element.type)&&("prefix"===element.meta.position?value="...":trailingDots=!0,element=element.element),"JsdocTypeName"===(null==element?void 0:element.type)?value+=element.value:"JsdocTypeNumber"===(null==element?void 0:element.type)&&(value+=element.value.toString()),trailingDots&&(value+="..."),makeName(`${result.value}(${value})`)},JsdocTypeParenthesis:(result,transform)=>transform(assertRootResult(result.element)),JsdocTypeMappedType:notAvailableTransform,JsdocTypeIndexSignature:notAvailableTransform,JsdocTypeImport:notAvailableTransform,JsdocTypeKeyof:notAvailableTransform,JsdocTypeTuple:notAvailableTransform,JsdocTypeTypeof:notAvailableTransform,JsdocTypeIntersection:notAvailableTransform,JsdocTypeProperty:notAvailableTransform,JsdocTypePredicate:notAvailableTransform,JsdocTypeAsserts:notAvailableTransform};function catharsisTransform(result){return transform(catharsisTransformRules,result)}function getQuoteStyle(quote){switch(quote){case void 0:return"none";case"single":return"single";case"double":return"double"}}function getMemberType(type){switch(type){case"inner":return"INNER_MEMBER";case"instance":return"INSTANCE_MEMBER";case"property":case"property-brackets":return"MEMBER"}}function nestResults(type,results){return 2===results.length?{type,left:results[0],right:results[1]}:{type,left:results[0],right:nestResults(type,results.slice(1))}}const jtpRules={JsdocTypeOptional:(result,transform)=>({type:"OPTIONAL",value:transform(result.element),meta:{syntax:"prefix"===result.meta.position?"PREFIX_EQUAL_SIGN":"SUFFIX_EQUALS_SIGN"}}),JsdocTypeNullable:(result,transform)=>({type:"NULLABLE",value:transform(result.element),meta:{syntax:"prefix"===result.meta.position?"PREFIX_QUESTION_MARK":"SUFFIX_QUESTION_MARK"}}),JsdocTypeNotNullable:(result,transform)=>({type:"NOT_NULLABLE",value:transform(result.element),meta:{syntax:"prefix"===result.meta.position?"PREFIX_BANG":"SUFFIX_BANG"}}),JsdocTypeVariadic:(result,transform)=>{const transformed={type:"VARIADIC",meta:{syntax:"prefix"===result.meta.position?"PREFIX_DOTS":"suffix"===result.meta.position?"SUFFIX_DOTS":"ONLY_DOTS"}};return void 0!==result.element&&(transformed.value=transform(result.element)),transformed},JsdocTypeName:result=>({type:"NAME",name:result.value}),JsdocTypeTypeof:(result,transform)=>({type:"TYPE_QUERY",name:transform(result.element)}),JsdocTypeTuple:(result,transform)=>({type:"TUPLE",entries:result.elements.map(transform)}),JsdocTypeKeyof:(result,transform)=>({type:"KEY_QUERY",value:transform(result.element)}),JsdocTypeImport:result=>({type:"IMPORT",path:{type:"STRING_VALUE",quoteStyle:getQuoteStyle(result.element.meta.quote),string:result.element.value}}),JsdocTypeUndefined:()=>({type:"NAME",name:"undefined"}),JsdocTypeAny:()=>({type:"ANY"}),JsdocTypeFunction:(result,transform)=>{const specialParams=extractSpecialParams(result),transformed={type:result.arrow?"ARROW":"FUNCTION",params:specialParams.params.map((param=>{if("JsdocTypeKeyValue"===param.type){if(void 0===param.right)throw new Error("Function parameter without ':' is not expected to be 'KEY_VALUE'");return{type:"NAMED_PARAMETER",name:param.key,typeName:transform(param.right)}}return transform(param)})),new:null,returns:null};return void 0!==specialParams.this?transformed.this=transform(specialParams.this):result.arrow||(transformed.this=null),void 0!==specialParams.new&&(transformed.new=transform(specialParams.new)),void 0!==result.returnType&&(transformed.returns=transform(result.returnType)),transformed},JsdocTypeGeneric:(result,transform)=>{const transformed={type:"GENERIC",subject:transform(result.left),objects:result.elements.map(transform),meta:{syntax:"square"===result.meta.brackets?"SQUARE_BRACKET":result.meta.dot?"ANGLE_BRACKET_WITH_DOT":"ANGLE_BRACKET"}};return"square"!==result.meta.brackets||"JsdocTypeFunction"!==result.elements[0].type||result.elements[0].parenthesis||(transformed.objects[0]={type:"NAME",name:"function"}),transformed},JsdocTypeObjectField:(result,transform)=>{if("string"!=typeof result.key)throw new Error("Index signatures and mapped types are not supported");if(void 0===result.right)return{type:"RECORD_ENTRY",key:result.key,quoteStyle:getQuoteStyle(result.meta.quote),value:null,readonly:!1};let right=transform(result.right);return result.optional&&(right={type:"OPTIONAL",value:right,meta:{syntax:"SUFFIX_KEY_QUESTION_MARK"}}),{type:"RECORD_ENTRY",key:result.key.toString(),quoteStyle:getQuoteStyle(result.meta.quote),value:right,readonly:!1}},JsdocTypeJsdocObjectField:()=>{throw new Error("Keys may not be typed in jsdoctypeparser.")},JsdocTypeKeyValue:(result,transform)=>{if(void 0===result.right)return{type:"RECORD_ENTRY",key:result.key,quoteStyle:"none",value:null,readonly:!1};let right=transform(result.right);return result.optional&&(right={type:"OPTIONAL",value:right,meta:{syntax:"SUFFIX_KEY_QUESTION_MARK"}}),{type:"RECORD_ENTRY",key:result.key,quoteStyle:"none",value:right,readonly:!1}},JsdocTypeObject:(result,transform)=>{const entries=[];for(const field of result.elements)"JsdocTypeObjectField"!==field.type&&"JsdocTypeJsdocObjectField"!==field.type||entries.push(transform(field));return{type:"RECORD",entries}},JsdocTypeSpecialNamePath:result=>{if("module"!==result.specialType)throw new Error(`jsdoctypeparser does not support type ${result.specialType} at this point.`);return{type:"MODULE",value:{type:"FILE_PATH",quoteStyle:getQuoteStyle(result.meta.quote),path:result.value}}},JsdocTypeNamePath:(result,transform)=>{let name,quoteStyle,hasEventPrefix=!1;"JsdocTypeSpecialNamePath"===result.right.type&&"event"===result.right.specialType?(hasEventPrefix=!0,name=result.right.value,quoteStyle=getQuoteStyle(result.right.meta.quote)):(name=result.right.value,quoteStyle=getQuoteStyle(result.right.meta.quote));const transformed={type:getMemberType(result.pathType),owner:transform(result.left),name,quoteStyle,hasEventPrefix};if("MODULE"===transformed.owner.type){const tModule=transformed.owner;return transformed.owner=transformed.owner.value,tModule.value=transformed,tModule}return transformed},JsdocTypeUnion:(result,transform)=>nestResults("UNION",result.elements.map(transform)),JsdocTypeParenthesis:(result,transform)=>({type:"PARENTHESIS",value:transform(assertRootResult(result.element))}),JsdocTypeNull:()=>({type:"NAME",name:"null"}),JsdocTypeUnknown:()=>({type:"UNKNOWN"}),JsdocTypeStringValue:result=>({type:"STRING_VALUE",quoteStyle:getQuoteStyle(result.meta.quote),string:result.value}),JsdocTypeIntersection:(result,transform)=>nestResults("INTERSECTION",result.elements.map(transform)),JsdocTypeNumber:result=>({type:"NUMBER_VALUE",number:result.value.toString()}),JsdocTypeSymbol:notAvailableTransform,JsdocTypeProperty:notAvailableTransform,JsdocTypePredicate:notAvailableTransform,JsdocTypeMappedType:notAvailableTransform,JsdocTypeIndexSignature:notAvailableTransform,JsdocTypeAsserts:notAvailableTransform};function jtpTransform(result){return transform(jtpRules,result)}function identityTransformRules(){return{JsdocTypeIntersection:(result,transform)=>({type:"JsdocTypeIntersection",elements:result.elements.map(transform)}),JsdocTypeGeneric:(result,transform)=>({type:"JsdocTypeGeneric",left:transform(result.left),elements:result.elements.map(transform),meta:{dot:result.meta.dot,brackets:result.meta.brackets}}),JsdocTypeNullable:result=>result,JsdocTypeUnion:(result,transform)=>({type:"JsdocTypeUnion",elements:result.elements.map(transform)}),JsdocTypeUnknown:result=>result,JsdocTypeUndefined:result=>result,JsdocTypeTypeof:(result,transform)=>({type:"JsdocTypeTypeof",element:transform(result.element)}),JsdocTypeSymbol:(result,transform)=>{const transformed={type:"JsdocTypeSymbol",value:result.value};return void 0!==result.element&&(transformed.element=transform(result.element)),transformed},JsdocTypeOptional:(result,transform)=>({type:"JsdocTypeOptional",element:transform(result.element),meta:{position:result.meta.position}}),JsdocTypeObject:(result,transform)=>({type:"JsdocTypeObject",meta:{separator:"comma"},elements:result.elements.map(transform)}),JsdocTypeNumber:result=>result,JsdocTypeNull:result=>result,JsdocTypeNotNullable:(result,transform)=>({type:"JsdocTypeNotNullable",element:transform(result.element),meta:{position:result.meta.position}}),JsdocTypeSpecialNamePath:result=>result,JsdocTypeObjectField:(result,transform)=>({type:"JsdocTypeObjectField",key:result.key,right:void 0===result.right?void 0:transform(result.right),optional:result.optional,readonly:result.readonly,meta:result.meta}),JsdocTypeJsdocObjectField:(result,transform)=>({type:"JsdocTypeJsdocObjectField",left:transform(result.left),right:transform(result.right)}),JsdocTypeKeyValue:(result,transform)=>({type:"JsdocTypeKeyValue",key:result.key,right:void 0===result.right?void 0:transform(result.right),optional:result.optional,variadic:result.variadic}),JsdocTypeImport:(result,transform)=>({type:"JsdocTypeImport",element:transform(result.element)}),JsdocTypeAny:result=>result,JsdocTypeStringValue:result=>result,JsdocTypeNamePath:result=>result,JsdocTypeVariadic:(result,transform)=>{const transformed={type:"JsdocTypeVariadic",meta:{position:result.meta.position,squareBrackets:result.meta.squareBrackets}};return void 0!==result.element&&(transformed.element=transform(result.element)),transformed},JsdocTypeTuple:(result,transform)=>({type:"JsdocTypeTuple",elements:result.elements.map(transform)}),JsdocTypeName:result=>result,JsdocTypeFunction:(result,transform)=>{const transformed={type:"JsdocTypeFunction",arrow:result.arrow,parameters:result.parameters.map(transform),constructor:result.constructor,parenthesis:result.parenthesis};return void 0!==result.returnType&&(transformed.returnType=transform(result.returnType)),transformed},JsdocTypeKeyof:(result,transform)=>({type:"JsdocTypeKeyof",element:transform(result.element)}),JsdocTypeParenthesis:(result,transform)=>({type:"JsdocTypeParenthesis",element:transform(result.element)}),JsdocTypeProperty:result=>result,JsdocTypePredicate:(result,transform)=>({type:"JsdocTypePredicate",left:transform(result.left),right:transform(result.right)}),JsdocTypeIndexSignature:(result,transform)=>({type:"JsdocTypeIndexSignature",key:result.key,right:transform(result.right)}),JsdocTypeMappedType:(result,transform)=>({type:"JsdocTypeMappedType",key:result.key,right:transform(result.right)}),JsdocTypeAsserts:(result,transform)=>({type:"JsdocTypeAsserts",left:transform(result.left),right:transform(result.right)})}}const visitorKeys={JsdocTypeAny:[],JsdocTypeFunction:["parameters","returnType"],JsdocTypeGeneric:["left","elements"],JsdocTypeImport:[],JsdocTypeIndexSignature:["right"],JsdocTypeIntersection:["elements"],JsdocTypeKeyof:["element"],JsdocTypeKeyValue:["right"],JsdocTypeMappedType:["right"],JsdocTypeName:[],JsdocTypeNamePath:["left","right"],JsdocTypeNotNullable:["element"],JsdocTypeNull:[],JsdocTypeNullable:["element"],JsdocTypeNumber:[],JsdocTypeObject:["elements"],JsdocTypeObjectField:["right"],JsdocTypeJsdocObjectField:["left","right"],JsdocTypeOptional:["element"],JsdocTypeParenthesis:["element"],JsdocTypeSpecialNamePath:[],JsdocTypeStringValue:[],JsdocTypeSymbol:["element"],JsdocTypeTuple:["elements"],JsdocTypeTypeof:["element"],JsdocTypeUndefined:[],JsdocTypeUnion:["elements"],JsdocTypeUnknown:[],JsdocTypeVariadic:["element"],JsdocTypeProperty:[],JsdocTypePredicate:["left","right"],JsdocTypeAsserts:["left","right"]};function _traverse(node,parentNode,property,onEnter,onLeave){null==onEnter||onEnter(node,parentNode,property);const keysToVisit=visitorKeys[node.type];for(const key of keysToVisit){const value=node[key];if(void 0!==value)if(Array.isArray(value))for(const element of value)_traverse(element,node,key,onEnter,onLeave);else _traverse(value,node,key,onEnter,onLeave)}null==onLeave||onLeave(node,parentNode,property)}function traverse(node,onEnter,onLeave){_traverse(node,void 0,void 0,onEnter,onLeave)}exports.catharsisTransform=catharsisTransform,exports.identityTransformRules=identityTransformRules,exports.jtpTransform=jtpTransform,exports.parse=parse,exports.stringify=stringify,exports.stringifyRules=stringifyRules,exports.transform=transform,exports.traverse=traverse,exports.tryParse=tryParse,exports.visitorKeys=visitorKeys}(exports)},"../node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js":module=>{var cachedSetTimeout,cachedClearTimeout,process=module.exports={};function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}function runTimeout(fun){if(cachedSetTimeout===setTimeout)return setTimeout(fun,0);if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout)return cachedSetTimeout=setTimeout,setTimeout(fun,0);try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}!function(){try{cachedSetTimeout="function"==typeof setTimeout?setTimeout:defaultSetTimout}catch(e){cachedSetTimeout=defaultSetTimout}try{cachedClearTimeout="function"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(e){cachedClearTimeout=defaultClearTimeout}}();var currentQueue,queue=[],draining=!1,queueIndex=-1;function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var timeout=runTimeout(cleanUpNextTick);draining=!0;for(var len=queue.length;len;){for(currentQueue=queue,queue=[];++queueIndex<len;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,len=queue.length}currentQueue=null,draining=!1,function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout)return clearTimeout(marker);if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout)return cachedClearTimeout=clearTimeout,clearTimeout(marker);try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}(timeout)}}function Item(fun,array){this.fun=fun,this.array=array}function noop(){}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)args[i-1]=arguments[i];queue.push(new Item(fun,args)),1!==queue.length||draining||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.prependListener=noop,process.prependOnceListener=noop,process.listeners=function(name){return[]},process.binding=function(name){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(dir){throw new Error("process.chdir is not supported")},process.umask=function(){return 0}},"../node_modules/.pnpm/react-dom@18.3.1_react@18.3.1/node_modules/react-dom/cjs/react-dom-test-utils.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var k=__webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),l=__webpack_require__("../node_modules/.pnpm/react-dom@18.3.1_react@18.3.1/node_modules/react-dom/index.js");function m(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do{!!(4098&(b=a).flags)&&(c=b.return),a=b.return}while(a)}return 3===b.tag?c:null}function n(a){if(m(a)!==a)throw Error("Unable to find node on an unmounted component.")}var q=Object.assign;function r(a){var b=a.keyCode;return"charCode"in a?0===(a=a.charCode)&&13===b&&(a=13):a=b,10===a&&(a=13),32<=a||13===a?a:0}function t(){return!0}function u(){return!1}function v(a){function b(c,b,f,g,e){for(var d in this._reactName=c,this._targetInst=f,this.type=b,this.nativeEvent=g,this.target=e,this.currentTarget=null,a)a.hasOwnProperty(d)&&(c=a[d],this[d]=c?c(g):g[d]);return this.isDefaultPrevented=(null!=g.defaultPrevented?g.defaultPrevented:!1===g.returnValue)?t:u,this.isPropagationStopped=u,this}return q(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!=typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=t)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!=typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=t)},persist:function(){},isPersistent:t}),b}var w={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},x=v(w),y=q({},w,{view:0,detail:0});v(y);var z,A,B,D=q({},y,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:C,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){return"movementX"in a?a.movementX:(a!==B&&(B&&"mousemove"===a.type?(z=a.screenX-B.screenX,A=a.screenY-B.screenY):A=z=0,B=a),z)},movementY:function(a){return"movementY"in a?a.movementY:A}});v(D),v(q({},D,{dataTransfer:0})),v(q({},y,{relatedTarget:0})),v(q({},w,{animationName:0,elapsedTime:0,pseudoElement:0})),v(q({},w,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}})),v(q({},w,{data:0}));var da={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ea={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fa={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function ha(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):!!(a=fa[a])&&!!b[a]}function C(){return ha}function na(a,b,c,d,f,g,e,h,N){var G=Array.prototype.slice.call(arguments,3);try{b.apply(c,G)}catch(oa){this.onError(oa)}}v(q({},y,{key:function(a){if(a.key){var b=da[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?13===(a=r(a))?"Enter":String.fromCharCode(a):"keydown"===a.type||"keyup"===a.type?ea[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:C,charCode:function(a){return"keypress"===a.type?r(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?r(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}})),v(q({},D,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),v(q({},y,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:C})),v(q({},w,{propertyName:0,elapsedTime:0,pseudoElement:0})),v(q({},D,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}));var H=!1,I=null,J=!1,K=null,pa={onError:function(a){H=!0,I=a}};function qa(a,b,c,d,f,g,e,h,N){H=!1,I=null,na.apply(pa,arguments)}var L=Array.isArray,M=l.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.Events,sa=M[0],ta=M[1],ua=M[2],va=M[3],wa=M[4],xa=k.unstable_act;function ya(){}function za(a,b){if(!a)return[];if(a=function p(a){var b=a.alternate;if(!b){if(null===(b=m(a)))throw Error("Unable to find node on an unmounted component.");return b!==a?null:a}for(var c=a,d=b;;){var f=c.return;if(null===f)break;var g=f.alternate;if(null===g){if(null!==(d=f.return)){c=d;continue}break}if(f.child===g.child){for(g=f.child;g;){if(g===c)return n(f),a;if(g===d)return n(f),b;g=g.sibling}throw Error("Unable to find node on an unmounted component.")}if(c.return!==d.return)c=f,d=g;else{for(var e=!1,h=f.child;h;){if(h===c){e=!0,c=f,d=g;break}if(h===d){e=!0,d=f,c=g;break}h=h.sibling}if(!e){for(h=g.child;h;){if(h===c){e=!0,c=g,d=f;break}if(h===d){e=!0,d=g,c=f;break}h=h.sibling}if(!e)throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.")}}if(c.alternate!==d)throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.")}if(3!==c.tag)throw Error("Unable to find node on an unmounted component.");return c.stateNode.current===c?a:b}(a),!a)return[];for(var c=a,d=[];;){if(5===c.tag||6===c.tag||1===c.tag||0===c.tag){var f=c.stateNode;b(f)&&d.push(f)}if(c.child)c.child.return=c,c=c.child;else{if(c===a)return d;for(;!c.sibling;){if(!c.return||c.return===a)return d;c=c.return}c.sibling.return=c.return,c=c.sibling}}}function O(a,b){if(a&&!a._reactInternals){var c=String(a);throw a=L(a)?"an array":a&&1===a.nodeType&&a.tagName?"a DOM node":"[object Object]"===c?"object with keys {"+Object.keys(a).join(", ")+"}":c,Error(b+"(...): the first argument must be a React class instance. Instead received: "+a+".")}}function P(a){return!(!a||1!==a.nodeType||!a.tagName)}function Q(a){return!P(a)&&(null!=a&&"function"==typeof a.render&&"function"==typeof a.setState)}function R(a,b){return!!Q(a)&&a._reactInternals.type===b}function S(a,b){return O(a,"findAllInRenderedTree"),a?za(a._reactInternals,b):[]}function T(a,b){return O(a,"scryRenderedDOMComponentsWithClass"),S(a,(function(a){if(P(a)){var c=a.className;"string"!=typeof c&&(c=a.getAttribute("class")||"");var f=c.split(/\s+/);if(!L(b)){if(void 0===b)throw Error("TestUtils.scryRenderedDOMComponentsWithClass expects a className as a second argument.");b=b.split(/\s+/)}return b.every((function(a){return-1!==f.indexOf(a)}))}return!1}))}function U(a,b){return O(a,"scryRenderedDOMComponentsWithTag"),S(a,(function(a){return P(a)&&a.tagName.toUpperCase()===b.toUpperCase()}))}function V(a,b){return O(a,"scryRenderedComponentsWithType"),S(a,(function(a){return R(a,b)}))}function W(a,b,c){var d=a.type||"unknown-event";a.currentTarget=ta(c),function ra(a,b,c,d,f,g,e,h,N){if(qa.apply(this,arguments),H){if(!H)throw Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");var G=I;H=!1,I=null,J||(J=!0,K=G)}}(d,b,void 0,a),a.currentTarget=null}function X(a,b,c){for(var d=[];a;){d.push(a);do{a=a.return}while(a&&5!==a.tag);a=a||null}for(a=d.length;0<a--;)b(d[a],"captured",c);for(a=0;a<d.length;a++)b(d[a],"bubbled",c)}function Y(a,b){var c=a.stateNode;if(!c)return null;var d=ua(c);if(!d)return null;c=d[b];a:switch(b){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(d=!d.disabled)||(d=!("button"===(a=a.type)||"input"===a||"select"===a||"textarea"===a)),a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!=typeof c)throw Error("Expected `"+b+"` listener to be a function, instead got a value of `"+typeof c+"` type.");return c}function Ba(a,b,c){var d=c._reactName;"captured"===b&&(d+="Capture"),(b=Y(a,d))&&(null==c._dispatchListeners&&(c._dispatchListeners=[]),null==c._dispatchInstances&&(c._dispatchInstances=[]),c._dispatchListeners.push(b),c._dispatchInstances.push(a))}var Z={},Ca=new Set(["mouseEnter","mouseLeave","pointerEnter","pointerLeave"]);function Da(a){return function(b,c){if(k.isValidElement(b))throw Error("TestUtils.Simulate expected a DOM node as the first argument but received a React element. Pass the DOM node you wish to simulate the event on instead. Note that TestUtils.Simulate will not work if you are using shallow rendering.");if(Q(b))throw Error("TestUtils.Simulate expected a DOM node as the first argument but received a component instance. Pass the DOM node you wish to simulate the event on instead.");var d="on"+a[0].toUpperCase()+a.slice(1),f=new ya;f.target=b,f.type=a.toLowerCase();var g=sa(b),e=new x(d,f.type,g,f,b);e.persist(),q(e,c),Ca.has(a)?e&&e._reactName&&function Aa(a,b,c){a&&c&&c._reactName&&(b=Y(a,c._reactName))&&(null==c._dispatchListeners&&(c._dispatchListeners=[]),null==c._dispatchInstances&&(c._dispatchInstances=[]),c._dispatchListeners.push(b),c._dispatchInstances.push(a))}(e._targetInst,null,e):e&&e._reactName&&X(e._targetInst,Ba,e),l.unstable_batchedUpdates((function(){if(va(b),e){var a=e._dispatchListeners,c=e._dispatchInstances;if(L(a))for(var d=0;d<a.length&&!e.isPropagationStopped();d++)W(e,a[d],c[d]);else a&&W(e,a,c);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}if(J)throw a=K,J=!1,K=null,a})),wa()}}"blur cancel click close contextMenu copy cut auxClick doubleClick dragEnd dragStart drop focus input invalid keyDown keyPress keyUp mouseDown mouseUp paste pause play pointerCancel pointerDown pointerUp rateChange reset resize seeked submit touchCancel touchEnd touchStart volumeChange drag dragEnter dragExit dragLeave dragOver mouseMove mouseOut mouseOver pointerMove pointerOut pointerOver scroll toggle touchMove wheel abort animationEnd animationIteration animationStart canPlay canPlayThrough durationChange emptied encrypted ended error gotPointerCapture load loadedData loadedMetadata loadStart lostPointerCapture playing progress seeking stalled suspend timeUpdate transitionEnd waiting mouseEnter mouseLeave pointerEnter pointerLeave change select beforeInput compositionEnd compositionStart compositionUpdate".split(" ").forEach((function(a){Z[a]=Da(a)})),exports.act=xa},"../node_modules/.pnpm/react-dom@18.3.1_react@18.3.1/node_modules/react-dom/cjs/react-dom.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var aa=__webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),ca=__webpack_require__("../node_modules/.pnpm/scheduler@0.23.2/node_modules/scheduler/index.js");function p(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var da=new Set,ea={};function fa(a,b){ha(a,b),ha(a+"Capture",b)}function ha(a,b){for(ea[a]=b,a=0;a<b.length;a++)da.add(b[a])}var ia=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,la={},ma={};function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b,this.attributeName=d,this.attributeNamespace=e,this.mustUseProperty=c,this.propertyName=a,this.type=b,this.sanitizeURL=f,this.removeEmptyString=g}var z={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(a){z[a]=new v(a,0,!1,a,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(a){z[a]=new v(a,2,!1,a,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(a){z[a]=new v(a,3,!0,a,null,!1,!1)})),["capture","download"].forEach((function(a){z[a]=new v(a,4,!1,a,null,!1,!1)})),["cols","rows","size","span"].forEach((function(a){z[a]=new v(a,6,!1,a,null,!1,!1)})),["rowSpan","start"].forEach((function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)}));var ra=/[\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}function ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;(null!==e?0!==e.type:d||!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1])&&(function qa(a,b,c,d){if(null==b||function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case"function":case"symbol":return!0;case"boolean":return!d&&(null!==c?!c.acceptsBooleans:"data-"!==(a=a.toLowerCase().slice(0,5))&&"aria-"!==a);default:return!1}}(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}(b,c,e,d)&&(c=null),d||null===e?function oa(a){return!!ja.call(ma,a)||!ja.call(la,a)&&(ka.test(a)?ma[a]=!0:(la[a]=!0,!1))}(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3!==e.type&&"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(c=3===(e=e.type)||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)})),z.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)}));var ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for("react.element"),wa=Symbol.for("react.portal"),ya=Symbol.for("react.fragment"),za=Symbol.for("react.strict_mode"),Aa=Symbol.for("react.profiler"),Ba=Symbol.for("react.provider"),Ca=Symbol.for("react.context"),Da=Symbol.for("react.forward_ref"),Ea=Symbol.for("react.suspense"),Fa=Symbol.for("react.suspense_list"),Ga=Symbol.for("react.memo"),Ha=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var Ia=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var Ja=Symbol.iterator;function Ka(a){return null===a||"object"!=typeof a?null:"function"==typeof(a=Ja&&a[Ja]||a["@@iterator"])?a:null}var La,A=Object.assign;function Ma(a){if(void 0===La)try{throw Error()}catch(c){var b=c.stack.trim().match(/\n( *(at )?)/);La=b&&b[1]||""}return"\n"+La+a}var Na=!1;function Oa(a,b){if(!a||Na)return"";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error()},Object.defineProperty(b.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error()}catch(l){d=l}a()}}catch(l){if(l&&d&&"string"==typeof l.stack){for(var e=l.stack.split("\n"),f=d.stack.split("\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h)do{if(g--,0>--h||e[g]!==f[h]){var k="\n"+e[g].replace(" at new "," at ");return a.displayName&&k.includes("<anonymous>")&&(k=k.replace("<anonymous>",a.displayName)),k}}while(1<=g&&0<=h);break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:"")?Ma(a):""}function Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma("Lazy");case 13:return Ma("Suspense");case 19:return Ma("SuspenseList");case 0:case 2:case 15:return a=Oa(a.type,!1);case 11:return a=Oa(a.type.render,!1);case 1:return a=Oa(a.type,!0);default:return""}}function Qa(a){if(null==a)return null;if("function"==typeof a)return a.displayName||a.name||null;if("string"==typeof a)return a;switch(a){case ya:return"Fragment";case wa:return"Portal";case Aa:return"Profiler";case za:return"StrictMode";case Ea:return"Suspense";case Fa:return"SuspenseList"}if("object"==typeof a)switch(a.$$typeof){case Ca:return(a.displayName||"Context")+".Consumer";case Ba:return(a._context.displayName||"Context")+".Provider";case Da:var b=a.render;return(a=a.displayName)||(a=""!==(a=b.displayName||b.name||"")?"ForwardRef("+a+")":"ForwardRef"),a;case Ga:return null!==(b=a.displayName||null)?b:Qa(a.type)||"Memo";case Ha:b=a._payload,a=a._init;try{return Qa(a(b))}catch(c){}}return null}function Ra(a){var b=a.type;switch(a.tag){case 24:return"Cache";case 9:return(b.displayName||"Context")+".Consumer";case 10:return(b._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return a=(a=b.render).displayName||a.name||"",b.displayName||(""!==a?"ForwardRef("+a+")":"ForwardRef");case 7:return"Fragment";case 5:return b;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Qa(b);case 8:return b===za?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof b)return b.displayName||b.name||null;if("string"==typeof b)return b}return null}function Sa(a){switch(typeof a){case"boolean":case"number":case"string":case"undefined":case"object":return a;default:return""}}function Ta(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}function Va(a){a._valueTracker||(a._valueTracker=function Ua(a){var b=Ta(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&void 0!==c&&"function"==typeof c.get&&"function"==typeof c.set){var e=c.get,f=c.set;return Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a,f.call(this,a)}}),Object.defineProperty(a,b,{enumerable:c.enumerable}),{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=null,delete a[b]}}}}(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue(),d="";return a&&(d=Ta(a)?a.checked?"true":"false":a.value),(a=d)!==c&&(b.setValue(a),!0)}function Xa(a){if(void 0===(a=a||("undefined"!=typeof document?document:void 0)))return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c),a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){null!=(b=b.checked)&&ta(a,"checked",b,!1)}function bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)"number"===d?(0===c&&""===a.value||a.value!=c)&&(a.value=""+c):a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d)return void a.removeAttribute("value");b.hasOwnProperty("value")?cb(a,b.type,c):b.hasOwnProperty("defaultValue")&&cb(a,b.type,Sa(b.defaultValue)),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}function db(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue,c||b===a.value||(a.value=b),a.defaultValue=b}""!==(c=a.name)&&(a.name=""),a.defaultChecked=!!a._wrapperState.initialChecked,""!==c&&(a.name=c)}function cb(a,b,c){"number"===b&&Xa(a.ownerDocument)===a||(null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c))}var eb=Array.isArray;function fb(a,b,c,d){if(a=a.options,b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{for(c=""+Sa(c),b=null,e=0;e<a.length;e++){if(a[e].value===c)return a[e].selected=!0,void(d&&(a[e].defaultSelected=!0));null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}function gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){if(c=b.children,b=b.defaultValue,null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=""),c=b}a._wrapperState={initialValue:Sa(c)}}function ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&((c=""+c)!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c)),null!=d&&(a.defaultValue=""+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function lb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?kb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}var mb,a,nb=(a=function(a,b){if("http://www.w3.org/2000/svg"!==a.namespaceURI||"innerHTML"in a)a.innerHTML=b;else{for((mb=mb||document.createElement("div")).innerHTML="<svg>"+b.valueOf().toString()+"</svg>",b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction((function(){return a(b,c)}))}:a);function ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType)return void(c.nodeValue=b)}a.textContent=b}var pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=["Webkit","ms","Moz","O"];function rb(a,b,c){return null==b||"boolean"==typeof b||""===b?"":c||"number"!=typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(""+b).trim():b+"px"}function sb(a,b){for(var c in a=a.style,b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=rb(c,b[c],d);"float"===c&&(c="cssFloat"),d?a.setProperty(c,e):a[c]=e}}Object.keys(pb).forEach((function(a){qb.forEach((function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1),pb[b]=pb[a]}))}));var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if("object"!=typeof b.dangerouslySetInnerHTML||!("__html"in b.dangerouslySetInnerHTML))throw Error(p(61))}if(null!=b.style&&"object"!=typeof b.style)throw Error(p(62))}}function vb(a,b){if(-1===a.indexOf("-"))return"string"==typeof b.is;switch(a){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var wb=null;function xb(a){return(a=a.target||a.srcElement||window).correspondingUseElement&&(a=a.correspondingUseElement),3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;function Bb(a){if(a=Cb(a)){if("function"!=typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;if(Ab=zb=null,Bb(a),b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{Ib=!1,(null!==zb||null!==Ab)&&(Hb(),Fb())}}function Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(d=!d.disabled)||(d=!("button"===(a=a.type)||"input"===a||"select"===a||"textarea"===a)),a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!=typeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,"passive",{get:function(){Lb=!0}}),window.addEventListener("test",Mb,Mb),window.removeEventListener("test",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0,Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1,Pb=null,Nb.apply(Sb,arguments)}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do{!!(4098&(b=a).flags)&&(c=b.return),a=b.return}while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;if(null===b&&(null!==(a=a.alternate)&&(b=a.memoizedState)),null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188))}function Zb(a){return null!==(a=function Yb(a){var b=a.alternate;if(!b){if(null===(b=Vb(a)))throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){if(null!==(d=e.return)){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188))}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0,c=e,d=f;break}if(h===d){g=!0,d=e,c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0,c=f,d=e;break}if(h===d){g=!0,d=f,c=e;break}h=h.sibling}if(!g)throw Error(p(189))}}if(c.alternate!==d)throw Error(p(190))}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}(a))?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}var ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;var oc=Math.clz32?Math.clz32:function nc(a){return a>>>=0,0===a?32:31-(pc(a)/qc|0)|0},pc=Math.log,qc=Math.LN2;var rc=64,sc=4194304;function tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&a;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&a;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=268435455&c;if(0!==g){var h=g&~e;0!==h?d=tc(h):0!==(f&=g)&&(d=tc(f))}else 0!==(g=c&~e)?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&!(b&e)&&((e=d&-d)>=(f=b&-b)||16===e&&4194240&f))return b;if(4&d&&(d|=16&c),0!==(b=a.entangledLanes))for(a=a.entanglements,b&=d;0<b;)e=1<<(c=31-oc(b)),d|=a[c],b&=~e;return d}function vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5e3;default:return-1}}function xc(a){return 0!==(a=-1073741825&a.pendingLanes)?a:1073741824&a?1073741824:0}function yc(){var a=rc;return!(4194240&(rc<<=1))&&(rc=64),a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}function Ac(a,b,c){a.pendingLanes|=b,536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0),(a=a.eventTimes)[b=31-oc(b)]=c}function Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b),c&=~e}}var C=0;function Dc(a){return 1<(a&=-a)?4<a?268435455&a?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Sc(a,b){switch(a){case"focusin":case"focusout":Lc=null;break;case"dragenter":case"dragleave":Mc=null;break;case"mouseover":case"mouseout":Nc=null;break;case"pointerover":case"pointerout":Oc.delete(b.pointerId);break;case"gotpointercapture":case"lostpointercapture":Pc.delete(b.pointerId)}}function Tc(a,b,c,d,e,f){return null===a||a.nativeEvent!==f?(a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(null!==(b=Cb(b))&&Fc(b)),a):(a.eventSystemFlags|=d,b=a.targetContainers,null!==e&&-1===b.indexOf(e)&&b.push(e),a)}function Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(13===(b=c.tag)){if(null!==(b=Wb(c)))return a.blockedOn=b,void Ic(a.priority,(function(){Gc(c)}))}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated)return void(a.blockedOn=3===c.tag?c.stateNode.containerInfo:null)}a.blockedOn=null}function Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return null!==(b=Cb(c))&&Fc(b),a.blockedOn=c,!1;var d=new(c=a.nativeEvent).constructor(c.type,c);wb=d,c.target.dispatchEvent(d),wb=null,b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1,null!==Lc&&Xc(Lc)&&(Lc=null),null!==Mc&&Xc(Mc)&&(Mc=null),null!==Nc&&Xc(Nc)&&(Nc=null),Oc.forEach(Zc),Pc.forEach(Zc)}function ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}function bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}for(null!==Lc&&ad(Lc,a),null!==Mc&&ad(Mc,a),null!==Nc&&ad(Nc,a),Oc.forEach(b),Pc.forEach(b),c=0;c<Qc.length;c++)(d=Qc[c]).blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&null===(c=Qc[0]).blockedOn;)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;function ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(function Uc(a,b,c,d,e){switch(b){case"focusin":return Lc=Tc(Lc,a,b,c,d,e),!0;case"dragenter":return Mc=Tc(Mc,a,b,c,d,e),!0;case"mouseover":return Nc=Tc(Nc,a,b,c,d,e),!0;case"pointerover":var f=e.pointerId;return Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e)),!0;case"gotpointercapture":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),4&b&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);if(null!==f&&Ec(f),null===(f=Yc(a,b,c,d))&&hd(a,b,d,id,c),f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;function Yc(a,b,c,d){if(id=null,null!==(a=Wc(a=xb(d))))if(null===(b=Vb(a)))a=null;else if(13===(c=b.tag)){if(null!==(a=Wb(b)))return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);return id=a,null}function jd(a){switch(a){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,d,b=ld,c=b.length,e="value"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;return"charCode"in a?0===(a=a.charCode)&&13===b&&(a=13):a=b,10===a&&(a=13),32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}function rd(a){function b(b,d,e,f,g){for(var c in this._reactName=b,this._targetInst=e,this.type=d,this.nativeEvent=f,this.target=g,this.currentTarget=null,a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);return this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd,this.isPropagationStopped=qd,this}return A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!=typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!=typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd}),b}var wd,xd,yd,sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){return"movementX"in a?a.movementX:(a!==yd&&(yd&&"mousemove"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a),wd)},movementY:function(a){return"movementY"in a?a.movementY:xd}}),Bd=rd(Ad),Dd=rd(A({},Ad,{dataTransfer:0})),Fd=rd(A({},ud,{relatedTarget:0})),Hd=rd(A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0})),Id=A({},sd,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Ld=rd(A({},sd,{data:0})),Md={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):!!(a=Od[a])&&!!b[a]}function zd(){return Pd}var Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?13===(a=od(a))?"Enter":String.fromCharCode(a):"keydown"===a.type||"keyup"===a.type?Nd[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return"keypress"===a.type?od(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?od(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),Rd=rd(Qd),Td=rd(A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Vd=rd(A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd})),Xd=rd(A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0})),Yd=A({},Ad,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&"CompositionEvent"in window,be=null;ia&&"documentMode"in document&&(be=document.documentMode);var ce=ia&&"TextEvent"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;function ge(a,b){switch(a){case"keyup":return-1!==$d.indexOf(b.keyCode);case"keydown":return 229!==b.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function he(a){return"object"==typeof(a=a.detail)&&"data"in a?a.data:null}var ie=!1;var le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!le[a.type]:"textarea"===b}function ne(a,b,c,d){Eb(d),0<(b=oe(b,"onChange")).length&&(c=new td("onChange","change",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){if(Wa(ue(a)))return a}function ve(a,b){if("change"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;"),ye="function"==typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(a){if("value"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a)),Jb(re,b)}}function Ce(a,b,c){"focusin"===a?(Ae(),qe=c,(pe=b).attachEvent("onpropertychange",Be)):"focusout"===a&&Ae()}function De(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return te(qe)}function Ee(a,b){if("click"===a)return te(b)}function Fe(a,b){if("input"===a||"change"===a)return te(b)}var He="function"==typeof Object.is?Object.is:function Ge(a,b){return a===b&&(0!==a||1/a==1/b)||a!=a&&b!=b};function Ie(a,b){if(He(a,b))return!0;if("object"!=typeof a||null===a||"object"!=typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function Ke(a,b){var d,c=Je(a);for(a=0;c;){if(3===c.nodeType){if(d=a+c.textContent.length,a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return!(!a||!b)&&(a===b||(!a||3!==a.nodeType)&&(b&&3===b.nodeType?Le(a,b.parentNode):"contains"in a?a.contains(b):!!a.compareDocumentPosition&&!!(16&a.compareDocumentPosition(b))))}function Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c="string"==typeof b.contentWindow.location.href}catch(d){c=!1}if(!c)break;b=Xa((a=b.contentWindow).document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}function Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,void 0===(a=d.end)&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if((a=(b=c.ownerDocument||document)&&b.defaultView||window).getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e),!a.extend&&f>d&&(e=d,d=f,f=e),e=Ke(c,f);var g=Ke(c,d);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&((b=b.createRange()).setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}for(b=[],a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});for("function"==typeof c.focus&&c.focus(),c=0;c<b.length;c++)(a=b[c]).element.scrollLeft=a.left,a.element.scrollTop=a.top}}var Pe=ia&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;function Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||("selectionStart"in(d=Qe)&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:d={anchorNode:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset},Se&&Ie(Se,d)||(Se=d,0<(d=oe(Re,"onSelect")).length&&(b=new td("onSelect","select",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}function Ve(a,b){var c={};return c[a.toLowerCase()]=b.toLowerCase(),c["Webkit"+a]="webkit"+b,c["Moz"+a]="moz"+b,c}var We={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},Xe={},Ye={};function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var c,b=We[a];for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}ia&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);var $e=Ze("animationend"),af=Ze("animationiteration"),bf=Ze("animationstart"),cf=Ze("transitionend"),df=new Map,ef="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function ff(a,b){df.set(a,b),fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf];ff(hf.toLowerCase(),"on"+(hf[0].toUpperCase()+hf.slice(1)))}ff($e,"onAnimationEnd"),ff(af,"onAnimationIteration"),ff(bf,"onAnimationStart"),ff("dblclick","onDoubleClick"),ff("focusin","onFocus"),ff("focusout","onBlur"),ff(cf,"onTransitionEnd"),ha("onMouseEnter",["mouseout","mouseover"]),ha("onMouseLeave",["mouseout","mouseover"]),ha("onPointerEnter",["pointerout","pointerover"]),ha("onPointerLeave",["pointerout","pointerover"]),fa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),fa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),fa("onBeforeInput",["compositionend","keypress","textInput","paste"]),fa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),fa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),fa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var lf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),mf=new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));function nf(a,b,c){var d=a.type||"unknown-event";a.currentTarget=c,function Ub(a,b,c,d,e,f,g,h,k){if(Tb.apply(this,arguments),Ob){if(!Ob)throw Error(p(198));var l=Pb;Ob=!1,Pb=null,Qb||(Qb=!0,Rb=l)}}(d,b,void 0,a),a.currentTarget=null}function se(a,b){b=!!(4&b);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;if(h=h.listener,k!==f&&e.isPropagationStopped())break a;nf(e,h,l),f=k}else for(g=0;g<d.length;g++){if(k=(h=d[g]).instance,l=h.currentTarget,h=h.listener,k!==f&&e.isPropagationStopped())break a;nf(e,h,l),f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a}function D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+"__bubble";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4),pf(c,a,d,b)}var rf="_reactListening"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0,da.forEach((function(b){"selectionchange"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))}));var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf("selectionchange",!1,b))}}function pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a),e=void 0,!Lb||"touchstart"!==b&&"touchmove"!==b&&"wheel"!==b||(e=!0),d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}function hd(a,b,c,d,e){var f=d;if(!(1&b||2&b||null===d))a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if((3===k||4===k)&&((k=g.stateNode.containerInfo)===e||8===k.nodeType&&k.parentNode===e))return;g=g.return}for(;null!==h;){if(null===(g=Wc(h)))return;if(5===(k=g.tag)||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb((function(){var d=f,e=xb(c),g=[];a:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case"keypress":if(0===od(c))break a;case"keydown":case"keyup":k=Rd;break;case"focusin":n="focus",k=Fd;break;case"focusout":n="blur",k=Fd;break;case"beforeblur":case"afterblur":k=Fd;break;case"click":if(2===c.button)break a;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":k=Bd;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":k=Dd;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case"scroll":k=vd;break;case"wheel":k=Zd;break;case"copy":case"cut":case"paste":k=Jd;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":k=Td}var t=!!(4&b),J=!t&&"scroll"===a,x=t?null!==h?h+"Capture":null:h;t=[];for(var u,w=d;null!==w;){var F=(u=w).stateNode;if(5===u.tag&&null!==F&&(u=F,null!==x&&(null!=(F=Kb(w,x))&&t.push(tf(w,F,u)))),J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(!(7&b)){if(k="mouseout"===a||"pointerout"===a,(!(h="mouseover"===a||"pointerover"===a)||c===wb||!(n=c.relatedTarget||c.fromElement)||!Wc(n)&&!n[uf])&&(k||h)&&(h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window,k?(k=d,null!==(n=(n=c.relatedTarget||c.toElement)?Wc(n):null)&&(n!==(J=Vb(n))||5!==n.tag&&6!==n.tag)&&(n=null)):(k=null,n=d),k!==n)){if(t=Bd,F="onMouseLeave",x="onMouseEnter",w="mouse","pointerout"!==a&&"pointerover"!==a||(t=Td,F="onPointerLeave",x="onPointerEnter",w="pointer"),J=null==k?h:ue(k),u=null==n?h:ue(n),(h=new t(F,w+"leave",k,c,e)).target=J,h.relatedTarget=u,F=null,Wc(e)===d&&((t=new t(x,w+"enter",n,c,e)).target=u,t.relatedTarget=J,F=t),J=F,k&&n)b:{for(x=n,w=0,u=t=k;u;u=vf(u))w++;for(u=0,F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=vf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t),x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1),null!==n&&null!==J&&wf(g,J,n,t,!0)}if("select"===(k=(h=d?ue(d):window).nodeName&&h.nodeName.toLowerCase())||"input"===k&&"file"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&"input"===k.toLowerCase()&&("checkbox"===h.type||"radio"===h.type)&&(na=Ee);switch(na&&(na=na(a,d))?ne(g,na,c,e):(xa&&xa(a,h,d),"focusout"===a&&(xa=h._wrapperState)&&xa.controlled&&"number"===h.type&&cb(h,"number",h.value)),xa=d?ue(d):window,a){case"focusin":(me(xa)||"true"===xa.contentEditable)&&(Qe=xa,Re=d,Se=null);break;case"focusout":Se=Re=Qe=null;break;case"mousedown":Te=!0;break;case"contextmenu":case"mouseup":case"dragend":Te=!1,Ue(g,c,e);break;case"selectionchange":if(Pe)break;case"keydown":case"keyup":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case"compositionstart":var ba="onCompositionStart";break b;case"compositionend":ba="onCompositionEnd";break b;case"compositionupdate":ba="onCompositionUpdate";break b}ba=void 0}else ie?ge(a,c)&&(ba="onCompositionEnd"):"keydown"===a&&229===c.keyCode&&(ba="onCompositionStart");ba&&(de&&"ko"!==c.locale&&(ie||"onCompositionStart"!==ba?"onCompositionEnd"===ba&&ie&&($a=nd()):(ld="value"in(kd=e)?kd.value:kd.textContent,ie=!0)),0<(xa=oe(d,ba)).length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:null!==($a=he(c))&&(ba.data=$a))),($a=ce?function je(a,b){switch(a){case"compositionend":return he(b);case"keypress":return 32!==b.which?null:(fe=!0,ee);case"textInput":return(a=b.data)===ee&&fe?null:a;default:return null}}(a,c):function ke(a,b){if(ie)return"compositionend"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case"paste":default:return null;case"keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case"compositionend":return de&&"ko"!==b.locale?null:b.data}}(a,c))&&(0<(d=oe(d,"onBeforeInput")).length&&(e=new Ld("onBeforeInput","beforeinput",null,c,e),g.push({event:e,listeners:d}),e.data=$a))}se(g,b)}))}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+"Capture",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,null!=(f=Kb(a,c))&&d.unshift(tf(a,f,e)),null!=(f=Kb(a,b))&&d.push(tf(a,f,e))),a=a.return}return d}function vf(a){if(null===a)return null;do{a=a.return}while(a&&5!==a.tag);return a||null}function wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?null!=(k=Kb(c,f))&&g.unshift(tf(c,k,h)):e||null!=(k=Kb(c,f))&&g.push(tf(c,k,h))),c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\r\n?/g,yf=/\u0000|\uFFFD/g;function zf(a){return("string"==typeof a?a:""+a).replace(xf,"\n").replace(yf,"")}function Af(a,b,c){if(b=zf(b),zf(a)!==b&&c)throw Error(p(425))}function Bf(){}var Cf=null,Df=null;function Ef(a,b){return"textarea"===a||"noscript"===a||"string"==typeof b.children||"number"==typeof b.children||"object"==typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var Ff="function"==typeof setTimeout?setTimeout:void 0,Gf="function"==typeof clearTimeout?clearTimeout:void 0,Hf="function"==typeof Promise?Promise:void 0,Jf="function"==typeof queueMicrotask?queueMicrotask:void 0!==Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout((function(){throw a}))}function Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;if(a.removeChild(c),e&&8===e.nodeType)if("/$"===(c=e.data)){if(0===d)return a.removeChild(e),void bd(b);d--}else"$"!==c&&"$?"!==c&&"$!"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){if("$"===(b=a.data)||"$!"===b||"$?"===b)break;if("/$"===b)return null}}return a}function Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if("$"===c||"$!"===c||"$?"===c){if(0===b)return a;b--}else"/$"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of="__reactFiber$"+Nf,Pf="__reactProps$"+Nf,uf="__reactContainer$"+Nf,of="__reactEvents$"+Nf,Qf="__reactListeners$"+Nf,Rf="__reactHandles$"+Nf;function Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){if(c=b.alternate,null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}c=(a=c).parentNode}return null}function Cb(a){return!(a=a[Of]||a[uf])||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33))}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}function E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++,Sf[Tf]=a.current,a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var f,e={};for(f in c)e[f]=b[f];return d&&((a=a.stateNode).__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e),e}function Zf(a){return null!=(a=a.childContextTypes)}function $f(){E(Wf),E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b),G(Wf,c)}function bg(a,b,c){var d=a.stateNode;if(b=b.childContextTypes,"function"!=typeof d.getChildContext)return c;for(var e in d=d.getChildContext())if(!(e in b))throw Error(p(108,Ra(a)||"Unknown",e));return A({},c,d)}function cg(a){return a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf,Xf=H.current,G(H,a),G(Wf,Wf.current),!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf),G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do{d=d(!0)}while(null!==d)}eg=null,fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg="";function tg(a,b){kg[lg++]=ng,kg[lg++]=mg,mg=a,ng=b}function ug(a,b,c){og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e),c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32),d>>=g,e-=g,rg=1<<32-oc(b)+e|c<<e|d,sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;function Ag(a,b){var c=Bg(5,null,null,0);c.elementType="DELETED",c.stateNode=b,c.return=a,null===(b=a.deletions)?(a.deletions=[c],a.flags|=16):b.push(c)}function Cg(a,b){switch(a.tag){case 5:var c=a.type;return null!==(b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b)&&(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0);case 6:return null!==(b=""===a.pendingProps||3!==b.nodeType?null:b)&&(a.stateNode=b,xg=a,yg=null,!0);case 13:return null!==(b=8!==b.nodeType?null:b)&&(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},(c=Bg(18,null,null,0)).stateNode=b,c.return=a,a.child=c,xg=a,yg=null,!0);default:return!1}}function Dg(a){return!(!(1&a.mode)||128&a.flags)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=-4097&a.flags|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=-4097&a.flags|2,I=!1,xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}function Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;if((b=3!==a.tag)&&!(b=5!==a.tag)&&(b="head"!==(b=a.type)&&"body"!==b&&!Ef(a.type,a.memoizedProps)),b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}if(Fg(a),13===a.tag){if(!(a=null!==(a=a.memoizedState)?a.dehydrated:null))throw Error(p(317));a:{for(a=a.nextSibling,b=0;a;){if(8===a.nodeType){var c=a.data;if("/$"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else"$"!==c&&"$!"!==c&&"$?"!==c||b++}a=a.nextSibling}yg=null}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null,I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b,c){if(null!==(a=c.ref)&&"function"!=typeof a&&"object"!=typeof a){if(c._owner){if(c=c._owner){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=""+a;return null!==b&&null!==b.ref&&"function"==typeof b.ref&&b.ref._stringRef===f?b.ref:(b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a},b._stringRef=f,b)}if("string"!=typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a))}return a}function Mg(a,b){throw a=Object.prototype.toString.call(b),Error(p(31,"[object Object]"===a?"object with keys {"+Object.keys(b).join(", ")+"}":a))}function Ng(a){return(0,a._init)(a._payload)}function Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){return(a=Pg(a,b)).index=0,a.sibling=null,a}function f(b,c,d){return b.index=d,a?null!==(d=b.alternate)?(d=d.index)<c?(b.flags|=2,c):d:(b.flags|=2,c):(b.flags|=1048576,c)}function g(b){return a&&null===b.alternate&&(b.flags|=2),b}function h(a,b,c,d){return null===b||6!==b.tag?((b=Qg(c,a.mode,d)).return=a,b):((b=e(b,c)).return=a,b)}function k(a,b,c,d){var f=c.type;return f===ya?m(a,b,c.props.children,d,c.key):null!==b&&(b.elementType===f||"object"==typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type)?((d=e(b,c.props)).ref=Lg(a,b,c),d.return=a,d):((d=Rg(c.type,c.key,c.props,null,a.mode,d)).ref=Lg(a,b,c),d.return=a,d)}function l(a,b,c,d){return null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation?((b=Sg(c,a.mode,d)).return=a,b):((b=e(b,c.children||[])).return=a,b)}function m(a,b,c,d,f){return null===b||7!==b.tag?((b=Tg(c,a.mode,d,f)).return=a,b):((b=e(b,c)).return=a,b)}function q(a,b,c){if("string"==typeof b&&""!==b||"number"==typeof b)return(b=Qg(""+b,a.mode,c)).return=a,b;if("object"==typeof b&&null!==b){switch(b.$$typeof){case va:return(c=Rg(b.type,b.key,b.props,null,a.mode,c)).ref=Lg(a,null,b),c.return=a,c;case wa:return(b=Sg(b,a.mode,c)).return=a,b;case Ha:return q(a,(0,b._init)(b._payload),c)}if(eb(b)||Ka(b))return(b=Tg(b,a.mode,c,null)).return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if("string"==typeof c&&""!==c||"number"==typeof c)return null!==e?null:h(a,b,""+c,d);if("object"==typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return r(a,b,(e=c._init)(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if("string"==typeof d&&""!==d||"number"==typeof d)return h(b,a=a.get(c)||null,""+d,e);if("object"==typeof d&&null!==d){switch(d.$$typeof){case va:return k(b,a=a.get(null===d.key?c:d.key)||null,d,e);case wa:return l(b,a=a.get(null===d.key?c:d.key)||null,d,e);case Ha:return y(a,b,c,(0,d._init)(d._payload),e)}if(eb(d)||Ka(d))return m(b,a=a.get(c)||null,d,e,null);Mg(b,d)}return null}function n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u),g=f(n,g,w),null===m?l=n:m.sibling=n,m=n,u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)null!==(u=q(e,h[w],k))&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);return I&&tg(e,w),l}for(u=d(e,u);w<h.length;w++)null!==(x=y(u,e,w,h[w],k))&&(a&&null!==x.alternate&&u.delete(null===x.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);return a&&u.forEach((function(a){return b(e,a)})),I&&tg(e,w),l}function t(e,g,h,k){var l=Ka(h);if("function"!=typeof l)throw Error(p(150));if(null==(h=l.call(h)))throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m),g=f(t,g,w),null===u?l=t:u.sibling=t,u=t,m=x}if(n.done)return c(e,m),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())null!==(n=q(e,n.value,k))&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);return I&&tg(e,w),l}for(m=d(e,m);!n.done;w++,n=h.next())null!==(n=y(m,e,w,n.value,k))&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);return a&&m.forEach((function(a){return b(e,a)})),I&&tg(e,w),l}return function J(a,d,f,h){if("object"==typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children),"object"==typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=f.key,l=d;null!==l;){if(l.key===k){if((k=f.type)===ya){if(7===l.tag){c(a,l.sibling),(d=e(l,f.props.children)).return=a,a=d;break a}}else if(l.elementType===k||"object"==typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling),(d=e(l,f.props)).ref=Lg(a,l,f),d.return=a,a=d;break a}c(a,l);break}b(a,l),l=l.sibling}f.type===ya?((d=Tg(f.props.children,a.mode,h,f.key)).return=a,a=d):((h=Rg(f.type,f.key,f.props,null,a.mode,h)).ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==d;){if(d.key===l){if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling),(d=e(d,f.children||[])).return=a,a=d;break a}c(a,d);break}b(a,d),d=d.sibling}(d=Sg(f,a.mode,h)).return=a,a=d}return g(a);case Ha:return J(a,d,(l=f._init)(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return"string"==typeof f&&""!==f||"number"==typeof f?(f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),(d=e(d,f)).return=a,a=d):(c(a,d),(d=Qg(f,a.mode,h)).return=a,a=d),g(a)):c(a,d)}}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg),a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;if((a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b),a===c)break;a=a.return}}function ch(a,b){Xg=a,Zg=Yg=null,null!==(a=a.dependencies)&&null!==a.firstContext&&(!!(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a,Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}function hh(a,b,c,d){var e=b.interleaved;return null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c),b.interleaved=c,ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;for(null!==c&&(c.lanes|=b),c=a,a=a.return;null!==a;)a.childLanes|=b,null!==(c=a.alternate)&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function lh(a,b){a=a.updateQueue,b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function nh(a,b,c){var d=a.updateQueue;if(null===d)return null;if(d=d.shared,2&K){var e=d.pending;return null===e?b.next=b:(b.next=e.next,e.next=b),d.pending=b,ih(a,c)}return null===(e=d.interleaved)?(b.next=b,gh(d)):(b.next=e.next,e.next=b),d.interleaved=b,ih(a,c)}function oh(a,b,c){if(null!==(b=b.updateQueue)&&(b=b.shared,4194240&c)){var d=b.lanes;c|=d&=a.pendingLanes,b.lanes=c,Cc(a,c)}}function ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&c===(d=d.updateQueue)){var e=null,f=null;if(null!==(c=c.firstBaseUpdate)){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g,c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;return c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects},void(a.updateQueue=c)}null===(a=c.lastBaseUpdate)?c.firstBaseUpdate=b:a.next=b,c.lastBaseUpdate=b}function qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null,null===g?f=l:g.next=l,g=k;var m=a.alternate;null!==m&&((h=(m=m.updateQueue).lastBaseUpdate)!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;for(g=0,m=l=k=null,h=f;;){var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,next:null});a:{var n=a,t=h;switch(r=b,y=c,t.tag){case 1:if("function"==typeof(n=t.payload)){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=-65537&n.flags|128;case 0:if(null==(r="function"==typeof(n=t.payload)?n.call(y,q,r):n))break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,null===(r=e.effects)?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;if(null===(h=h.next)){if(null===(h=e.shared.pending))break;h=(r=h).next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}}if(null===m&&(k=q),e.baseState=k,e.firstBaseUpdate=l,e.lastBaseUpdate=m,null!==(b=e.shared.interleaved)){e=b;do{g|=e.lane,e=e.next}while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g,a.lanes=g,a.memoizedState=q}}function sh(a,b,c){if(a=b.effects,b.effects=null,null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){if(d.callback=null,d=c,"function"!=typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}function yh(a,b){switch(G(wh,b),G(vh,a),G(uh,th),a=b.nodeType){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,"");break;default:b=lb(b=(a=8===a?b.parentNode:b).namespaceURI||null,a=a.tagName)}E(uh),G(uh,b)}function zh(){E(uh),E(vh),E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current),c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);function Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(null===(c=c.dehydrated)||"$?"===c.data||"$!"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(128&b.flags)return b}else if(null!==b.child){b.child.return=b,b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return,b=b.sibling}return null}var Dh=[];function Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321))}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}function Nh(a,b,c,d,e,f){if(Hh=f,M=b,b.memoizedState=null,b.updateQueue=null,b.lanes=0,Fh.current=null===a||null===a.memoizedState?Oh:Ph,a=c(d,e),Jh){f=0;do{if(Jh=!1,Kh=0,25<=f)throw Error(p(301));f+=1,O=N=null,b.updateQueue=null,Fh.current=Qh,a=c(d,e)}while(Jh)}if(Fh.current=Rh,b=null!==N&&null!==N.next,Hh=0,O=N=M=null,Ih=!1,b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;return Kh=0,a}function Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===O?M.memoizedState=O=a:O=O.next=a,O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));a={memoizedState:(N=a).memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null},null===O?M.memoizedState=O=a:O=O.next=a}return O}function Vh(a,b){return"function"==typeof b?b(a):b}function Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next,f.next=g}d.baseQueue=e=f,c.pending=null}if(null!==e){f=e.next,d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q,M.lanes|=m,rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h,He(d,b.memoizedState)||(dh=!0),b.memoizedState=d,b.baseState=g,b.baseQueue=k,c.lastRenderedState=d}if(null!==(a=c.interleaved)){e=a;do{f=e.lane,M.lanes|=f,rh|=f,e=e.next}while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}function Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do{f=a(f,g.action),g=g.next}while(g!==e);He(f,b.memoizedState)||(dh=!0),b.memoizedState=f,null===b.baseQueue&&(b.baseState=f),c.lastRenderedState=f}return[f,d]}function Yh(){}function Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);if(f&&(d.memoizedState=e,dh=!0),d=d.queue,$h(ai.bind(null,c,d,a),[a]),d.getSnapshot!==b||f||null!==O&&1&O.memoizedState.tag){if(c.flags|=2048,bi(9,ci.bind(null,c,d,e,b),void 0,null),null===Q)throw Error(p(349));30&Hh||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384,a={getSnapshot:b,value:c},null===(b=M.updateQueue)?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):null===(c=b.stores)?b.stores=[a]:c.push(a)}function ci(a,b,c,d){b.value=c,b.getSnapshot=d,ei(b)&&fi(a)}function ai(a,b,c){return c((function(){ei(b)&&fi(a)}))}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}function hi(a){var b=Th();return"function"==typeof a&&(a=a()),b.memoizedState=b.baseState=a,a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a},b.queue=a,a=a.dispatch=ii.bind(null,M,a),[b.memoizedState,a]}function bi(a,b,c,d){return a={tag:a,create:b,destroy:c,deps:d,next:null},null===(b=M.updateQueue)?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):null===(c=b.lastEffect)?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a),a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a,e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}function li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;if(f=g.destroy,null!==d&&Mh(d,g.deps))return void(e.memoizedState=bi(b,c,f,d))}M.flags|=a,e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}function pi(a,b){return"function"==typeof b?(a=a(),b(a),function(){b(null)}):null!=b?(a=a(),b.current=a,function(){b.current=null}):void 0}function qi(a,b,c){return c=null!=c?c.concat([a]):null,li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;return null!==d&&null!==b&&Mh(b,d[1])?d[0]:(c.memoizedState=[a,b],a)}function ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;return null!==d&&null!==b&&Mh(b,d[1])?d[0]:(a=a(),c.memoizedState=[a,b],a)}function ui(a,b,c){return 21&Hh?(He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0),b):(a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c)}function vi(a,b){var c=C;C=0!==c&&4>c?c:4,a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}function xi(a,b,c){var d=yi(a);if(c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null},zi(a))Ai(b,c);else if(null!==(c=hh(a,b,c,d))){gi(c,a,d,R()),Bi(c,b,d)}}function ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&null!==(f=b.lastRenderedReducer))try{var g=b.lastRenderedState,h=f(g,c);if(e.hasEagerState=!0,e.eagerState=h,He(h,g)){var k=b.interleaved;return null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e),void(b.interleaved=e)}}catch(l){}null!==(c=hh(a,b,e,d))&&(gi(c,a,d,e=R()),Bi(c,b,d))}}function zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b),a.pending=b}function Bi(a,b,c){if(4194240&c){var d=b.lanes;c|=d&=a.pendingLanes,b.lanes=c,Cc(a,c)}}var Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){return Th().memoizedState=[a,void 0===b?null:b],a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){return c=null!=c?c.concat([a]):null,ki(4194308,4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();return b=void 0===b?null:b,a=a(),c.memoizedState=[a,b],a},useReducer:function(a,b,c){var d=Th();return b=void 0!==c?c(b):b,d.memoizedState=d.baseState=b,a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b},d.queue=a,a=a.dispatch=xi.bind(null,M,a),[d.memoizedState,a]},useRef:function(a){return a={current:a},Th().memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];return a=vi.bind(null,a[1]),Th().memoizedState=a,[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{if(c=b(),null===Q)throw Error(p(349));30&Hh||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};return e.queue=f,mi(ai.bind(null,d,f,a),[a]),d.flags|=2048,bi(9,ci.bind(null,d,f,c,b),void 0,null),c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;b=":"+b+"R"+(c=(rg&~(1<<32-oc(rg)-1)).toString(32)+c),0<(c=Kh++)&&(b+="H"+c.toString(32)),b+=":"}else b=":"+b+"r"+(c=Lh++).toString(32)+":";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},useDebugValue:ri,useDeferredValue:function(a){return ui(Uh(),N.memoizedState,a)},useTransition:function(){return[Wh(Vh)[0],Uh().memoizedState]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===N?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){return[Xh(Vh)[0],Uh().memoizedState]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){for(var c in b=A({},b),a=a.defaultProps)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){c=null==(c=c(d,b=a.memoizedState))?b:A({},b,c),a.memoizedState=c,0===a.lanes&&(a.updateQueue.baseState=c)}var Ei={isMounted:function(a){return!!(a=a._reactInternals)&&Vb(a)===a},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b,null!=c&&(f.callback=c),null!==(b=nh(a,f,e))&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1,f.payload=b,null!=c&&(f.callback=c),null!==(b=nh(a,f,e))&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=yi(a),e=mh(c,d);e.tag=2,null!=b&&(e.callback=b),null!==(b=nh(a,e,d))&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){return"function"==typeof(a=a.stateNode).shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):!b.prototype||!b.prototype.isPureReactComponent||(!Ie(c,d)||!Ie(e,f))}function Gi(a,b,c){var d=!1,e=Vf,f=b.contextType;return"object"==typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,f=(d=null!=(d=b.contextTypes))?Yf(a,e):Vf),b=new b(c,f),a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null,b.updater=Ei,a.stateNode=b,b._reactInternals=a,d&&((a=a.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f),b}function Hi(a,b,c,d){a=b.state,"function"==typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d),"function"==typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d),b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}function Ii(a,b,c,d){var e=a.stateNode;e.props=c,e.state=a.memoizedState,e.refs={},kh(a);var f=b.contextType;"object"==typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f)),e.state=a.memoizedState,"function"==typeof(f=b.getDerivedStateFromProps)&&(Di(a,b,f,c),e.state=a.memoizedState),"function"==typeof b.getDerivedStateFromProps||"function"==typeof e.getSnapshotBeforeUpdate||"function"!=typeof e.UNSAFE_componentWillMount&&"function"!=typeof e.componentWillMount||(b=e.state,"function"==typeof e.componentWillMount&&e.componentWillMount(),"function"==typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState),"function"==typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c="",d=b;do{c+=Pa(d),d=d.return}while(d);var e=c}catch(f){e="\nError generating stack: "+f.message+"\n"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout((function(){throw c}))}}var Mi="function"==typeof WeakMap?WeakMap:Map;function Ni(a,b,c){(c=mh(-1,c)).tag=3,c.payload={element:null};var d=b.value;return c.callback=function(){Oi||(Oi=!0,Pi=d),Li(0,b)},c}function Qi(a,b,c){(c=mh(-1,c)).tag=3;var d=a.type.getDerivedStateFromError;if("function"==typeof d){var e=b.value;c.payload=function(){return d(e)},c.callback=function(){Li(0,b)}}var f=a.stateNode;return null!==f&&"function"==typeof f.componentDidCatch&&(c.callback=function(){Li(0,b),"function"!=typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})}),c}function Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else void 0===(e=d.get(b))&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if((b=13===a.tag)&&(b=null===(b=a.memoizedState)||null!==b.dehydrated),b)return a;a=a.return}while(null!==a);return null}function Vi(a,b,c,d,e){return 1&a.mode?(a.flags|=65536,a.lanes=e,a):(a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:((b=mh(-1,1)).tag=2,nh(c,b,1))),c.lanes|=1),a)}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}function Yi(a,b,c,d,e){c=c.render;var f=b.ref;return ch(b,e),d=Nh(a,b,c,d,f,e),c=Sh(),null===a||dh?(I&&c&&vg(b),b.flags|=1,Xi(a,b,d,e),b.child):(b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e))}function $i(a,b,c,d,e){if(null===a){var f=c.type;return"function"!=typeof f||aj(f)||void 0!==f.defaultProps||null!==c.compare||void 0!==c.defaultProps?((a=Rg(c.type,null,d,b,b.mode,e)).ref=b.ref,a.return=b,b.child=a):(b.tag=15,b.type=f,bj(a,b,f,d,e))}if(f=a.child,!(a.lanes&e)){var g=f.memoizedProps;if((c=null!==(c=c.compare)?c:Ie)(g,d)&&a.ref===b.ref)return Zi(a,b,e)}return b.flags|=1,(a=Pg(f,d)).ref=b.ref,a.return=b,b.child=a}function bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref){if(dh=!1,b.pendingProps=d=f,!(a.lanes&e))return b.lanes=a.lanes,Zi(a,b,e);131072&a.flags&&(dh=!0)}}return cj(a,b,c,d,e)}function dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode)if(1&b.mode){if(!(1073741824&c))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null},d=null!==f?f.baseLanes:c,G(ej,fj),fj|=d}else b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;return Xi(a,b,e,c),b.child}function gj(a,b){var c=b.ref;(null===a&&null!==c||null!==a&&a.ref!==c)&&(b.flags|=512,b.flags|=2097152)}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;return f=Yf(b,f),ch(b,e),c=Nh(a,b,c,d,f,e),d=Sh(),null===a||dh?(I&&d&&vg(b),b.flags|=1,Xi(a,b,c,e),b.child):(b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e))}function hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;if(ch(b,e),null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"==typeof l&&null!==l?l=eh(l):l=Yf(b,l=Zf(c)?Xf:H.current);var m=c.getDerivedStateFromProps,q="function"==typeof m||"function"==typeof g.getSnapshotBeforeUpdate;q||"function"!=typeof g.UNSAFE_componentWillReceiveProps&&"function"!=typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Hi(b,g,d,l),jh=!1;var r=b.memoizedState;g.state=r,qh(b,d,g,e),k=b.memoizedState,h!==d||r!==k||Wf.current||jh?("function"==typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||"function"!=typeof g.UNSAFE_componentWillMount&&"function"!=typeof g.componentWillMount||("function"==typeof g.componentWillMount&&g.componentWillMount(),"function"==typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"==typeof g.componentDidMount&&(b.flags|=4194308)):("function"==typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"==typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode,lh(a,b),h=b.memoizedProps,l=b.type===b.elementType?h:Ci(b.type,h),g.props=l,q=b.pendingProps,r=g.context,"object"==typeof(k=c.contextType)&&null!==k?k=eh(k):k=Yf(b,k=Zf(c)?Xf:H.current);var y=c.getDerivedStateFromProps;(m="function"==typeof y||"function"==typeof g.getSnapshotBeforeUpdate)||"function"!=typeof g.UNSAFE_componentWillReceiveProps&&"function"!=typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k),jh=!1,r=b.memoizedState,g.state=r,qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?("function"==typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||"function"!=typeof g.UNSAFE_componentWillUpdate&&"function"!=typeof g.componentWillUpdate||("function"==typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),"function"==typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,n,k)),"function"==typeof g.componentDidUpdate&&(b.flags|=4),"function"==typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):("function"!=typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),"function"!=typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):("function"!=typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),"function"!=typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}function jj(a,b,c,d,e,f){gj(a,b);var g=!!(128&b.flags);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode,Wi.current=b;var h=g&&"function"!=typeof c.getDerivedStateFromError?null:d.render();return b.flags|=1,null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f),b.memoizedState=d.state,e&&dg(b,c,!0),b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(0,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(0,b.context,!1),yh(a,b.containerInfo)}function lj(a,b,c,d,e){return Ig(),Jg(e),b.flags|=256,Xi(a,b,c,d),b.child}var zj,Aj,Bj,Cj,mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}function oj(a,b,c){var h,d=b.pendingProps,e=L.current,f=!1,g=!!(128&b.flags);if((h=g)||(h=(null===a||null!==a.memoizedState)&&!!(2&e)),h?(f=!0,b.flags&=-129):null!==a&&null===a.memoizedState||(e|=1),G(L,1&e),null===a)return Eg(b),null!==(a=b.memoizedState)&&null!==(a=a.dehydrated)?(1&b.mode?"$!"===a.data?b.lanes=8:b.lanes=1073741824:b.lanes=1,null):(g=d.children,a=d.fallback,f?(d=b.mode,f=b.child,g={mode:"hidden",children:g},1&d||null===f?f=pj(g,d,0,null):(f.childLanes=0,f.pendingProps=g),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g));if(null!==(e=a.memoizedState)&&null!==(h=e.dehydrated))return function rj(a,b,c,d,e,f,g){if(c)return 256&b.flags?(b.flags&=-257,sj(a,b,g,d=Ki(Error(p(422))))):null!==b.memoizedState?(b.child=a.child,b.flags|=128,null):(f=d.fallback,e=b.mode,d=pj({mode:"visible",children:d.children},e,0,null),(f=Tg(f,e,g,null)).flags|=2,d.return=b,f.return=b,d.sibling=f,b.child=d,1&b.mode&&Ug(b,a.child,null,g),b.child.memoizedState=nj(g),b.memoizedState=mj,f);if(!(1&b.mode))return sj(a,b,g,null);if("$!"===e.data){if(d=e.nextSibling&&e.nextSibling.dataset)var h=d.dgst;return d=h,sj(a,b,g,d=Ki(f=Error(p(419)),d,void 0))}if(h=!!(g&a.childLanes),dh||h){if(null!==(d=Q)){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}0!==(e=e&(d.suspendedLanes|g)?0:e)&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}return tj(),sj(a,b,g,d=Ki(Error(p(421))))}return"$?"===e.data?(b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null):(a=f.treeContext,yg=Lf(e.nextSibling),xg=b,I=!0,zg=null,null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b),b=qj(b,d.children),b.flags|=4096,b)}(a,b,g,d,h,e,c);if(f){f=d.fallback,g=b.mode,h=(e=a.child).sibling;var k={mode:"hidden",children:d.children};return 1&g||b.child===e?(d=Pg(e,k)).subtreeFlags=14680064&e.subtreeFlags:((d=b.child).childLanes=0,d.pendingProps=k,b.deletions=null),null!==h?f=Pg(h,f):(f=Tg(f,g,c,null)).flags|=2,f.return=b,d.return=b,d.sibling=f,b.child=d,d=f,f=b.child,g=null===(g=a.child.memoizedState)?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions},f.memoizedState=g,f.childLanes=a.childLanes&~c,b.memoizedState=mj,d}return a=(f=a.child).sibling,d=Pg(f,{mode:"visible",children:d.children}),!(1&b.mode)&&(d.lanes=c),d.return=b,d.sibling=null,null!==a&&(null===(c=b.deletions)?(b.deletions=[a],b.flags|=16):c.push(a)),b.child=d,b.memoizedState=null,d}function qj(a,b){return(b=pj({mode:"visible",children:b},a.mode,0,null)).return=a,a.child=b}function sj(a,b,c,d){return null!==d&&Jg(d),Ug(b,a.child,null,c),(a=qj(b,b.pendingProps.children)).flags|=2,b.memoizedState=null,a}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b),bh(a.return,b,c)}function wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}function xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;if(Xi(a,b,d.children,c),2&(d=L.current))d=1&d|2,b.flags|=128;else{if(null!==a&&128&a.flags)a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a,a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return,a=a.sibling}d&=1}if(G(L,d),1&b.mode)switch(e){case"forwards":for(c=b.child,e=null;null!==c;)null!==(a=c.alternate)&&null===Ch(a)&&(e=c),c=c.sibling;null===(c=e)?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null),wj(b,!1,e,c,f);break;case"backwards":for(c=null,e=b.child,b.child=null;null!==e;){if(null!==(a=e.alternate)&&null===Ch(a)){b.child=e;break}a=e.sibling,e.sibling=c,c=e,e=a}wj(b,!0,c,null,f);break;case"together":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}else b.memoizedState=null;return b.child}function ij(a,b){!(1&b.mode)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){if(null!==a&&(b.dependencies=a.dependencies),rh|=b.lanes,!(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){for(c=Pg(a=b.child,a.pendingProps),b.child=c,c.return=b;null!==a.sibling;)a=a.sibling,(c=c.sibling=Pg(a,a.pendingProps)).return=b;c.sibling=null}return b.child}function Dj(a,b){if(!I)switch(a.tailMode){case"hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case"collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}function S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=14680064&e.subtreeFlags,d|=14680064&e.flags,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;return a.subtreeFlags|=d,a.childLanes=c,b}function Ej(a,b,c){var d=b.pendingProps;switch(wg(b),b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:case 17:return Zf(b.type)&&$f(),S(b),null;case 3:return d=b.stateNode,zh(),E(Wf),E(H),Eh(),d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null),null!==a&&null!==a.child||(Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&!(256&b.flags)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null))),Aj(a,b),S(b),null;case 5:Bh(b);var e=xh(wh.current);if(c=b.type,null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));return S(b),null}if(a=xh(uh.current),Gg(b)){d=b.stateNode,c=b.type;var f=b.memoizedProps;switch(d[Of]=b,d[Pf]=f,a=!!(1&b.mode),c){case"dialog":D("cancel",d),D("close",d);break;case"iframe":case"object":case"embed":D("load",d);break;case"video":case"audio":for(e=0;e<lf.length;e++)D(lf[e],d);break;case"source":D("error",d);break;case"img":case"image":case"link":D("error",d),D("load",d);break;case"details":D("toggle",d);break;case"input":Za(d,f),D("invalid",d);break;case"select":d._wrapperState={wasMultiple:!!f.multiple},D("invalid",d);break;case"textarea":hb(d,f),D("invalid",d)}for(var g in ub(c,f),e=null,f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"==typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=["children",h]):"number"==typeof h&&d.textContent!==""+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=["children",""+h]):ea.hasOwnProperty(g)&&null!=h&&"onScroll"===g&&D("scroll",d)}switch(c){case"input":Va(d),db(d,f,!0);break;case"textarea":Va(d),jb(d);break;case"select":case"option":break;default:"function"==typeof f.onClick&&(d.onclick=Bf)}d=e,b.updateQueue=d,null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument,"http://www.w3.org/1999/xhtml"===a&&(a=kb(c)),"http://www.w3.org/1999/xhtml"===a?"script"===c?((a=g.createElement("div")).innerHTML="<script><\/script>",a=a.removeChild(a.firstChild)):"string"==typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),"select"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c),a[Of]=b,a[Pf]=d,zj(a,b,!1,!1),b.stateNode=a;a:{switch(g=vb(c,d),c){case"dialog":D("cancel",a),D("close",a),e=d;break;case"iframe":case"object":case"embed":D("load",a),e=d;break;case"video":case"audio":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case"source":D("error",a),e=d;break;case"img":case"image":case"link":D("error",a),D("load",a),e=d;break;case"details":D("toggle",a),e=d;break;case"input":Za(a,d),e=Ya(a,d),D("invalid",a);break;case"option":default:e=d;break;case"select":a._wrapperState={wasMultiple:!!d.multiple},e=A({},d,{value:void 0}),D("invalid",a);break;case"textarea":hb(a,d),e=gb(a,d),D("invalid",a)}for(f in ub(c,e),h=e)if(h.hasOwnProperty(f)){var k=h[f];"style"===f?sb(a,k):"dangerouslySetInnerHTML"===f?null!=(k=k?k.__html:void 0)&&nb(a,k):"children"===f?"string"==typeof k?("textarea"!==c||""!==k)&&ob(a,k):"number"==typeof k&&ob(a,""+k):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(ea.hasOwnProperty(f)?null!=k&&"onScroll"===f&&D("scroll",a):null!=k&&ta(a,f,k,g))}switch(c){case"input":Va(a),db(a,d,!1);break;case"textarea":Va(a),jb(a);break;case"option":null!=d.value&&a.setAttribute("value",""+Sa(d.value));break;case"select":a.multiple=!!d.multiple,null!=(f=d.value)?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:"function"==typeof e.onClick&&(a.onclick=Bf)}switch(c){case"button":case"input":case"select":case"textarea":d=!!d.autoFocus;break a;case"img":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}return S(b),null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if("string"!=typeof d&&null===b.stateNode)throw Error(p(166));if(c=xh(wh.current),xh(uh.current),Gg(b)){if(d=b.stateNode,c=b.memoizedProps,d[Of]=b,(f=d.nodeValue!==c)&&null!==(a=xg))switch(a.tag){case 3:Af(d.nodeValue,c,!!(1&a.mode));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,!!(1&a.mode))}f&&(b.flags|=4)}else(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d))[Of]=b,b.stateNode=d}return S(b),null;case 13:if(E(L),d=b.memoizedState,null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&1&b.mode&&!(128&b.flags))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===a){if(!f)throw Error(p(318));if(!(f=null!==(f=b.memoizedState)?f.dehydrated:null))throw Error(p(317));f[Of]=b}else Ig(),!(128&b.flags)&&(b.memoizedState=null),b.flags|=4;S(b),f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return 65536&b.flags?b:null}return 128&b.flags?(b.lanes=c,b):((d=null!==d)!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,1&b.mode&&(null===a||1&L.current?0===T&&(T=3):tj())),null!==b.updateQueue&&(b.flags|=4),S(b),null);case 4:return zh(),Aj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 19:if(E(L),null===(f=b.memoizedState))return S(b),null;if(d=!!(128&b.flags),null===(g=f.rendering))if(d)Dj(f,!1);else{if(0!==T||null!==a&&128&a.flags)for(a=b.child;null!==a;){if(null!==(g=Ch(a))){for(b.flags|=128,Dj(f,!1),null!==(d=g.updateQueue)&&(b.updateQueue=d,b.flags|=4),b.subtreeFlags=0,d=c,c=b.child;null!==c;)a=d,(f=c).flags&=14680066,null===(g=f.alternate)?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;return G(L,1&L.current|2),b.child}a=a.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(null!==(a=Ch(g))){if(b.flags|=128,d=!0,null!==(c=a.updateQueue)&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&"hidden"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(null!==(c=f.last)?c.sibling=g:b.child=g,f.last=g)}return null!==f.tail?(b=f.tail,f.rendering=b,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?1&c|2:1&c),b):(S(b),null);case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&1&b.mode?!!(1073741824&fj)&&(S(b),6&b.subtreeFlags&&(b.flags|=8192)):S(b),null;case 24:case 25:return null}throw Error(p(156,b.tag))}function Ij(a,b){switch(wg(b),b.tag){case 1:return Zf(b.type)&&$f(),65536&(a=b.flags)?(b.flags=-65537&a|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),65536&(a=b.flags)&&!(128&a)?(b.flags=-65537&a|128,b):null;case 5:return Bh(b),null;case 13:if(E(L),null!==(a=b.memoizedState)&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}return 65536&(a=b.flags)?(b.flags=-65537&a|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),null;default:return null}}zj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c,c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return,c=c.sibling}},Aj=function(){},Bj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode,xh(uh.current);var g,f=null;switch(c){case"input":e=Ya(a,e),d=Ya(a,d),f=[];break;case"select":e=A({},e,{value:void 0}),d=A({},d,{value:void 0}),f=[];break;case"textarea":e=gb(a,e),d=gb(a,d),f=[];break;default:"function"!=typeof e.onClick&&"function"==typeof d.onClick&&(a.onclick=Bf)}for(l in ub(c,d),c=null,e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if("style"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];if(h=null!=e?e[l]:void 0,d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if("style"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]="");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else"dangerouslySetInnerHTML"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):"children"===l?"string"!=typeof k&&"number"!=typeof k||(f=f||[]).push(l,""+k):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(ea.hasOwnProperty(l)?(null!=k&&"onScroll"===l&&D("scroll",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push("style",c);var l=f;(b.updateQueue=l)&&(b.flags|=4)}},Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};var Jj=!1,U=!1,Kj="function"==typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if("function"==typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;function Pj(a,b,c){var d=b.updateQueue;if(null!==(d=null!==d?d.lastEffect:null)){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0,void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){if(null!==(b=null!==(b=b.updateQueue)?b.lastEffect:null)){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;a.tag,a=c,"function"==typeof b?b(a):b.current=a}}function Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b)),a.child=null,a.deletions=null,a.sibling=null,5===a.tag&&(null!==(b=a.stateNode)&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf])),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}function Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(2&a.flags)continue a;if(null===a.child||4===a.tag)continue a;a.child.return=a,a=a.child}if(!(2&a.flags))return a.stateNode}}function Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode).insertBefore(a,c):(b=c).appendChild(a),null!=(c=c._reactRootContainer)||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&null!==(a=a.child))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}function Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&null!==(a=a.child))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}function Zj(a,b,c){if(lc&&"function"==typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null,Yj(a,b,c),Xj=e,null!==(X=d)&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X,e=Xj,X=c.stateNode.containerInfo,Xj=!0,Yj(a,b,c),X=d,Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(null!==(d=c.updateQueue)&&null!==(d=d.lastEffect))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag,void 0!==g&&(2&f||4&f)&&Mj(c,b,g),e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),"function"==typeof(d=c.stateNode).componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:1&c.mode?(U=(d=U)||null!==c.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj),b.forEach((function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))}))}}function ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode,Xj=!1;break a;case 3:case 4:X=h.stateNode.containerInfo,Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e),X=null,Xj=!1;var k=e.alternate;null!==k&&(k.return=null),e.return=null}catch(l){W(e,b,l)}}if(12854&b.subtreeFlags)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}function dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:if(ck(b,a),ek(a),4&d){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a),ek(a),512&d&&null!==c&&Lj(c,c.return);break;case 5:if(ck(b,a),ek(a),512&d&&null!==c&&Lj(c,c.return),32&a.flags){var e=a.stateNode;try{ob(e,"")}catch(t){W(a,a.return,t)}}if(4&d&&null!=(e=a.stateNode)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;if(a.updateQueue=null,null!==k)try{"input"===h&&"radio"===f.type&&null!=f.name&&ab(e,f),vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];"style"===m?sb(e,q):"dangerouslySetInnerHTML"===m?nb(e,q):"children"===m?ob(e,q):ta(e,m,q,l)}switch(h){case"input":bb(e,f);break;case"textarea":ib(e,f);break;case"select":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,f.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:"",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:if(ck(b,a),ek(a),4&d){if(null===a.stateNode)throw Error(p(162));e=a.stateNode,f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:if(ck(b,a),ek(a),4&d&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:default:ck(b,a),ek(a);break;case 13:ck(b,a),ek(a),8192&(e=a.child).flags&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||null!==e.alternate&&null!==e.alternate.memoizedState||(fk=B())),4&d&&ak(a);break;case 22:if(m=null!==c&&null!==c.memoizedState,1&a.mode?(U=(l=U)||m,ck(b,a),U=l):ck(b,a),ek(a),8192&d){if(l=null!==a.memoizedState,(a.stateNode.isHidden=l)&&!m&&1&a.mode)for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){switch(y=(r=V).child,r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if("function"==typeof n.componentWillUnmount){d=r,c=r.return;try{b=d,n.props=b.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?"function"==typeof(f=e.style).setProperty?f.setProperty("display","none","important"):f.display="none":(h=q.stateNode,g=null!=(k=q.memoizedProps.style)&&k.hasOwnProperty("display")?k.display:null,h.style.display=rb("display",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?"":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q,q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null),q=q.return}m===q&&(m=null),q.sibling.return=q.return,q=q.sibling}}break;case 19:ck(b,a),ek(a),4&d&&ak(a);case 21:}}function ek(a){var b=a.flags;if(2&b){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160))}switch(d.tag){case 5:var e=d.stateNode;32&d.flags&&(ob(e,""),d.flags&=-33),Wj(a,Uj(a),e);break;case 3:case 4:var g=d.stateNode.containerInfo;Vj(a,Uj(a),g);break;default:throw Error(p(161))}}catch(k){W(a,a.return,k)}a.flags&=-3}4096&b&&(a.flags&=-4097)}function hk(a,b,c){V=a,ik(a,b,c)}function ik(a,b,c){for(var d=!!(1&a.mode);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;if(Jj=g,(U=k)&&!l)for(V=e;null!==V;)k=(g=V).child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e,Jj=h,U=l}kk(a)}else 8772&e.subtreeFlags&&null!==f?(f.return=e,V=f):kk(a)}}function kk(a){for(;null!==V;){var b=V;if(8772&b.flags){var c=b.alternate;try{if(8772&b.flags)switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(4&b.flags&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){if(c=null,null!==b.child)switch(b.child.tag){case 5:case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&4&b.flags){c=h;var k=b.memoizedProps;switch(b.type){case"button":case"input":case"select":case"textarea":k.autoFocus&&c.focus();break;case"img":k.src&&(c.src=k.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;default:throw Error(p(163))}U||512&b.flags&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}if(null!==(c=b.sibling)){c.return=b.return,V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return,V=c;break}V=b.return}}function jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if("function"==typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return,V=h;break}V=b.return}}var Vk,lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=1/0,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 6&K?B():-1!==Ak?Ak:Ak=B()}function yi(a){return 1&a.mode?2&K&&0!==Z?Z&-Z:null!==Kg.transition?(0===Bk&&(Bk=yc()),Bk):0!==(a=C)?a:a=void 0===(a=window.event)?16:jd(a.type):1}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d),2&K&&a===Q||(a===Q&&(!(2&K)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&!(1&b.mode)&&(Gj=B()+500,fg&&jg()))}function Dk(a,b){var c=a.callbackNode;!function wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];-1===k?h&c&&!(h&d)||(e[g]=vc(h,b)):k<=b&&(a.expiredLanes|=h),f&=~h}}(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){if(null!=c&&bc(c),1===b)0===a.tag?function ig(a){fg=!0,hg(a)}(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf((function(){!(6&K)&&jg()})),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:default:c=hc;break;case 536870912:c=jc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b,a.callbackNode=c}}function Gk(a,b){if(Ak=-1,Bk=0,6&K)throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(30&d||d&a.expiredLanes||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();for(Q===a&&Z===b||(uk=null,Gj=B()+500,Kk(a,b));;)try{Lk();break}catch(h){Mk(a,h)}$g(),mk.current=f,K=e,null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){if(2===b&&(0!==(e=xc(a))&&(d=e,b=Nk(a,e))),1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);else{if(e=a.current.alternate,!(30&d||function Ok(a){for(var b=a;;){if(16384&b.flags){var c=b.updateQueue;if(null!==c&&null!==(c=c.stores))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}if(c=b.child,16384&b.subtreeFlags&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return,b=b.sibling}}return!0}(e)||(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1!==b)))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;switch(a.finishedWork=e,a.finishedLanes=d,b){case 0:case 1:throw Error(p(345));case 2:case 5:Pk(a,tk,uk);break;case 3:if(Ck(a,d),(130023424&d)===d&&10<(b=fk+500-B())){if(0!==uc(a,0))break;if(((e=a.suspendedLanes)&d)!==d){R(),a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:if(Ck(a,d),(4194240&d)===d)break;for(b=a.eventTimes,e=-1;0<d;){var g=31-oc(d);f=1<<g,(g=b[g])>e&&(e=g),d&=~f}if(d=e,10<(d=(120>(d=B()-d)?120:480>d?480:1080>d?1080:1920>d?1920:3e3>d?3e3:4320>d?4320:1960*lk(d/1960))-d)){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;default:throw Error(p(329))}}}return Dk(a,B()),a.callbackNode===c?Gk.bind(null,a):null}function Nk(a,b){var c=sk;return a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256),2!==(a=Ik(a,b))&&(b=tk,tk=c,null!==b&&Fj(b)),a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}function Ck(a,b){for(b&=~rk,b&=~qk,a.suspendedLanes|=b,a.pingedLanes&=~b,a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1,b&=~d}}function Ek(a){if(6&K)throw Error(p(327));Hk();var b=uc(a,0);if(!(1&b))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));return a.finishedWork=a.current.alternate,a.finishedLanes=b,Pk(a,tk,uk),Dk(a,B()),null}function Qk(a,b){var c=K;K|=1;try{return a(b)}finally{0===(K=c)&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&!(6&K)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,!(6&(K=b))&&jg()}}function Hj(){fj=ej.current,E(ej)}function Kk(a,b){a.finishedWork=null,a.finishedLanes=0;var c=a.timeoutHandle;if(-1!==c&&(a.timeoutHandle=-1,Gf(c)),null!==Y)for(c=Y.return;null!==c;){var d=c;switch(wg(d),d.tag){case 1:null!=(d=d.type.childContextTypes)&&$f();break;case 3:zh(),E(Wf),E(H),Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}if(Q=a,Y=a=Pg(a.current,null),Z=fj=b,T=0,pk=null,rk=qk=rh=0,tk=sk=null,null!==fh){for(b=0;b<fh.length;b++)if(null!==(d=(c=fh[b]).interleaved)){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e,d.next=g}c.pending=d}fh=null}return a}function Mk(a,b){for(;;){var c=Y;try{if($g(),Fh.current=Rh,Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null),d=d.next}Ih=!1}if(Hh=0,O=N=M=null,Jh=!1,Kh=0,nk.current=null,null===c||null===c.return){T=1,pk=b,Y=null;break}a:{var f=a,g=c.return,h=c,k=b;if(b=Z,h.flags|=32768,null!==k&&"object"==typeof k&&"function"==typeof k.then){var l=k,m=h,q=m.tag;if(!(1&m.mode||0!==q&&11!==q&&15!==q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,m.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257,Vi(y,g,h,0,b),1&y.mode&&Si(f,l,b),k=l;var n=(b=y).updateQueue;if(null===n){var t=new Set;t.add(k),b.updateQueue=t}else n.add(k);break a}if(!(1&b)){Si(f,l,b),tj();break a}k=Error(p(426))}else if(I&&1&h.mode){var J=Ui(g);if(null!==J){!(65536&J.flags)&&(J.flags|=256),Vi(J,g,h,0,b),Jg(Ji(k,h));break a}}f=k=Ji(k,h),4!==T&&(T=2),null===sk?sk=[f]:sk.push(f),f=g;do{switch(f.tag){case 3:f.flags|=65536,b&=-b,f.lanes|=b,ph(f,Ni(0,k,b));break a;case 1:h=k;var w=f.type,u=f.stateNode;if(!(128&f.flags||"function"!=typeof w.getDerivedStateFromError&&(null===u||"function"!=typeof u.componentDidCatch||null!==Ri&&Ri.has(u)))){f.flags|=65536,b&=-b,f.lanes|=b,ph(f,Qi(f,h,b));break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na,Y===c&&null!==c&&(Y=c=c.return);continue}break}}function Jk(){var a=mk.current;return mk.current=Rh,null===a?Rh:a}function tj(){0!==T&&3!==T&&2!==T||(T=4),null===Q||!(268435455&rh)&&!(268435455&qk)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();for(Q===a&&Z===b||(uk=null,Kk(a,b));;)try{Tk();break}catch(e){Mk(a,e)}if($g(),K=c,mk.current=d,null!==Y)throw Error(p(261));return Q=null,Z=0,T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps,null===b?Sk(a):Y=b,nk.current=null}function Sk(a){var b=a;do{var c=b.alternate;if(a=b.return,32768&b.flags){if(null!==(c=Ij(c,b)))return c.flags&=32767,void(Y=c);if(null===a)return T=6,void(Y=null);a.flags|=32768,a.subtreeFlags=0,a.deletions=null}else if(null!==(c=Ej(c,b,fj)))return void(Y=c);if(null!==(b=b.sibling))return void(Y=b);Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,function Wk(a,b,c,d){do{Hk()}while(null!==wk);if(6&K)throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;if(a.finishedWork=null,a.finishedLanes=0,c===a.current)throw Error(p(177));a.callbackNode=null,a.callbackPriority=0;var f=c.lanes|c.childLanes;if(function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b,a.suspendedLanes=0,a.pingedLanes=0,a.expiredLanes&=b,a.mutableReadLanes&=b,a.entangledLanes&=b,b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0,d[e]=-1,a[e]=-1,c&=~f}}(a,f),a===Q&&(Y=Q=null,Z=0),!(2064&c.subtreeFlags)&&!(2064&c.flags)||vk||(vk=!0,Fk(hc,(function(){return Hk(),null}))),f=!!(15990&c.flags),!!(15990&c.subtreeFlags)||f){f=ok.transition,ok.transition=null;var g=C;C=1;var h=K;K|=4,nk.current=null,function Oj(a,b){if(Cf=dd,Ne(a=Me())){if("selectionStart"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{var d=(c=(c=a.ownerDocument)&&c.defaultView||window).getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;q!==c||0!==e&&3!==q.nodeType||(h=g+e),q!==f||0!==d&&3!==q.nodeType||(k=g+d),3===q.nodeType&&(g+=q.nodeValue.length),null!==(y=q.firstChild);)r=q,q=y;for(;;){if(q===a)break b;if(r===c&&++l===e&&(h=g),r===f&&++m===d&&(k=g),null!==(y=q.nextSibling))break;r=(q=r).parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;for(Df={focusedElem:a,selectionRange:c},dd=!1,V=b;null!==V;)if(a=(b=V).child,1028&b.subtreeFlags&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(1024&b.flags)switch(b.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent="":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;default:throw Error(p(163))}}catch(F){W(b,b.return,F)}if(null!==(a=b.sibling)){a.return=b.return,V=a;break}V=b.return}return n=Nj,Nj=!1,n}(a,c),dk(c,a),Oe(Df),dd=!!Cf,Df=Cf=null,a.current=c,hk(c,a,e),dc(),K=h,C=g,ok.transition=f}else a.current=c;if(vk&&(vk=!1,wk=a,xk=e),f=a.pendingLanes,0===f&&(Ri=null),function mc(a){if(lc&&"function"==typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,!(128&~a.current.flags))}catch(b){}}(c.stateNode),Dk(a,B()),null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;return!!(1&xk)&&0!==a.tag&&Hk(),f=a.pendingLanes,1&f?a===zk?yk++:(yk=0,zk=a):yk=0,jg(),null}(a,b,c,d)}finally{ok.transition=e,C=d}return null}function Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{if(ok.transition=null,C=16>a?16:a,null===wk)var d=!1;else{if(a=wk,wk=null,xk=0,6&K)throw Error(p(331));var e=K;for(K|=4,V=a.current;null!==V;){var f=V,g=f.child;if(16&V.flags){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){var r=(m=V).sibling,y=m.return;if(Sj(m),m===l){V=null;break}if(null!==r){r.return=y,V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null,t=J}while(null!==t)}}V=f}}if(2064&f.subtreeFlags&&null!==g)g.return=f,V=g;else b:for(;null!==V;){if(2048&(f=V).flags)switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return,V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){var u=(g=V).child;if(2064&g.subtreeFlags&&null!==u)u.return=g,V=u;else b:for(g=w;null!==V;){if(2048&(h=V).flags)try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return,V=F;break b}V=h.return}}if(K=e,jg(),lc&&"function"==typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){a=nh(a,b=Ni(0,b=Ji(c,b),1),1),b=R(),null!==a&&(Ac(a,1,b),Dk(a,b))}function W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}if(1===b.tag){var d=b.stateNode;if("function"==typeof b.type.getDerivedStateFromError||"function"==typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){b=nh(b,a=Qi(b,a=Ji(c,a),1),1),a=R(),null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}function Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b),b=R(),a.pingedLanes|=a.suspendedLanes&c,Q===a&&(Z&c)===c&&(4===T||3===T&&(130023424&Z)===Z&&500>B()-fk?Kk(a,0):rk|=c),Dk(a,b)}function Yk(a,b){0===b&&(1&a.mode?(b=sc,!(130023424&(sc<<=1))&&(sc=4194304)):b=1);var c=R();null!==(a=ih(a,b))&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane),Yk(a,c)}function bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode,e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314))}null!==d&&d.delete(b),Yk(a,c)}function Fk(a,b){return ac(a,b)}function $k(a,b,c,d){this.tag=a,this.key=c,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=b,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=d,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){return!(!(a=a.prototype)||!a.isReactComponent)}function Pg(a,b){var c=a.alternate;return null===c?((c=Bg(a.tag,b,a.key,a.mode)).elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null),c.flags=14680064&a.flags,c.childLanes=a.childLanes,c.lanes=a.lanes,c.child=a.child,c.memoizedProps=a.memoizedProps,c.memoizedState=a.memoizedState,c.updateQueue=a.updateQueue,b=a.dependencies,c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext},c.sibling=a.sibling,c.index=a.index,c.ref=a.ref,c}function Rg(a,b,c,d,e,f){var g=2;if(d=a,"function"==typeof a)aj(a)&&(g=1);else if("string"==typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8,e|=8;break;case Aa:return(a=Bg(12,c,b,2|e)).elementType=Aa,a.lanes=f,a;case Ea:return(a=Bg(13,c,b,e)).elementType=Ea,a.lanes=f,a;case Fa:return(a=Bg(19,c,b,e)).elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if("object"==typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;break a;case Ga:g=14;break a;case Ha:g=16,d=null;break a}throw Error(p(130,null==a?a:typeof a,""))}return(b=Bg(g,c,b,e)).elementType=a,b.type=d,b.lanes=f,b}function Tg(a,b,c,d){return(a=Bg(7,a,d,b)).lanes=c,a}function pj(a,b,c,d){return(a=Bg(22,a,d,b)).elementType=Ia,a.lanes=c,a.stateNode={isHidden:!1},a}function Qg(a,b,c){return(a=Bg(6,a,null,b)).lanes=c,a}function Sg(a,b,c){return(b=Bg(4,null!==a.children?a.children:[],a.key,b)).lanes=c,b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},b}function al(a,b,c,d,e){this.tag=b,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=zc(0),this.expirationTimes=zc(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=zc(0),this.identifierPrefix=d,this.onRecoverableError=e,this.mutableSourceEagerHydrationData=null}function bl(a,b,c,d,e,f,g,h,k){return a=new al(a,b,c,h,k),1===b?(b=1,!0===f&&(b|=8)):b=0,f=Bg(3,null,null,b),a.current=f,f.stateNode=a,f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null},kh(f),a}function dl(a){if(!a)return Vf;a:{if(Vb(a=a._reactInternals)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171))}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}function el(a,b,c,d,e,f,g,h,k){return(a=bl(c,d,!0,a,0,f,0,h,k)).context=dl(null),c=a.current,(f=mh(d=R(),e=yi(c))).callback=null!=b?b:null,nh(c,f,e),a.current.lanes=e,Ac(a,e,d),Dk(a,d),a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);return c=dl(c),null===b.context?b.context=c:b.pendingContext=c,(b=mh(f,g)).payload={element:a},null!==(d=void 0===d?null:d)&&(b.callback=d),null!==(a=nh(e,b,g))&&(gi(a,e,g,f),oh(a,e,g)),g}function gl(a){return(a=a.current).child?(a.child.tag,a.child.stateNode):null}function hl(a,b){if(null!==(a=a.memoizedState)&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b),(a=a.alternate)&&hl(a,b)}Vk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(!(a.lanes&c||128&b.flags))return dh=!1,function yj(a,b,c){switch(b.tag){case 3:kj(b),Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue),d._currentValue=e;break;case 13:if(null!==(d=b.memoizedState))return null!==d.dehydrated?(G(L,1&L.current),b.flags|=128,null):c&b.child.childLanes?oj(a,b,c):(G(L,1&L.current),null!==(a=Zi(a,b,c))?a.sibling:null);G(L,1&L.current);break;case 19:if(d=!!(c&b.childLanes),128&a.flags){if(d)return xj(a,b,c);b.flags|=128}if(null!==(e=b.memoizedState)&&(e.rendering=null,e.tail=null,e.lastEffect=null),G(L,L.current),d)break;return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}(a,b,c);dh=!!(131072&a.flags)}else dh=!1,I&&1048576&b.flags&&ug(b,ng,b.index);switch(b.lanes=0,b.tag){case 2:var d=b.type;ij(a,b),a=b.pendingProps;var e=Yf(b,H.current);ch(b,c),e=Nh(null,b,d,a,e,c);var f=Sh();return b.flags|=1,"object"==typeof e&&null!==e&&"function"==typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=null,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child),b;case 16:d=b.elementType;a:{switch(ij(a,b),a=b.pendingProps,d=(e=d._init)(d._payload),b.type=d,e=b.tag=function Zk(a){if("function"==typeof a)return aj(a)?1:0;if(null!=a){if((a=a.$$typeof)===Da)return 11;if(a===Ga)return 14}return 2}(d),a=Ci(d,a),e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,d,""))}return b;case 0:return d=b.type,e=b.pendingProps,cj(a,b,d,e=b.elementType===d?e:Ci(d,e),c);case 1:return d=b.type,e=b.pendingProps,hj(a,b,d,e=b.elementType===d?e:Ci(d,e),c);case 3:a:{if(kj(b),null===a)throw Error(p(387));d=b.pendingProps,e=(f=b.memoizedState).element,lh(a,b),qh(b,d,null,c);var g=b.memoizedState;if(d=g.element,f.isDehydrated){if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=f,b.memoizedState=f,256&b.flags){b=lj(a,b,d,c,e=Ji(Error(p(423)),b));break a}if(d!==e){b=lj(a,b,d,c,e=Ji(Error(p(424)),b));break a}for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=-3&c.flags|4096,c=c.sibling}else{if(Ig(),d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),gj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,Yi(a,b,d,e=b.elementType===d?e:Ci(d,e),c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{if(d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=e.value,G(Wg,d._currentValue),d._currentValue=g,null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(null!==(f=b.child)&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){(k=mh(-1,c&-c)).tag=2;var l=f.updateQueue;if(null!==l){var m=(l=l.shared).pending;null===m?k.next=k:(k.next=m.next,m.next=k),l.pending=k}}f.lanes|=c,null!==(k=f.alternate)&&(k.lanes|=c),bh(f.return,c,b),h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){if(null===(g=f.return))throw Error(p(341));g.lanes|=c,null!==(h=g.alternate)&&(h.lanes|=c),bh(g,c,b),g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}if(null!==(f=g.sibling)){f.return=g.return,g=f;break}g=g.return}f=g}Xi(a,b,e.children,c),b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),d=d(e=eh(e)),b.flags|=1,Xi(a,b,d,c),b.child;case 14:return e=Ci(d=b.type,b.pendingProps),$i(a,b,d,e=Ci(d.type,e),c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag))};var kl="function"==typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}function ml(a){this._internalRoot=a}function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function pl(){}function rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if("function"==typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=function ql(a,b,c,d,e){if(e){if("function"==typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,0,"",pl);return a._reactRootContainer=g,a[uf]=g.current,sf(8===a.nodeType?a.parentNode:a),Rk(),g}for(;e=a.lastChild;)a.removeChild(e);if("function"==typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,0,!1,0,"",pl);return a._reactRootContainer=k,a[uf]=k.current,sf(8===a.nodeType?a.parentNode:a),Rk((function(){fl(b,k,c,d)})),k}(c,b,a,e,d);return gl(g)}ml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)},ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk((function(){fl(null,a,null,null)})),b[uf]=null}},ml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a),0===c&&Vc(a)}},Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,1|c),Dk(b,B()),!(6&K)&&(Gj=B()+500,jg()))}break;case 13:Rk((function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}})),il(a,1)}},Fc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b)gi(b,a,134217728,R());il(a,134217728)}},Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c)gi(c,a,b,R());il(a,b)}},Hc=function(){return C},Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}},yb=function(a,b,c){switch(b){case"input":if(bb(a,c),b=c.name,"radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;for(c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]'),b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d),bb(d,e)}}}break;case"textarea":ib(a,c);break;case"select":null!=(b=c.value)&&fb(a,!!c.multiple,b,!1)}},Gb=Qk,Hb=Rk;var sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){return null===(a=Zb(a))?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||function jl(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl,exports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}(a,b,null,c)},exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d="",e=kl;return null!=b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError)),b=bl(a,1,!1,null,0,c,0,d,e),a[uf]=b.current,sf(8===a.nodeType?a.parentNode:a),new ll(b)},exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if("function"==typeof a.render)throw Error(p(188));throw a=Object.keys(a).join(","),Error(p(268,a))}return a=null===(a=Zb(b))?null:a.stateNode},exports.flushSync=function(a){return Rk(a)},exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)},exports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f="",g=kl;if(null!=c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError)),b=el(b,null,a,1,null!=c?c:null,e,0,f,g),a[uf]=b.current,sf(a),d)for(a=0;a<d.length;a++)e=(e=(c=d[a])._getVersion)(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,e);return new ml(b)},exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)},exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return!!a._reactRootContainer&&(Rk((function(){rl(null,null,a,!1,(function(){a._reactRootContainer=null,a[uf]=null}))})),!0)},exports.unstable_batchedUpdates=Qk,exports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)},exports.version="18.3.1-next-f1338f8080-20240426"},"../node_modules/.pnpm/react-dom@18.3.1_react@18.3.1/node_modules/react-dom/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";!function checkDCE(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE)}catch(err){console.error(err)}}(),module.exports=__webpack_require__("../node_modules/.pnpm/react-dom@18.3.1_react@18.3.1/node_modules/react-dom/cjs/react-dom.production.min.js")},"../node_modules/.pnpm/react-dom@18.3.1_react@18.3.1/node_modules/react-dom/test-utils.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("../node_modules/.pnpm/react-dom@18.3.1_react@18.3.1/node_modules/react-dom/cjs/react-dom-test-utils.production.min.js")},"../node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react.production.min.js":(__unused_webpack_module,exports)=>{"use strict";var l=Symbol.for("react.element"),n=Symbol.for("react.portal"),p=Symbol.for("react.fragment"),q=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),t=Symbol.for("react.provider"),u=Symbol.for("react.context"),v=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z=Symbol.iterator;var B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a,this.context=b,this.refs=D,this.updater=e||B}function F(){}function G(a,b,e){this.props=a,this.context=b,this.refs=D,this.updater=e||B}E.prototype.isReactComponent={},E.prototype.setState=function(a,b){if("object"!=typeof a&&"function"!=typeof a&&null!=a)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,a,b,"setState")},E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")},F.prototype=E.prototype;var H=G.prototype=new F;H.constructor=G,C(H,E.prototype),H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};function M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}function O(a){return"object"==typeof a&&null!==a&&a.$$typeof===l}var P=/\/+/g;function Q(a,b){return"object"==typeof a&&null!==a&&null!=a.key?function escape(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,(function(a){return b[a]}))}(""+a.key):b.toString(36)}function R(a,b,e,d,c){var k=typeof a;"undefined"!==k&&"boolean"!==k||(a=null);var h=!1;if(null===a)h=!0;else switch(k){case"string":case"number":h=!0;break;case"object":switch(a.$$typeof){case l:case n:h=!0}}if(h)return c=c(h=a),a=""===d?"."+Q(h,0):d,I(c)?(e="",null!=a&&(e=a.replace(P,"$&/")+"/"),R(c,b,e,"",(function(a){return a}))):null!=c&&(O(c)&&(c=function N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}(c,e+(!c.key||h&&h.key===c.key?"":(""+c.key).replace(P,"$&/")+"/")+a)),b.push(c)),1;if(h=0,d=""===d?".":d+":",I(a))for(var g=0;g<a.length;g++){var f=d+Q(k=a[g],g);h+=R(k,b,e,f,c)}else if(f=function A(a){return null===a||"object"!=typeof a?null:"function"==typeof(a=z&&a[z]||a["@@iterator"])?a:null}(a),"function"==typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)h+=R(k=k.value,b,e,f=d+Q(k,g++),c);else if("object"===k)throw b=String(a),Error("Objects are not valid as a React child (found: "+("[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b)+"). If you meant to render a collection of children, use an array instead.");return h}function S(a,b,e){if(null==a)return a;var d=[],c=0;return R(a,d,"","",(function(a){return b.call(e,a,c++)})),d}function T(a){if(-1===a._status){var b=a._result;(b=b()).then((function(b){0!==a._status&&-1!==a._status||(a._status=1,a._result=b)}),(function(b){0!==a._status&&-1!==a._status||(a._status=2,a._result=b)})),-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result}var U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error("act(...) is not supported in production builds of React.")}exports.Children={map:S,forEach:function(a,b,e){S(a,(function(){b.apply(this,arguments)}),e)},count:function(a){var b=0;return S(a,(function(){b++})),b},toArray:function(a){return S(a,(function(a){return a}))||[]},only:function(a){if(!O(a))throw Error("React.Children.only expected to receive a single React element child.");return a}},exports.Component=E,exports.Fragment=p,exports.Profiler=r,exports.PureComponent=G,exports.StrictMode=q,exports.Suspense=w,exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W,exports.act=X,exports.cloneElement=function(a,b,e){if(null==a)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+a+".");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){if(void 0!==b.ref&&(k=b.ref,h=K.current),void 0!==b.key&&(c=""+b.key),a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}},exports.createContext=function(a){return(a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:t,_context:a},a.Consumer=a},exports.createElement=M,exports.createFactory=function(a){var b=M.bind(null,a);return b.type=a,b},exports.createRef=function(){return{current:null}},exports.forwardRef=function(a){return{$$typeof:v,render:a}},exports.isValidElement=O,exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}},exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}},exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}},exports.unstable_act=X,exports.useCallback=function(a,b){return U.current.useCallback(a,b)},exports.useContext=function(a){return U.current.useContext(a)},exports.useDebugValue=function(){},exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)},exports.useEffect=function(a,b){return U.current.useEffect(a,b)},exports.useId=function(){return U.current.useId()},exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)},exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)},exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)},exports.useMemo=function(a,b){return U.current.useMemo(a,b)},exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)},exports.useRef=function(a){return U.current.useRef(a)},exports.useState=function(a){return U.current.useState(a)},exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)},exports.useTransition=function(){return U.current.useTransition()},exports.version="18.3.1"},"../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("../node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react.production.min.js")},"../node_modules/.pnpm/scheduler@0.23.2/node_modules/scheduler/cjs/scheduler.production.min.js":(__unused_webpack_module,exports)=>{"use strict";function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(!(0<g(e,b)))break a;a[d]=b,a[c]=e,c=d}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else{if(!(n<e&&0>g(x,c)))break a;a[d]=x,a[n]=c,d=n}}}return b}function g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D="function"==typeof setTimeout?setTimeout:null,E="function"==typeof clearTimeout?clearTimeout:null,F="undefined"!=typeof setImmediate?setImmediate:null;function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else{if(!(b.startTime<=a))break;k(t),b.sortIndex=b.expirationTime,f(r,b)}b=h(t)}}function H(a){if(B=!1,G(a),!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}function J(a,b){A=!1,B&&(B=!1,E(L),L=-1),z=!0;var c=y;try{for(G(b),v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if("function"==typeof d){v.callback=null,y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now(),"function"==typeof e?v.callback=e:v===h(r)&&k(r),G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b),w=!1}return w}finally{v=null,y=c,z=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,N=!1,O=null,L=-1,P=5,Q=-1;function M(){return!(exports.unstable_now()-Q<P)}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}if("function"==typeof F)S=function(){F(R)};else if("undefined"!=typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R,S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a,N||(N=!0,S())}function K(a,b){L=D((function(){a(exports.unstable_now())}),b)}exports.unstable_IdlePriority=5,exports.unstable_ImmediatePriority=1,exports.unstable_LowPriority=4,exports.unstable_NormalPriority=3,exports.unstable_Profiling=null,exports.unstable_UserBlockingPriority=2,exports.unstable_cancelCallback=function(a){a.callback=null},exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))},exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<a?Math.floor(1e3/a):5},exports.unstable_getCurrentPriorityLevel=function(){return y},exports.unstable_getFirstCallbackNode=function(){return h(r)},exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}},exports.unstable_pauseExecution=function(){},exports.unstable_requestPaint=function(){},exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}},exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();switch("object"==typeof c&&null!==c?c="number"==typeof(c=c.delay)&&0<c?d+c:d:c=d,a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1e4;break;default:e=5e3}return a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e=c+e,sortIndex:-1},c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J))),a},exports.unstable_shouldYield=M,exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}}},"../node_modules/.pnpm/scheduler@0.23.2/node_modules/scheduler/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("../node_modules/.pnpm/scheduler@0.23.2/node_modules/scheduler/cjs/scheduler.production.min.js")},"../node_modules/.pnpm/ts-dedent@2.0.0/node_modules/ts-dedent/dist/index.js":(__unused_webpack_module,exports)=>{"use strict";function dedent(templ){for(var values=[],_i=1;_i<arguments.length;_i++)values[_i-1]=arguments[_i];var strings=Array.from("string"==typeof templ?[templ]:templ.raw);strings[strings.length-1]=strings[strings.length-1].replace(/\r?\n([\t ]*)$/,"");var indentLengths=strings.reduce((function(arr,str){var matches=str.match(/\n([\t ]+|(?!\s).)/g);return matches?arr.concat(matches.map((function(match){var _a,_b;return null!==(_b=null===(_a=match.match(/[\t ]/g))||void 0===_a?void 0:_a.length)&&void 0!==_b?_b:0}))):arr}),[]);if(indentLengths.length){var pattern_1=new RegExp("\n[\t ]{"+Math.min.apply(Math,indentLengths)+"}","g");strings=strings.map((function(str){return str.replace(pattern_1,"\n")}))}strings[0]=strings[0].replace(/^\r?\n/,"");var string=strings[0];return values.forEach((function(value,i){string+=value+strings[i+1]})),string}exports.TW=void 0,exports.TW=dedent}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,